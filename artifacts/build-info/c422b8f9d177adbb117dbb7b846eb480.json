{
	"id": "c422b8f9d177adbb117dbb7b846eb480",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"TokenBound/ERC6551Account.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\n\r\npragma solidity 0.8.18;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/interfaces/IERC1271.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\";\r\n\r\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\";\r\nimport \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\r\nimport \"./interfaces/IERC6551Account.sol\";\r\n\r\nimport \"./lib/MinimalReceiver.sol\";\r\nimport \"./lib/ERC6551AccountLib.sol\";\r\n\r\ncontract ERC6551Account is IERC165, IERC1271, IERC6551Account {\r\n    uint256 public nonce;\r\n\r\n    receive() external payable {}\r\n\r\n    function executeCall(\r\n        address to,\r\n        uint256 value,\r\n        bytes calldata data\r\n    ) external payable returns (bytes memory result) {\r\n        require(msg.sender == owner(), \"Not token owner\");\r\n\r\n        ++nonce;\r\n\r\n        emit TransactionExecuted(to, value, data);\r\n\r\n        bool success;\r\n        (success, result) = to.call{value: value}(data);\r\n\r\n        if (!success) {\r\n            assembly {\r\n                revert(add(result, 32), mload(result))\r\n            }\r\n        }\r\n    }\r\n\r\n    function token()\r\n        external\r\n        view\r\n        returns (\r\n            uint256,\r\n            address,\r\n            uint256\r\n        )\r\n    {\r\n        return ERC6551AccountLib.token();\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        (uint256 chainId, address tokenContract, uint256 tokenId) = this.token();\r\n        if (chainId != block.chainid) return address(0);\r\n\r\n        return IERC721(tokenContract).ownerOf(tokenId);\r\n    }\r\n\r\n    function supportsInterface(bytes4 interfaceId) public pure returns (bool) {\r\n        return (interfaceId == type(IERC165).interfaceId ||\r\n            interfaceId == type(IERC6551Account).interfaceId);\r\n    }\r\n\r\n    function isValidSignature(bytes32 hash, bytes memory signature)\r\n        external\r\n        view\r\n        returns (bytes4 magicValue)\r\n    {\r\n        bool isValid = SignatureChecker.isValidSignatureNow(owner(), hash, signature);\r\n\r\n        if (isValid) {\r\n            return IERC1271.isValidSignature.selector;\r\n        }\r\n\r\n        return \"\";\r\n    }\r\n}"
			},
			"TokenBound/lib/ERC6551AccountLib.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.18;\r\n\r\nimport \"@openzeppelin/contracts/utils/Create2.sol\";\r\nimport \"./ERC6551BytecodeLib.sol\";\r\n\r\nlibrary ERC6551AccountLib {\r\n    function computeAddress(\r\n        address registry,\r\n        address implementation,\r\n        uint256 chainId,\r\n        address tokenContract,\r\n        uint256 tokenId,\r\n        uint256 _salt\r\n    ) internal pure returns (address) {\r\n        bytes32 bytecodeHash = keccak256(\r\n            ERC6551BytecodeLib.getCreationCode(\r\n                implementation,\r\n                chainId,\r\n                tokenContract,\r\n                tokenId,\r\n                _salt\r\n            )\r\n        );\r\n\r\n        return Create2.computeAddress(bytes32(_salt), bytecodeHash, registry);\r\n    }\r\n\r\n    function token()\r\n        internal\r\n        view\r\n        returns (\r\n            uint256,\r\n            address,\r\n            uint256\r\n        )\r\n    {\r\n        bytes memory footer = new bytes(0x60);\r\n\r\n        assembly {\r\n            // copy 0x60 bytes from end of footer\r\n            extcodecopy(address(), add(footer, 0x20), 0x4d, 0x60)\r\n        }\r\n\r\n        return abi.decode(footer, (uint256, address, uint256));\r\n    }\r\n\r\n    function salt() internal view returns (uint256) {\r\n        bytes memory footer = new bytes(0x20);\r\n\r\n        assembly {\r\n            // copy 0x20 bytes from beginning of footer\r\n            extcodecopy(address(), add(footer, 0x20), 0x2d, 0x20)\r\n        }\r\n\r\n        return abi.decode(footer, (uint256));\r\n    }\r\n}"
			},
			"TokenBound/lib/MinimalReceiver.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity 0.8.18;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\";\r\n\r\ncontract MinimalReceiver is ERC721Holder, ERC1155Holder {\r\n    /**\r\n     * @dev Allows all Ether transfers\r\n     */\r\n    receive() external payable virtual {}\r\n}"
			},
			"TokenBound/interfaces/IERC6551Account.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.18;\r\n\r\ninterface IERC6551AccountProxy {\r\n    function implementation() external view returns (address);\r\n}\r\n\r\n/// @dev the ERC-165 identifier for this interface is `0xeff4d378`\r\ninterface IERC6551Account {\r\n    event TransactionExecuted(address indexed target, uint256 indexed value, bytes data);\r\n\r\n    receive() external payable;\r\n\r\n    function executeCall(\r\n        address to,\r\n        uint256 value,\r\n        bytes calldata data\r\n    ) external payable returns (bytes memory);\r\n\r\n    function token()\r\n        external\r\n        view\r\n        returns (\r\n            uint256 chainId,\r\n            address tokenContract,\r\n            uint256 tokenId\r\n        );\r\n\r\n    function owner() external view returns (address);\r\n\r\n    function nonce() external view returns (uint256);\r\n}"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/SignatureChecker.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ECDSA.sol\";\nimport \"../../interfaces/IERC1271.sol\";\n\n/**\n * @dev Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA\n * signatures from externally owned accounts (EOAs) as well as ERC1271 signatures from smart contract wallets like\n * Argent and Gnosis Safe.\n *\n * _Available since v4.1._\n */\nlibrary SignatureChecker {\n    /**\n     * @dev Checks if a signature is valid for a given signer and data hash. If the signer is a smart contract, the\n     * signature is validated against that smart contract using ERC1271, otherwise it's validated using `ECDSA.recover`.\n     *\n     * NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n     * change through time. It could return true at block N and false at block N+1 (or the opposite).\n     */\n    function isValidSignatureNow(address signer, bytes32 hash, bytes memory signature) internal view returns (bool) {\n        (address recovered, ECDSA.RecoverError error) = ECDSA.tryRecover(hash, signature);\n        return\n            (error == ECDSA.RecoverError.NoError && recovered == signer) ||\n            isValidERC1271SignatureNow(signer, hash, signature);\n    }\n\n    /**\n     * @dev Checks if a signature is valid for a given signer and data hash. The signature is validated\n     * against the signer smart contract using ERC1271.\n     *\n     * NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n     * change through time. It could return true at block N and false at block N+1 (or the opposite).\n     */\n    function isValidERC1271SignatureNow(\n        address signer,\n        bytes32 hash,\n        bytes memory signature\n    ) internal view returns (bool) {\n        (bool success, bytes memory result) = signer.staticcall(\n            abi.encodeWithSelector(IERC1271.isValidSignature.selector, hash, signature)\n        );\n        return (success &&\n            result.length >= 32 &&\n            abi.decode(result, (bytes32)) == bytes32(IERC1271.isValidSignature.selector));\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1271.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC1271.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC1271 standard signature validation method for\n * contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n *\n * _Available since v4.1._\n */\ninterface IERC1271 {\n    /**\n     * @dev Should return whether the signature provided is valid for the provided data\n     * @param hash      Hash of the data to be signed\n     * @param signature Signature byte array associated with _data\n     */\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/utils/ERC721Holder.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721Receiver.sol\";\n\n/**\n * @dev Implementation of the {IERC721Receiver} interface.\n *\n * Accepts all token transfers.\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\n */\ncontract ERC721Holder is IERC721Receiver {\n    /**\n     * @dev See {IERC721Receiver-onERC721Received}.\n     *\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(address, address, uint256, bytes memory) public virtual override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/utils/ERC1155Holder.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ERC1155Receiver.sol\";\n\n/**\n * Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens.\n *\n * IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be\n * stuck.\n *\n * @dev _Available since v3.1._\n */\ncontract ERC1155Holder is ERC1155Receiver {\n    function onERC1155Received(\n        address,\n        address,\n        uint256,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155Received.selector;\n    }\n\n    function onERC1155BatchReceived(\n        address,\n        address,\n        uint256[] memory,\n        uint256[] memory,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155BatchReceived.selector;\n    }\n}\n"
			},
			"TokenBound/lib/ERC6551BytecodeLib.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.18;\r\n\r\nlibrary ERC6551BytecodeLib {\r\n    function getCreationCode(\r\n        address implementation_,\r\n        uint256 chainId_,\r\n        address tokenContract_,\r\n        uint256 tokenId_,\r\n        uint256 salt_\r\n    ) internal pure returns (bytes memory) {\r\n        return\r\n            abi.encodePacked(\r\n                hex\"3d60ad80600a3d3981f3363d3d373d3d3d363d73\",\r\n                implementation_,\r\n                hex\"5af43d82803e903d91602b57fd5bf3\",\r\n                abi.encode(salt_, chainId_, tokenContract_, tokenId_)\r\n            );\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/Create2.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Create2.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n * `CREATE2` can be used to compute in advance the address where a smart\n * contract will be deployed, which allows for interesting new mechanisms known\n * as 'counterfactual interactions'.\n *\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n * information.\n */\nlibrary Create2 {\n    /**\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\n     * will be deployed can be known in advance via {computeAddress}.\n     *\n     * The bytecode for a contract can be obtained from Solidity with\n     * `type(contractName).creationCode`.\n     *\n     * Requirements:\n     *\n     * - `bytecode` must not be empty.\n     * - `salt` must have not been used for `bytecode` already.\n     * - the factory must have a balance of at least `amount`.\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\n     */\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\n        require(address(this).balance >= amount, \"Create2: insufficient balance\");\n        require(bytecode.length != 0, \"Create2: bytecode length is zero\");\n        /// @solidity memory-safe-assembly\n        assembly {\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\n        }\n        require(addr != address(0), \"Create2: Failed on deploy\");\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n     * `bytecodeHash` or `salt` will result in a new destination address.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\n        return computeAddress(salt, bytecodeHash, address(this));\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40) // Get free memory pointer\n\n            // |                   | ↓ ptr ...  ↓ ptr + 0x0B (start) ...  ↓ ptr + 0x20 ...  ↓ ptr + 0x40 ...   |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\n            // | 0xFF              |            FF                                                             |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\n            // | keccak(start, 85) |            ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ |\n\n            mstore(add(ptr, 0x40), bytecodeHash)\n            mstore(add(ptr, 0x20), salt)\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\n            mstore8(start, 0xff)\n            addr := keccak256(start, 85)\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\")\n            mstore(0x1c, hash)\n            message := keccak256(0x00, 0x3c)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, \"\\x19\\x01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            data := keccak256(ptr, 0x42)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\n     * `validator` and `data` according to the version 0 of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x00\", validator, data));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/utils/ERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155Receiver.sol\";\nimport \"../../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\nabstract contract ERC1155Receiver is ERC165, IERC1155Receiver {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC1271.sol": {
				"IERC1271": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "magicValue",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271]. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"isValidSignature(bytes32,bytes)": {
								"details": "Should return whether the signature provided is valid for the provided data",
								"params": {
									"hash": "Hash of the data to be signed",
									"signature": "Signature byte array associated with _data"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isValidSignature(bytes32,bytes)": "1626ba7e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271]. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"hash\":\"Hash of the data to be signed\",\"signature\":\"Signature byte array associated with _data\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":\"IERC1271\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"ERC1155Holder": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":451:973  contract ERC1155Holder is ERC1155Receiver {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":451:973  contract ERC1155Holder is ERC1155Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xbc197c81\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf23a6e61\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n    tag_5:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_9:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":489:493  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":527:561  type(IERC1155Receiver).interfaceId */\n      0x4e2312e000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:561  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:523  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:561  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:601  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_24\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:601  super.supportsInterface(interfaceId) */\n      tag_25\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":589:600  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:588  super.supportsInterface */\n      tag_26\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:601  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:601  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n    tag_24:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":505:601  return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n    tag_15:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":903:909  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":928:964  this.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":921:964  return this.onERC1155BatchReceived.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":655:661  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":680:711  this.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":673:711  return this.onERC1155Received.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_30:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_31:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_32:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_33:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_34:\n        /* \"#utility.yul\":561:584   */\n      tag_66\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_33\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_67\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_67:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_35:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_69\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_34\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_8:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_71\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_72\n      tag_31\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":833:952   */\n    tag_71:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_73\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_35\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_36:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_37:\n        /* \"#utility.yul\":1268:1289   */\n      tag_76\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_36\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_11:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_78\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_37\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1644   */\n    tag_38:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1595:1637   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1588:1593   */\n      dup3\n        /* \"#utility.yul\":1584:1638   */\n      and\n        /* \"#utility.yul\":1573:1638   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1650:1746   */\n    tag_39:\n        /* \"#utility.yul\":1687:1694   */\n      0x00\n        /* \"#utility.yul\":1716:1740   */\n      tag_81\n        /* \"#utility.yul\":1734:1739   */\n      dup3\n        /* \"#utility.yul\":1716:1740   */\n      tag_38\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1705:1740   */\n      swap1\n      pop\n        /* \"#utility.yul\":1650:1746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1752:1874   */\n    tag_40:\n        /* \"#utility.yul\":1825:1849   */\n      tag_83\n        /* \"#utility.yul\":1843:1848   */\n      dup2\n        /* \"#utility.yul\":1825:1849   */\n      tag_39\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1818:1823   */\n      dup2\n        /* \"#utility.yul\":1815:1850   */\n      eq\n        /* \"#utility.yul\":1805:1868   */\n      tag_84\n      jumpi\n        /* \"#utility.yul\":1864:1865   */\n      0x00\n        /* \"#utility.yul\":1861:1862   */\n      dup1\n        /* \"#utility.yul\":1854:1866   */\n      revert\n        /* \"#utility.yul\":1805:1868   */\n    tag_84:\n        /* \"#utility.yul\":1752:1874   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1880:2019   */\n    tag_41:\n        /* \"#utility.yul\":1926:1931   */\n      0x00\n        /* \"#utility.yul\":1964:1970   */\n      dup2\n        /* \"#utility.yul\":1951:1971   */\n      calldataload\n        /* \"#utility.yul\":1942:1971   */\n      swap1\n      pop\n        /* \"#utility.yul\":1980:2013   */\n      tag_86\n        /* \"#utility.yul\":2007:2012   */\n      dup2\n        /* \"#utility.yul\":1980:2013   */\n      tag_40\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":1880:2019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2025:2142   */\n    tag_42:\n        /* \"#utility.yul\":2134:2135   */\n      0x00\n        /* \"#utility.yul\":2131:2132   */\n      dup1\n        /* \"#utility.yul\":2124:2136   */\n      revert\n        /* \"#utility.yul\":2148:2250   */\n    tag_43:\n        /* \"#utility.yul\":2189:2195   */\n      0x00\n        /* \"#utility.yul\":2240:2242   */\n      0x1f\n        /* \"#utility.yul\":2236:2243   */\n      not\n        /* \"#utility.yul\":2231:2233   */\n      0x1f\n        /* \"#utility.yul\":2224:2229   */\n      dup4\n        /* \"#utility.yul\":2220:2234   */\n      add\n        /* \"#utility.yul\":2216:2244   */\n      and\n        /* \"#utility.yul\":2206:2244   */\n      swap1\n      pop\n        /* \"#utility.yul\":2148:2250   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2256:2436   */\n    tag_44:\n        /* \"#utility.yul\":2304:2381   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2301:2302   */\n      0x00\n        /* \"#utility.yul\":2294:2382   */\n      mstore\n        /* \"#utility.yul\":2401:2405   */\n      0x41\n        /* \"#utility.yul\":2398:2399   */\n      0x04\n        /* \"#utility.yul\":2391:2406   */\n      mstore\n        /* \"#utility.yul\":2425:2429   */\n      0x24\n        /* \"#utility.yul\":2422:2423   */\n      0x00\n        /* \"#utility.yul\":2415:2430   */\n      revert\n        /* \"#utility.yul\":2442:2723   */\n    tag_45:\n        /* \"#utility.yul\":2525:2552   */\n      tag_91\n        /* \"#utility.yul\":2547:2551   */\n      dup3\n        /* \"#utility.yul\":2525:2552   */\n      tag_43\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":2517:2523   */\n      dup2\n        /* \"#utility.yul\":2513:2553   */\n      add\n        /* \"#utility.yul\":2655:2661   */\n      dup2\n        /* \"#utility.yul\":2643:2653   */\n      dup2\n        /* \"#utility.yul\":2640:2662   */\n      lt\n        /* \"#utility.yul\":2619:2637   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2607:2617   */\n      dup3\n        /* \"#utility.yul\":2604:2638   */\n      gt\n        /* \"#utility.yul\":2601:2663   */\n      or\n        /* \"#utility.yul\":2598:2686   */\n      iszero\n      tag_92\n      jumpi\n        /* \"#utility.yul\":2666:2684   */\n      tag_93\n      tag_44\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":2598:2686   */\n    tag_92:\n        /* \"#utility.yul\":2706:2716   */\n      dup1\n        /* \"#utility.yul\":2702:2704   */\n      0x40\n        /* \"#utility.yul\":2695:2717   */\n      mstore\n        /* \"#utility.yul\":2485:2723   */\n      pop\n        /* \"#utility.yul\":2442:2723   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2729:2858   */\n    tag_46:\n        /* \"#utility.yul\":2763:2769   */\n      0x00\n        /* \"#utility.yul\":2790:2810   */\n      tag_95\n      tag_30\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":2780:2810   */\n      swap1\n      pop\n        /* \"#utility.yul\":2819:2852   */\n      tag_96\n        /* \"#utility.yul\":2847:2851   */\n      dup3\n        /* \"#utility.yul\":2839:2845   */\n      dup3\n        /* \"#utility.yul\":2819:2852   */\n      tag_45\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":2729:2858   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2864:3175   */\n    tag_47:\n        /* \"#utility.yul\":2941:2945   */\n      0x00\n        /* \"#utility.yul\":3031:3049   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3023:3029   */\n      dup3\n        /* \"#utility.yul\":3020:3050   */\n      gt\n        /* \"#utility.yul\":3017:3073   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":3053:3071   */\n      tag_99\n      tag_44\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":3017:3073   */\n    tag_98:\n        /* \"#utility.yul\":3103:3107   */\n      0x20\n        /* \"#utility.yul\":3095:3101   */\n      dup3\n        /* \"#utility.yul\":3091:3108   */\n      mul\n        /* \"#utility.yul\":3083:3108   */\n      swap1\n      pop\n        /* \"#utility.yul\":3163:3167   */\n      0x20\n        /* \"#utility.yul\":3157:3161   */\n      dup2\n        /* \"#utility.yul\":3153:3168   */\n      add\n        /* \"#utility.yul\":3145:3168   */\n      swap1\n      pop\n        /* \"#utility.yul\":2864:3175   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3181:3298   */\n    tag_48:\n        /* \"#utility.yul\":3290:3291   */\n      0x00\n        /* \"#utility.yul\":3287:3288   */\n      dup1\n        /* \"#utility.yul\":3280:3292   */\n      revert\n        /* \"#utility.yul\":3304:3381   */\n    tag_49:\n        /* \"#utility.yul\":3341:3348   */\n      0x00\n        /* \"#utility.yul\":3370:3375   */\n      dup2\n        /* \"#utility.yul\":3359:3375   */\n      swap1\n      pop\n        /* \"#utility.yul\":3304:3381   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3387:3509   */\n    tag_50:\n        /* \"#utility.yul\":3460:3484   */\n      tag_103\n        /* \"#utility.yul\":3478:3483   */\n      dup2\n        /* \"#utility.yul\":3460:3484   */\n      tag_49\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":3453:3458   */\n      dup2\n        /* \"#utility.yul\":3450:3485   */\n      eq\n        /* \"#utility.yul\":3440:3503   */\n      tag_104\n      jumpi\n        /* \"#utility.yul\":3499:3500   */\n      0x00\n        /* \"#utility.yul\":3496:3497   */\n      dup1\n        /* \"#utility.yul\":3489:3501   */\n      revert\n        /* \"#utility.yul\":3440:3503   */\n    tag_104:\n        /* \"#utility.yul\":3387:3509   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3515:3654   */\n    tag_51:\n        /* \"#utility.yul\":3561:3566   */\n      0x00\n        /* \"#utility.yul\":3599:3605   */\n      dup2\n        /* \"#utility.yul\":3586:3606   */\n      calldataload\n        /* \"#utility.yul\":3577:3606   */\n      swap1\n      pop\n        /* \"#utility.yul\":3615:3648   */\n      tag_106\n        /* \"#utility.yul\":3642:3647   */\n      dup2\n        /* \"#utility.yul\":3615:3648   */\n      tag_50\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":3515:3654   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3677:4387   */\n    tag_52:\n        /* \"#utility.yul\":3773:3778   */\n      0x00\n        /* \"#utility.yul\":3798:3879   */\n      tag_108\n        /* \"#utility.yul\":3814:3878   */\n      tag_109\n        /* \"#utility.yul\":3871:3877   */\n      dup5\n        /* \"#utility.yul\":3814:3878   */\n      tag_47\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":3798:3879   */\n      tag_46\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":3789:3879   */\n      swap1\n      pop\n        /* \"#utility.yul\":3899:3904   */\n      dup1\n        /* \"#utility.yul\":3928:3934   */\n      dup4\n        /* \"#utility.yul\":3921:3926   */\n      dup3\n        /* \"#utility.yul\":3914:3935   */\n      mstore\n        /* \"#utility.yul\":3962:3966   */\n      0x20\n        /* \"#utility.yul\":3955:3960   */\n      dup3\n        /* \"#utility.yul\":3951:3967   */\n      add\n        /* \"#utility.yul\":3944:3967   */\n      swap1\n      pop\n        /* \"#utility.yul\":4015:4019   */\n      0x20\n        /* \"#utility.yul\":4007:4013   */\n      dup5\n        /* \"#utility.yul\":4003:4020   */\n      mul\n        /* \"#utility.yul\":3995:4001   */\n      dup4\n        /* \"#utility.yul\":3991:4021   */\n      add\n        /* \"#utility.yul\":4044:4047   */\n      dup6\n        /* \"#utility.yul\":4036:4042   */\n      dup2\n        /* \"#utility.yul\":4033:4048   */\n      gt\n        /* \"#utility.yul\":4030:4152   */\n      iszero\n      tag_110\n      jumpi\n        /* \"#utility.yul\":4063:4142   */\n      tag_111\n      tag_48\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":4030:4152   */\n    tag_110:\n        /* \"#utility.yul\":4178:4184   */\n      dup4\n        /* \"#utility.yul\":4161:4381   */\n    tag_112:\n        /* \"#utility.yul\":4195:4201   */\n      dup2\n        /* \"#utility.yul\":4190:4193   */\n      dup2\n        /* \"#utility.yul\":4187:4202   */\n      lt\n        /* \"#utility.yul\":4161:4381   */\n      iszero\n      tag_114\n      jumpi\n        /* \"#utility.yul\":4270:4273   */\n      dup1\n        /* \"#utility.yul\":4299:4336   */\n      tag_115\n        /* \"#utility.yul\":4332:4335   */\n      dup9\n        /* \"#utility.yul\":4320:4330   */\n      dup3\n        /* \"#utility.yul\":4299:4336   */\n      tag_51\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":4294:4297   */\n      dup5\n        /* \"#utility.yul\":4287:4337   */\n      mstore\n        /* \"#utility.yul\":4366:4370   */\n      0x20\n        /* \"#utility.yul\":4361:4364   */\n      dup5\n        /* \"#utility.yul\":4357:4371   */\n      add\n        /* \"#utility.yul\":4350:4371   */\n      swap4\n      pop\n        /* \"#utility.yul\":4237:4381   */\n      pop\n        /* \"#utility.yul\":4221:4225   */\n      0x20\n        /* \"#utility.yul\":4216:4219   */\n      dup2\n        /* \"#utility.yul\":4212:4226   */\n      add\n        /* \"#utility.yul\":4205:4226   */\n      swap1\n      pop\n        /* \"#utility.yul\":4161:4381   */\n      jump(tag_112)\n    tag_114:\n        /* \"#utility.yul\":4165:4186   */\n      pop\n        /* \"#utility.yul\":3779:4387   */\n      pop\n      pop\n        /* \"#utility.yul\":3677:4387   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4780   */\n    tag_53:\n        /* \"#utility.yul\":4481:4486   */\n      0x00\n        /* \"#utility.yul\":4530:4533   */\n      dup3\n        /* \"#utility.yul\":4523:4527   */\n      0x1f\n        /* \"#utility.yul\":4515:4521   */\n      dup4\n        /* \"#utility.yul\":4511:4528   */\n      add\n        /* \"#utility.yul\":4507:4534   */\n      slt\n        /* \"#utility.yul\":4497:4619   */\n      tag_117\n      jumpi\n        /* \"#utility.yul\":4538:4617   */\n      tag_118\n      tag_42\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":4497:4619   */\n    tag_117:\n        /* \"#utility.yul\":4655:4661   */\n      dup2\n        /* \"#utility.yul\":4642:4662   */\n      calldataload\n        /* \"#utility.yul\":4680:4774   */\n      tag_119\n        /* \"#utility.yul\":4770:4773   */\n      dup5\n        /* \"#utility.yul\":4762:4768   */\n      dup3\n        /* \"#utility.yul\":4755:4759   */\n      0x20\n        /* \"#utility.yul\":4747:4753   */\n      dup7\n        /* \"#utility.yul\":4743:4760   */\n      add\n        /* \"#utility.yul\":4680:4774   */\n      tag_52\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":4671:4774   */\n      swap2\n      pop\n        /* \"#utility.yul\":4487:4780   */\n      pop\n        /* \"#utility.yul\":4410:4780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4786:4903   */\n    tag_54:\n        /* \"#utility.yul\":4895:4896   */\n      0x00\n        /* \"#utility.yul\":4892:4893   */\n      dup1\n        /* \"#utility.yul\":4885:4897   */\n      revert\n        /* \"#utility.yul\":4909:5216   */\n    tag_55:\n        /* \"#utility.yul\":4970:4974   */\n      0x00\n        /* \"#utility.yul\":5060:5078   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5052:5058   */\n      dup3\n        /* \"#utility.yul\":5049:5079   */\n      gt\n        /* \"#utility.yul\":5046:5102   */\n      iszero\n      tag_122\n      jumpi\n        /* \"#utility.yul\":5082:5100   */\n      tag_123\n      tag_44\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":5046:5102   */\n    tag_122:\n        /* \"#utility.yul\":5120:5149   */\n      tag_124\n        /* \"#utility.yul\":5142:5148   */\n      dup3\n        /* \"#utility.yul\":5120:5149   */\n      tag_43\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":5112:5149   */\n      swap1\n      pop\n        /* \"#utility.yul\":5204:5208   */\n      0x20\n        /* \"#utility.yul\":5198:5202   */\n      dup2\n        /* \"#utility.yul\":5194:5209   */\n      add\n        /* \"#utility.yul\":5186:5209   */\n      swap1\n      pop\n        /* \"#utility.yul\":4909:5216   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5222:5368   */\n    tag_56:\n        /* \"#utility.yul\":5319:5325   */\n      dup3\n        /* \"#utility.yul\":5314:5317   */\n      dup2\n        /* \"#utility.yul\":5309:5312   */\n      dup4\n        /* \"#utility.yul\":5296:5326   */\n      calldatacopy\n        /* \"#utility.yul\":5360:5361   */\n      0x00\n        /* \"#utility.yul\":5351:5357   */\n      dup4\n        /* \"#utility.yul\":5346:5349   */\n      dup4\n        /* \"#utility.yul\":5342:5358   */\n      add\n        /* \"#utility.yul\":5335:5362   */\n      mstore\n        /* \"#utility.yul\":5222:5368   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5374:5797   */\n    tag_57:\n        /* \"#utility.yul\":5451:5456   */\n      0x00\n        /* \"#utility.yul\":5476:5541   */\n      tag_127\n        /* \"#utility.yul\":5492:5540   */\n      tag_128\n        /* \"#utility.yul\":5533:5539   */\n      dup5\n        /* \"#utility.yul\":5492:5540   */\n      tag_55\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":5476:5541   */\n      tag_46\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":5467:5541   */\n      swap1\n      pop\n        /* \"#utility.yul\":5564:5570   */\n      dup3\n        /* \"#utility.yul\":5557:5562   */\n      dup2\n        /* \"#utility.yul\":5550:5571   */\n      mstore\n        /* \"#utility.yul\":5602:5606   */\n      0x20\n        /* \"#utility.yul\":5595:5600   */\n      dup2\n        /* \"#utility.yul\":5591:5607   */\n      add\n        /* \"#utility.yul\":5640:5643   */\n      dup5\n        /* \"#utility.yul\":5631:5637   */\n      dup5\n        /* \"#utility.yul\":5626:5629   */\n      dup5\n        /* \"#utility.yul\":5622:5638   */\n      add\n        /* \"#utility.yul\":5619:5644   */\n      gt\n        /* \"#utility.yul\":5616:5728   */\n      iszero\n      tag_129\n      jumpi\n        /* \"#utility.yul\":5647:5726   */\n      tag_130\n      tag_54\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":5616:5728   */\n    tag_129:\n        /* \"#utility.yul\":5737:5791   */\n      tag_131\n        /* \"#utility.yul\":5784:5790   */\n      dup5\n        /* \"#utility.yul\":5779:5782   */\n      dup3\n        /* \"#utility.yul\":5774:5777   */\n      dup6\n        /* \"#utility.yul\":5737:5791   */\n      tag_56\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":5457:5797   */\n      pop\n        /* \"#utility.yul\":5374:5797   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5816:6154   */\n    tag_58:\n        /* \"#utility.yul\":5871:5876   */\n      0x00\n        /* \"#utility.yul\":5920:5923   */\n      dup3\n        /* \"#utility.yul\":5913:5917   */\n      0x1f\n        /* \"#utility.yul\":5905:5911   */\n      dup4\n        /* \"#utility.yul\":5901:5918   */\n      add\n        /* \"#utility.yul\":5897:5924   */\n      slt\n        /* \"#utility.yul\":5887:6009   */\n      tag_133\n      jumpi\n        /* \"#utility.yul\":5928:6007   */\n      tag_134\n      tag_42\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":5887:6009   */\n    tag_133:\n        /* \"#utility.yul\":6045:6051   */\n      dup2\n        /* \"#utility.yul\":6032:6052   */\n      calldataload\n        /* \"#utility.yul\":6070:6148   */\n      tag_135\n        /* \"#utility.yul\":6144:6147   */\n      dup5\n        /* \"#utility.yul\":6136:6142   */\n      dup3\n        /* \"#utility.yul\":6129:6133   */\n      0x20\n        /* \"#utility.yul\":6121:6127   */\n      dup7\n        /* \"#utility.yul\":6117:6134   */\n      add\n        /* \"#utility.yul\":6070:6148   */\n      tag_57\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":6061:6148   */\n      swap2\n      pop\n        /* \"#utility.yul\":5877:6154   */\n      pop\n        /* \"#utility.yul\":5816:6154   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6160:7669   */\n    tag_14:\n        /* \"#utility.yul\":6314:6320   */\n      0x00\n        /* \"#utility.yul\":6322:6328   */\n      dup1\n        /* \"#utility.yul\":6330:6336   */\n      0x00\n        /* \"#utility.yul\":6338:6344   */\n      dup1\n        /* \"#utility.yul\":6346:6352   */\n      0x00\n        /* \"#utility.yul\":6395:6398   */\n      0xa0\n        /* \"#utility.yul\":6383:6392   */\n      dup7\n        /* \"#utility.yul\":6374:6381   */\n      dup9\n        /* \"#utility.yul\":6370:6393   */\n      sub\n        /* \"#utility.yul\":6366:6399   */\n      slt\n        /* \"#utility.yul\":6363:6483   */\n      iszero\n      tag_137\n      jumpi\n        /* \"#utility.yul\":6402:6481   */\n      tag_138\n      tag_31\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":6363:6483   */\n    tag_137:\n        /* \"#utility.yul\":6522:6523   */\n      0x00\n        /* \"#utility.yul\":6547:6600   */\n      tag_139\n        /* \"#utility.yul\":6592:6599   */\n      dup9\n        /* \"#utility.yul\":6583:6589   */\n      dup3\n        /* \"#utility.yul\":6572:6581   */\n      dup10\n        /* \"#utility.yul\":6568:6590   */\n      add\n        /* \"#utility.yul\":6547:6600   */\n      tag_41\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":6537:6600   */\n      swap6\n      pop\n        /* \"#utility.yul\":6493:6610   */\n      pop\n        /* \"#utility.yul\":6649:6651   */\n      0x20\n        /* \"#utility.yul\":6675:6728   */\n      tag_140\n        /* \"#utility.yul\":6720:6727   */\n      dup9\n        /* \"#utility.yul\":6711:6717   */\n      dup3\n        /* \"#utility.yul\":6700:6709   */\n      dup10\n        /* \"#utility.yul\":6696:6718   */\n      add\n        /* \"#utility.yul\":6675:6728   */\n      tag_41\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":6665:6728   */\n      swap5\n      pop\n        /* \"#utility.yul\":6620:6738   */\n      pop\n        /* \"#utility.yul\":6805:6807   */\n      0x40\n        /* \"#utility.yul\":6794:6803   */\n      dup7\n        /* \"#utility.yul\":6790:6808   */\n      add\n        /* \"#utility.yul\":6777:6809   */\n      calldataload\n        /* \"#utility.yul\":6836:6854   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6828:6834   */\n      dup2\n        /* \"#utility.yul\":6825:6855   */\n      gt\n        /* \"#utility.yul\":6822:6939   */\n      iszero\n      tag_141\n      jumpi\n        /* \"#utility.yul\":6858:6937   */\n      tag_142\n      tag_32\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":6822:6939   */\n    tag_141:\n        /* \"#utility.yul\":6963:7041   */\n      tag_143\n        /* \"#utility.yul\":7033:7040   */\n      dup9\n        /* \"#utility.yul\":7024:7030   */\n      dup3\n        /* \"#utility.yul\":7013:7022   */\n      dup10\n        /* \"#utility.yul\":7009:7031   */\n      add\n        /* \"#utility.yul\":6963:7041   */\n      tag_53\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":6953:7041   */\n      swap4\n      pop\n        /* \"#utility.yul\":6748:7051   */\n      pop\n        /* \"#utility.yul\":7118:7120   */\n      0x60\n        /* \"#utility.yul\":7107:7116   */\n      dup7\n        /* \"#utility.yul\":7103:7121   */\n      add\n        /* \"#utility.yul\":7090:7122   */\n      calldataload\n        /* \"#utility.yul\":7149:7167   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7141:7147   */\n      dup2\n        /* \"#utility.yul\":7138:7168   */\n      gt\n        /* \"#utility.yul\":7135:7252   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":7171:7250   */\n      tag_145\n      tag_32\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":7135:7252   */\n    tag_144:\n        /* \"#utility.yul\":7276:7354   */\n      tag_146\n        /* \"#utility.yul\":7346:7353   */\n      dup9\n        /* \"#utility.yul\":7337:7343   */\n      dup3\n        /* \"#utility.yul\":7326:7335   */\n      dup10\n        /* \"#utility.yul\":7322:7344   */\n      add\n        /* \"#utility.yul\":7276:7354   */\n      tag_53\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":7266:7354   */\n      swap3\n      pop\n        /* \"#utility.yul\":7061:7364   */\n      pop\n        /* \"#utility.yul\":7431:7434   */\n      0x80\n        /* \"#utility.yul\":7420:7429   */\n      dup7\n        /* \"#utility.yul\":7416:7435   */\n      add\n        /* \"#utility.yul\":7403:7436   */\n      calldataload\n        /* \"#utility.yul\":7463:7481   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7455:7461   */\n      dup2\n        /* \"#utility.yul\":7452:7482   */\n      gt\n        /* \"#utility.yul\":7449:7566   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":7485:7564   */\n      tag_148\n      tag_32\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":7449:7566   */\n    tag_147:\n        /* \"#utility.yul\":7590:7652   */\n      tag_149\n        /* \"#utility.yul\":7644:7651   */\n      dup9\n        /* \"#utility.yul\":7635:7641   */\n      dup3\n        /* \"#utility.yul\":7624:7633   */\n      dup10\n        /* \"#utility.yul\":7620:7642   */\n      add\n        /* \"#utility.yul\":7590:7652   */\n      tag_58\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":7580:7652   */\n      swap2\n      pop\n        /* \"#utility.yul\":7374:7662   */\n      pop\n        /* \"#utility.yul\":6160:7669   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7675:7790   */\n    tag_59:\n        /* \"#utility.yul\":7760:7783   */\n      tag_151\n        /* \"#utility.yul\":7777:7782   */\n      dup2\n        /* \"#utility.yul\":7760:7783   */\n      tag_33\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":7755:7758   */\n      dup3\n        /* \"#utility.yul\":7748:7784   */\n      mstore\n        /* \"#utility.yul\":7675:7790   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7796:8014   */\n    tag_17:\n        /* \"#utility.yul\":7887:7891   */\n      0x00\n        /* \"#utility.yul\":7925:7927   */\n      0x20\n        /* \"#utility.yul\":7914:7923   */\n      dup3\n        /* \"#utility.yul\":7910:7928   */\n      add\n        /* \"#utility.yul\":7902:7928   */\n      swap1\n      pop\n        /* \"#utility.yul\":7938:8007   */\n      tag_153\n        /* \"#utility.yul\":8004:8005   */\n      0x00\n        /* \"#utility.yul\":7993:8002   */\n      dup4\n        /* \"#utility.yul\":7989:8006   */\n      add\n        /* \"#utility.yul\":7980:7986   */\n      dup5\n        /* \"#utility.yul\":7938:8007   */\n      tag_59\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":7796:8014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8020:9109   */\n    tag_20:\n        /* \"#utility.yul\":8124:8130   */\n      0x00\n        /* \"#utility.yul\":8132:8138   */\n      dup1\n        /* \"#utility.yul\":8140:8146   */\n      0x00\n        /* \"#utility.yul\":8148:8154   */\n      dup1\n        /* \"#utility.yul\":8156:8162   */\n      0x00\n        /* \"#utility.yul\":8205:8208   */\n      0xa0\n        /* \"#utility.yul\":8193:8202   */\n      dup7\n        /* \"#utility.yul\":8184:8191   */\n      dup9\n        /* \"#utility.yul\":8180:8203   */\n      sub\n        /* \"#utility.yul\":8176:8209   */\n      slt\n        /* \"#utility.yul\":8173:8293   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":8212:8291   */\n      tag_156\n      tag_31\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":8173:8293   */\n    tag_155:\n        /* \"#utility.yul\":8332:8333   */\n      0x00\n        /* \"#utility.yul\":8357:8410   */\n      tag_157\n        /* \"#utility.yul\":8402:8409   */\n      dup9\n        /* \"#utility.yul\":8393:8399   */\n      dup3\n        /* \"#utility.yul\":8382:8391   */\n      dup10\n        /* \"#utility.yul\":8378:8400   */\n      add\n        /* \"#utility.yul\":8357:8410   */\n      tag_41\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":8347:8410   */\n      swap6\n      pop\n        /* \"#utility.yul\":8303:8420   */\n      pop\n        /* \"#utility.yul\":8459:8461   */\n      0x20\n        /* \"#utility.yul\":8485:8538   */\n      tag_158\n        /* \"#utility.yul\":8530:8537   */\n      dup9\n        /* \"#utility.yul\":8521:8527   */\n      dup3\n        /* \"#utility.yul\":8510:8519   */\n      dup10\n        /* \"#utility.yul\":8506:8528   */\n      add\n        /* \"#utility.yul\":8485:8538   */\n      tag_41\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":8475:8538   */\n      swap5\n      pop\n        /* \"#utility.yul\":8430:8548   */\n      pop\n        /* \"#utility.yul\":8587:8589   */\n      0x40\n        /* \"#utility.yul\":8613:8666   */\n      tag_159\n        /* \"#utility.yul\":8658:8665   */\n      dup9\n        /* \"#utility.yul\":8649:8655   */\n      dup3\n        /* \"#utility.yul\":8638:8647   */\n      dup10\n        /* \"#utility.yul\":8634:8656   */\n      add\n        /* \"#utility.yul\":8613:8666   */\n      tag_51\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":8603:8666   */\n      swap4\n      pop\n        /* \"#utility.yul\":8558:8676   */\n      pop\n        /* \"#utility.yul\":8715:8717   */\n      0x60\n        /* \"#utility.yul\":8741:8794   */\n      tag_160\n        /* \"#utility.yul\":8786:8793   */\n      dup9\n        /* \"#utility.yul\":8777:8783   */\n      dup3\n        /* \"#utility.yul\":8766:8775   */\n      dup10\n        /* \"#utility.yul\":8762:8784   */\n      add\n        /* \"#utility.yul\":8741:8794   */\n      tag_51\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":8731:8794   */\n      swap3\n      pop\n        /* \"#utility.yul\":8686:8804   */\n      pop\n        /* \"#utility.yul\":8871:8874   */\n      0x80\n        /* \"#utility.yul\":8860:8869   */\n      dup7\n        /* \"#utility.yul\":8856:8875   */\n      add\n        /* \"#utility.yul\":8843:8876   */\n      calldataload\n        /* \"#utility.yul\":8903:8921   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8895:8901   */\n      dup2\n        /* \"#utility.yul\":8892:8922   */\n      gt\n        /* \"#utility.yul\":8889:9006   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":8925:9004   */\n      tag_162\n      tag_32\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":8889:9006   */\n    tag_161:\n        /* \"#utility.yul\":9030:9092   */\n      tag_163\n        /* \"#utility.yul\":9084:9091   */\n      dup9\n        /* \"#utility.yul\":9075:9081   */\n      dup3\n        /* \"#utility.yul\":9064:9073   */\n      dup10\n        /* \"#utility.yul\":9060:9082   */\n      add\n        /* \"#utility.yul\":9030:9092   */\n      tag_58\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":9020:9092   */\n      swap2\n      pop\n        /* \"#utility.yul\":8814:9102   */\n      pop\n        /* \"#utility.yul\":8020:9109   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207a8fd22152579f24b9978eea341db72e4f194c66a327740bcf2135a3c886ec3964736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061071b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c8114610076578063f23a6e61146100a6575b600080fd5b610060600480360381019061005b9190610250565b6100d6565b60405161006d9190610298565b60405180910390f35b610090600480360381019061008b9190610555565b610150565b60405161009d9190610633565b60405180910390f35b6100c060048036038101906100bb919061064e565b610165565b6040516100cd9190610633565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061014957506101488261017a565b5b9050919050565b600063bc197c8160e01b905095945050505050565b600063f23a6e6160e01b905095945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61022d816101f8565b811461023857600080fd5b50565b60008135905061024a81610224565b92915050565b600060208284031215610266576102656101ee565b5b60006102748482850161023b565b91505092915050565b60008115159050919050565b6102928161027d565b82525050565b60006020820190506102ad6000830184610289565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102de826102b3565b9050919050565b6102ee816102d3565b81146102f957600080fd5b50565b60008135905061030b816102e5565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61035f82610316565b810181811067ffffffffffffffff8211171561037e5761037d610327565b5b80604052505050565b60006103916101e4565b905061039d8282610356565b919050565b600067ffffffffffffffff8211156103bd576103bc610327565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b6103e6816103d3565b81146103f157600080fd5b50565b600081359050610403816103dd565b92915050565b600061041c610417846103a2565b610387565b9050808382526020820190506020840283018581111561043f5761043e6103ce565b5b835b81811015610468578061045488826103f4565b845260208401935050602081019050610441565b5050509392505050565b600082601f83011261048757610486610311565b5b8135610497848260208601610409565b91505092915050565b600080fd5b600067ffffffffffffffff8211156104c0576104bf610327565b5b6104c982610316565b9050602081019050919050565b82818337600083830152505050565b60006104f86104f3846104a5565b610387565b905082815260208101848484011115610514576105136104a0565b5b61051f8482856104d6565b509392505050565b600082601f83011261053c5761053b610311565b5b813561054c8482602086016104e5565b91505092915050565b600080600080600060a08688031215610571576105706101ee565b5b600061057f888289016102fc565b9550506020610590888289016102fc565b945050604086013567ffffffffffffffff8111156105b1576105b06101f3565b5b6105bd88828901610472565b935050606086013567ffffffffffffffff8111156105de576105dd6101f3565b5b6105ea88828901610472565b925050608086013567ffffffffffffffff81111561060b5761060a6101f3565b5b61061788828901610527565b9150509295509295909350565b61062d816101f8565b82525050565b60006020820190506106486000830184610624565b92915050565b600080600080600060a0868803121561066a576106696101ee565b5b6000610678888289016102fc565b9550506020610689888289016102fc565b945050604061069a888289016103f4565b93505060606106ab888289016103f4565b925050608086013567ffffffffffffffff8111156106cc576106cb6101f3565b5b6106d888828901610527565b915050929550929590935056fea26469706673582212207a8fd22152579f24b9978eea341db72e4f194c66a327740bcf2135a3c886ec3964736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71B DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x250 JUMP JUMPDEST PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x555 JUMP JUMPDEST PUSH2 0x150 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x64E JUMP JUMPDEST PUSH2 0x165 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x149 JUMPI POP PUSH2 0x148 DUP3 PUSH2 0x17A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22D DUP2 PUSH2 0x1F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24A DUP2 PUSH2 0x224 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x266 JUMPI PUSH2 0x265 PUSH2 0x1EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x274 DUP5 DUP3 DUP6 ADD PUSH2 0x23B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x292 DUP2 PUSH2 0x27D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x289 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE DUP3 PUSH2 0x2B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EE DUP2 PUSH2 0x2D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30B DUP2 PUSH2 0x2E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x35F DUP3 PUSH2 0x316 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x37E JUMPI PUSH2 0x37D PUSH2 0x327 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x391 PUSH2 0x1E4 JUMP JUMPDEST SWAP1 POP PUSH2 0x39D DUP3 DUP3 PUSH2 0x356 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3BD JUMPI PUSH2 0x3BC PUSH2 0x327 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E6 DUP2 PUSH2 0x3D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x403 DUP2 PUSH2 0x3DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41C PUSH2 0x417 DUP5 PUSH2 0x3A2 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x43F JUMPI PUSH2 0x43E PUSH2 0x3CE JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x468 JUMPI DUP1 PUSH2 0x454 DUP9 DUP3 PUSH2 0x3F4 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x441 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x487 JUMPI PUSH2 0x486 PUSH2 0x311 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x497 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x409 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4C0 JUMPI PUSH2 0x4BF PUSH2 0x327 JUMP JUMPDEST JUMPDEST PUSH2 0x4C9 DUP3 PUSH2 0x316 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F8 PUSH2 0x4F3 DUP5 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x514 JUMPI PUSH2 0x513 PUSH2 0x4A0 JUMP JUMPDEST JUMPDEST PUSH2 0x51F DUP5 DUP3 DUP6 PUSH2 0x4D6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x53C JUMPI PUSH2 0x53B PUSH2 0x311 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x54C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x571 JUMPI PUSH2 0x570 PUSH2 0x1EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x57F DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x590 DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5B1 JUMPI PUSH2 0x5B0 PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x5BD DUP9 DUP3 DUP10 ADD PUSH2 0x472 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5DE JUMPI PUSH2 0x5DD PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x5EA DUP9 DUP3 DUP10 ADD PUSH2 0x472 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x60B JUMPI PUSH2 0x60A PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x617 DUP9 DUP3 DUP10 ADD PUSH2 0x527 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x62D DUP2 PUSH2 0x1F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x648 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x624 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x66A JUMPI PUSH2 0x669 PUSH2 0x1EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x678 DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x689 DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x69A DUP9 DUP3 DUP10 ADD PUSH2 0x3F4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x6AB DUP9 DUP3 DUP10 ADD PUSH2 0x3F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CC JUMPI PUSH2 0x6CB PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x6D8 DUP9 DUP3 DUP10 ADD PUSH2 0x527 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x8FD22152579F24B9978EEA341DB72E4F194C66A327740BCF2135A3 0xC8 DUP7 0xEC CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "451:522:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onERC1155BatchReceived_104": {
									"entryPoint": 336,
									"id": 104,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC1155Received_81": {
									"entryPoint": 357,
									"id": 81,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@supportsInterface_1176": {
									"entryPoint": 378,
									"id": 1176,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_138": {
									"entryPoint": 214,
									"id": 138,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1033,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 1253,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 1319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1012,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 1365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 1614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 1572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 1587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 484,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 1189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 691,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 1238,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 807,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 785,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 974,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1184,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 499,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 494,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9112:21",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:21",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:21"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:21"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:21",
														"type": ""
													}
												],
												"src": "7:75:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:21"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:21"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:21",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:21",
														"type": ""
													}
												],
												"src": "334:149:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:21"
															},
															"nodeType": "YulIf",
															"src": "541:62:21"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:21",
														"type": ""
													}
												],
												"src": "489:120:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:21"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:21",
														"type": ""
													}
												],
												"src": "615:137:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:21"
															},
															"nodeType": "YulIf",
															"src": "833:119:21"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:21",
														"type": ""
													}
												],
												"src": "758:327:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:21"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:21",
														"type": ""
													}
												],
												"src": "1091:90:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:21"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:21",
														"type": ""
													}
												],
												"src": "1187:109:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:21",
														"type": ""
													}
												],
												"src": "1302:210:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1563:81:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1573:65:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1588:5:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1595:42:21",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1584:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1584:54:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1545:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1555:7:21",
														"type": ""
													}
												],
												"src": "1518:126:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1695:51:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1705:35:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1734:5:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1716:17:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1716:24:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1705:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1677:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1687:7:21",
														"type": ""
													}
												],
												"src": "1650:96:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1795:79:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1852:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1861:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1864:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1854:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1854:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1854:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1818:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1843:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1825:17:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1825:24:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1815:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1815:35:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1808:43:21"
															},
															"nodeType": "YulIf",
															"src": "1805:63:21"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1788:5:21",
														"type": ""
													}
												],
												"src": "1752:122:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1932:87:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1942:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1964:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1951:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1951:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1942:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2007:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1980:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1980:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1980:33:21"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1910:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1918:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1926:5:21",
														"type": ""
													}
												],
												"src": "1880:139:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2114:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2134:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2124:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2124:12:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2124:12:21"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "2025:117:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2196:54:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2206:38:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:21",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:21"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2240:2:21",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2236:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2236:7:21"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2216:28:21"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:21"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2179:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2189:6:21",
														"type": ""
													}
												],
												"src": "2148:102:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2284:152:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2301:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2304:77:21",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2294:88:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2294:88:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2398:1:21",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2401:4:21",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2391:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2391:15:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2391:15:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2422:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2425:4:21",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2415:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2415:15:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2415:15:21"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2256:180:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2485:238:21",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2495:58:21",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2517:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "2547:4:21"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2525:21:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2525:27:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2513:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2513:40:21"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2499:10:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2664:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2666:16:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2666:18:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2666:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2607:10:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2619:18:21",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2604:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2604:34:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2643:10:21"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2655:6:21"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2640:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2640:22:21"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2601:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2601:62:21"
															},
															"nodeType": "YulIf",
															"src": "2598:88:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2702:2:21",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2706:10:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2695:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2695:22:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2695:22:21"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2471:6:21",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2479:4:21",
														"type": ""
													}
												],
												"src": "2442:281:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2770:88:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2780:30:21",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "2790:18:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2790:20:21"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2780:6:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2839:6:21"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2847:4:21"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2819:19:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2819:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2819:33:21"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2754:4:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2763:6:21",
														"type": ""
													}
												],
												"src": "2729:129:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2946:229:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3051:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3053:16:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3053:18:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3053:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3023:6:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3031:18:21",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3020:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3020:30:21"
															},
															"nodeType": "YulIf",
															"src": "3017:56:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3083:25:21",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3095:6:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3103:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3091:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3091:17:21"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3083:4:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3145:23:21",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "3157:4:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3163:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3153:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3153:15:21"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3145:4:21"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2930:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2941:4:21",
														"type": ""
													}
												],
												"src": "2864:311:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3270:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3287:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3290:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3280:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3280:12:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3280:12:21"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "3181:117:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3349:32:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3359:16:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3370:5:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3359:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3331:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3341:7:21",
														"type": ""
													}
												],
												"src": "3304:77:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3430:79:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3487:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3496:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3499:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3489:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3489:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3489:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3453:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3478:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3460:17:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3460:24:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3450:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3450:35:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3443:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3443:43:21"
															},
															"nodeType": "YulIf",
															"src": "3440:63:21"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3423:5:21",
														"type": ""
													}
												],
												"src": "3387:122:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3567:87:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3577:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3599:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3586:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3586:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3577:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3642:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3615:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3615:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3615:33:21"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3545:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3553:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3561:5:21",
														"type": ""
													}
												],
												"src": "3515:139:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3779:608:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3789:90:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3871:6:21"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3814:56:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3814:64:21"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3798:15:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3798:81:21"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3789:5:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3888:16:21",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "3899:5:21"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3892:3:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "3921:5:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3928:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3914:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3914:21:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3914:21:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3944:23:21",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "3955:5:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3962:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3951:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3951:16:21"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3944:3:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3977:44:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3995:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4007:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4015:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "4003:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4003:17:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3991:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3991:30:21"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3981:6:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4049:103:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "4063:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4063:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4063:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4036:6:21"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4044:3:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4033:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4033:15:21"
															},
															"nodeType": "YulIf",
															"src": "4030:122:21"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4237:144:21",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4252:21:21",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "4270:3:21"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "4256:10:21",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4294:3:21"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "4320:10:21"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "4332:3:21"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "4299:20:21"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4299:37:21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4287:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4287:50:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4287:50:21"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4350:21:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4361:3:21"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4366:4:21",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4357:3:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4357:14:21"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4350:3:21"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4190:3:21"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4195:6:21"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4187:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4187:15:21"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4203:25:21",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4205:21:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "4216:3:21"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4221:4:21",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4212:3:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4212:14:21"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4205:3:21"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4165:21:21",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4167:17:21",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "4178:6:21"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "4171:3:21",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4161:220:21"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3749:6:21",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3757:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3765:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3773:5:21",
														"type": ""
													}
												],
												"src": "3677:710:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4487:293:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4536:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "4538:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4538:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4538:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4515:6:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4523:4:21",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4511:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4511:17:21"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4530:3:21"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4507:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4507:27:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4500:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4500:35:21"
															},
															"nodeType": "YulIf",
															"src": "4497:122:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4628:34:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4655:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4642:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4642:20:21"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4632:6:21",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4671:103:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4747:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4755:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4743:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4743:17:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4762:6:21"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4770:3:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4680:62:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4680:94:21"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4671:5:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4465:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4473:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4481:5:21",
														"type": ""
													}
												],
												"src": "4410:370:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4875:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4892:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4895:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4885:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4885:12:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4885:12:21"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "4786:117:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4975:241:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5080:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5082:16:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5082:18:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5082:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5052:6:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5060:18:21",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5049:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5049:30:21"
															},
															"nodeType": "YulIf",
															"src": "5046:56:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5112:37:21",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5142:6:21"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "5120:21:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5120:29:21"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5112:4:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5186:23:21",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5198:4:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5204:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5194:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5194:15:21"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5186:4:21"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4959:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "4970:4:21",
														"type": ""
													}
												],
												"src": "4909:307:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5286:82:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "5309:3:21"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5314:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5319:6:21"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "5296:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5296:30:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5296:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5346:3:21"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5351:6:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5342:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5342:16:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5360:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5335:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5335:27:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5335:27:21"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5268:3:21",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "5273:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5278:6:21",
														"type": ""
													}
												],
												"src": "5222:146:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5457:340:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5467:74:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5533:6:21"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5492:40:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5492:48:21"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5476:15:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5476:65:21"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "5467:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "5557:5:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5564:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5550:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5550:21:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5550:21:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5580:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "5595:5:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5602:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5591:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5591:16:21"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "5584:3:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5645:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "5647:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5647:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5647:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5626:3:21"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5631:6:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5622:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5622:16:21"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5640:3:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5619:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5619:25:21"
															},
															"nodeType": "YulIf",
															"src": "5616:112:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5774:3:21"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "5779:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5784:6:21"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "5737:36:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5737:54:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5737:54:21"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5430:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5435:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5443:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "5451:5:21",
														"type": ""
													}
												],
												"src": "5374:423:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5877:277:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5926:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "5928:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5928:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5928:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5905:6:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5913:4:21",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5901:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5901:17:21"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "5920:3:21"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5897:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5897:27:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5890:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5890:35:21"
															},
															"nodeType": "YulIf",
															"src": "5887:122:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6018:34:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6045:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6032:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6032:20:21"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6022:6:21",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6061:87:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6121:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6129:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6117:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6117:17:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6136:6:21"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6144:3:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6070:46:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6070:78:21"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6061:5:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5855:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5863:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "5871:5:21",
														"type": ""
													}
												],
												"src": "5816:338:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6353:1316:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6400:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6402:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6402:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6402:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6374:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6383:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6370:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6370:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6395:3:21",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6366:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6366:33:21"
															},
															"nodeType": "YulIf",
															"src": "6363:120:21"
														},
														{
															"nodeType": "YulBlock",
															"src": "6493:117:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6508:15:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6522:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6512:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6537:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6572:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6583:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6568:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6568:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6592:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6547:20:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6547:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6537:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6620:118:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6635:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6649:2:21",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6639:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6665:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6700:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6711:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6696:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6696:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6720:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6675:20:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6675:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6665:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6748:303:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6763:46:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6794:9:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6805:2:21",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6790:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6790:18:21"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6777:12:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6777:32:21"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6767:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6856:83:21",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "6858:77:21"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6858:79:21"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6858:79:21"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6828:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6836:18:21",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6825:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6825:30:21"
																	},
																	"nodeType": "YulIf",
																	"src": "6822:117:21"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6953:88:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7013:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7024:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7009:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7009:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7033:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6963:45:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6963:78:21"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "6953:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7061:303:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7076:46:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7107:9:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7118:2:21",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7103:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7103:18:21"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7090:12:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7090:32:21"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7080:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7169:83:21",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "7171:77:21"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7171:79:21"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7171:79:21"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7141:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7149:18:21",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7138:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7138:30:21"
																	},
																	"nodeType": "YulIf",
																	"src": "7135:117:21"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7266:88:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7326:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7337:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7322:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7322:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7346:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7276:45:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7276:78:21"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "7266:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7374:288:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7389:47:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7420:9:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7431:3:21",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7416:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7416:19:21"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7403:12:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7403:33:21"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7393:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7483:83:21",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "7485:77:21"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7485:79:21"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7485:79:21"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7455:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7463:18:21",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7452:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7452:30:21"
																	},
																	"nodeType": "YulIf",
																	"src": "7449:117:21"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7580:72:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7624:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7635:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7620:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7620:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7644:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7590:29:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7590:62:21"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "7580:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6291:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6302:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6314:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6322:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6330:6:21",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6338:6:21",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "6346:6:21",
														"type": ""
													}
												],
												"src": "6160:1509:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7738:52:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7755:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7777:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "7760:16:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7760:23:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7748:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7748:36:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7748:36:21"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7726:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7733:3:21",
														"type": ""
													}
												],
												"src": "7675:115:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7892:122:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7902:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7914:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7925:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7910:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7910:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7902:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7980:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7993:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8004:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7989:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7989:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7938:41:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7938:69:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7938:69:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7864:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7876:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7887:4:21",
														"type": ""
													}
												],
												"src": "7796:218:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8163:946:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8210:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8212:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8212:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8212:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8184:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8193:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8180:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8180:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8205:3:21",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8176:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8176:33:21"
															},
															"nodeType": "YulIf",
															"src": "8173:120:21"
														},
														{
															"nodeType": "YulBlock",
															"src": "8303:117:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8318:15:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8332:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8322:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8347:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8382:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8393:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8378:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8378:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8402:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8357:20:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8357:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8347:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8430:118:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8445:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8459:2:21",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8449:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8475:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8510:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8521:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8506:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8506:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8530:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8485:20:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8485:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8475:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8558:118:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8573:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8587:2:21",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8577:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8603:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8638:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8649:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8634:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8634:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8658:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8613:20:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8613:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "8603:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8686:118:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8701:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8715:2:21",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8705:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8731:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8766:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8777:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8762:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8762:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8786:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8741:20:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8741:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "8731:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8814:288:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8829:47:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8860:9:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8871:3:21",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8856:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8856:19:21"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8843:12:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8843:33:21"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8833:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8923:83:21",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8925:77:21"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8925:79:21"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8925:79:21"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8895:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8903:18:21",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8892:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8892:30:21"
																	},
																	"nodeType": "YulIf",
																	"src": "8889:117:21"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9020:72:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9064:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9075:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9060:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9060:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9084:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9030:29:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9030:62:21"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "9020:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8101:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8112:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8124:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8132:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8140:6:21",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8148:6:21",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8156:6:21",
														"type": ""
													}
												],
												"src": "8020:1089:21"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 21,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c8114610076578063f23a6e61146100a6575b600080fd5b610060600480360381019061005b9190610250565b6100d6565b60405161006d9190610298565b60405180910390f35b610090600480360381019061008b9190610555565b610150565b60405161009d9190610633565b60405180910390f35b6100c060048036038101906100bb919061064e565b610165565b6040516100cd9190610633565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061014957506101488261017a565b5b9050919050565b600063bc197c8160e01b905095945050505050565b600063f23a6e6160e01b905095945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61022d816101f8565b811461023857600080fd5b50565b60008135905061024a81610224565b92915050565b600060208284031215610266576102656101ee565b5b60006102748482850161023b565b91505092915050565b60008115159050919050565b6102928161027d565b82525050565b60006020820190506102ad6000830184610289565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102de826102b3565b9050919050565b6102ee816102d3565b81146102f957600080fd5b50565b60008135905061030b816102e5565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61035f82610316565b810181811067ffffffffffffffff8211171561037e5761037d610327565b5b80604052505050565b60006103916101e4565b905061039d8282610356565b919050565b600067ffffffffffffffff8211156103bd576103bc610327565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b6103e6816103d3565b81146103f157600080fd5b50565b600081359050610403816103dd565b92915050565b600061041c610417846103a2565b610387565b9050808382526020820190506020840283018581111561043f5761043e6103ce565b5b835b81811015610468578061045488826103f4565b845260208401935050602081019050610441565b5050509392505050565b600082601f83011261048757610486610311565b5b8135610497848260208601610409565b91505092915050565b600080fd5b600067ffffffffffffffff8211156104c0576104bf610327565b5b6104c982610316565b9050602081019050919050565b82818337600083830152505050565b60006104f86104f3846104a5565b610387565b905082815260208101848484011115610514576105136104a0565b5b61051f8482856104d6565b509392505050565b600082601f83011261053c5761053b610311565b5b813561054c8482602086016104e5565b91505092915050565b600080600080600060a08688031215610571576105706101ee565b5b600061057f888289016102fc565b9550506020610590888289016102fc565b945050604086013567ffffffffffffffff8111156105b1576105b06101f3565b5b6105bd88828901610472565b935050606086013567ffffffffffffffff8111156105de576105dd6101f3565b5b6105ea88828901610472565b925050608086013567ffffffffffffffff81111561060b5761060a6101f3565b5b61061788828901610527565b9150509295509295909350565b61062d816101f8565b82525050565b60006020820190506106486000830184610624565b92915050565b600080600080600060a0868803121561066a576106696101ee565b5b6000610678888289016102fc565b9550506020610689888289016102fc565b945050604061069a888289016103f4565b93505060606106ab888289016103f4565b925050608086013567ffffffffffffffff8111156106cc576106cb6101f3565b5b6106d888828901610527565b915050929550929590935056fea26469706673582212207a8fd22152579f24b9978eea341db72e4f194c66a327740bcf2135a3c886ec3964736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x250 JUMP JUMPDEST PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x555 JUMP JUMPDEST PUSH2 0x150 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x64E JUMP JUMPDEST PUSH2 0x165 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x149 JUMPI POP PUSH2 0x148 DUP3 PUSH2 0x17A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22D DUP2 PUSH2 0x1F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24A DUP2 PUSH2 0x224 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x266 JUMPI PUSH2 0x265 PUSH2 0x1EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x274 DUP5 DUP3 DUP6 ADD PUSH2 0x23B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x292 DUP2 PUSH2 0x27D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x289 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE DUP3 PUSH2 0x2B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EE DUP2 PUSH2 0x2D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30B DUP2 PUSH2 0x2E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x35F DUP3 PUSH2 0x316 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x37E JUMPI PUSH2 0x37D PUSH2 0x327 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x391 PUSH2 0x1E4 JUMP JUMPDEST SWAP1 POP PUSH2 0x39D DUP3 DUP3 PUSH2 0x356 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3BD JUMPI PUSH2 0x3BC PUSH2 0x327 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E6 DUP2 PUSH2 0x3D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x403 DUP2 PUSH2 0x3DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41C PUSH2 0x417 DUP5 PUSH2 0x3A2 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x43F JUMPI PUSH2 0x43E PUSH2 0x3CE JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x468 JUMPI DUP1 PUSH2 0x454 DUP9 DUP3 PUSH2 0x3F4 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x441 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x487 JUMPI PUSH2 0x486 PUSH2 0x311 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x497 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x409 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4C0 JUMPI PUSH2 0x4BF PUSH2 0x327 JUMP JUMPDEST JUMPDEST PUSH2 0x4C9 DUP3 PUSH2 0x316 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F8 PUSH2 0x4F3 DUP5 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x514 JUMPI PUSH2 0x513 PUSH2 0x4A0 JUMP JUMPDEST JUMPDEST PUSH2 0x51F DUP5 DUP3 DUP6 PUSH2 0x4D6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x53C JUMPI PUSH2 0x53B PUSH2 0x311 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x54C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x571 JUMPI PUSH2 0x570 PUSH2 0x1EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x57F DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x590 DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5B1 JUMPI PUSH2 0x5B0 PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x5BD DUP9 DUP3 DUP10 ADD PUSH2 0x472 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5DE JUMPI PUSH2 0x5DD PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x5EA DUP9 DUP3 DUP10 ADD PUSH2 0x472 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x60B JUMPI PUSH2 0x60A PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x617 DUP9 DUP3 DUP10 ADD PUSH2 0x527 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x62D DUP2 PUSH2 0x1F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x648 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x624 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x66A JUMPI PUSH2 0x669 PUSH2 0x1EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x678 DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x689 DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x69A DUP9 DUP3 DUP10 ADD PUSH2 0x3F4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x6AB DUP9 DUP3 DUP10 ADD PUSH2 0x3F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CC JUMPI PUSH2 0x6CB PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x6D8 DUP9 DUP3 DUP10 ADD PUSH2 0x527 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x8FD22152579F24B9978EEA341DB72E4F194C66A327740BCF2135A3 0xC8 DUP7 0xEC CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "451:522:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:221:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;724:247:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;499:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;387:221:3;489:4;527:34;512:49;;;:11;:49;;;;:89;;;;565:36;589:11;565:23;:36::i;:::-;512:89;505:96;;387:221;;;:::o;724:247:2:-;903:6;928:36;;;921:43;;724:247;;;;;;;:::o;499:219::-;655:6;680:31;;;673:38;;499:219;;;;;;;:::o;829:155:12:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;7:75:21:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:122::-;1825:24;1843:5;1825:24;:::i;:::-;1818:5;1815:35;1805:63;;1864:1;1861;1854:12;1805:63;1752:122;:::o;1880:139::-;1926:5;1964:6;1951:20;1942:29;;1980:33;2007:5;1980:33;:::i;:::-;1880:139;;;;:::o;2025:117::-;2134:1;2131;2124:12;2148:102;2189:6;2240:2;2236:7;2231:2;2224:5;2220:14;2216:28;2206:38;;2148:102;;;:::o;2256:180::-;2304:77;2301:1;2294:88;2401:4;2398:1;2391:15;2425:4;2422:1;2415:15;2442:281;2525:27;2547:4;2525:27;:::i;:::-;2517:6;2513:40;2655:6;2643:10;2640:22;2619:18;2607:10;2604:34;2601:62;2598:88;;;2666:18;;:::i;:::-;2598:88;2706:10;2702:2;2695:22;2485:238;2442:281;;:::o;2729:129::-;2763:6;2790:20;;:::i;:::-;2780:30;;2819:33;2847:4;2839:6;2819:33;:::i;:::-;2729:129;;;:::o;2864:311::-;2941:4;3031:18;3023:6;3020:30;3017:56;;;3053:18;;:::i;:::-;3017:56;3103:4;3095:6;3091:17;3083:25;;3163:4;3157;3153:15;3145:23;;2864:311;;;:::o;3181:117::-;3290:1;3287;3280:12;3304:77;3341:7;3370:5;3359:16;;3304:77;;;:::o;3387:122::-;3460:24;3478:5;3460:24;:::i;:::-;3453:5;3450:35;3440:63;;3499:1;3496;3489:12;3440:63;3387:122;:::o;3515:139::-;3561:5;3599:6;3586:20;3577:29;;3615:33;3642:5;3615:33;:::i;:::-;3515:139;;;;:::o;3677:710::-;3773:5;3798:81;3814:64;3871:6;3814:64;:::i;:::-;3798:81;:::i;:::-;3789:90;;3899:5;3928:6;3921:5;3914:21;3962:4;3955:5;3951:16;3944:23;;4015:4;4007:6;4003:17;3995:6;3991:30;4044:3;4036:6;4033:15;4030:122;;;4063:79;;:::i;:::-;4030:122;4178:6;4161:220;4195:6;4190:3;4187:15;4161:220;;;4270:3;4299:37;4332:3;4320:10;4299:37;:::i;:::-;4294:3;4287:50;4366:4;4361:3;4357:14;4350:21;;4237:144;4221:4;4216:3;4212:14;4205:21;;4161:220;;;4165:21;3779:608;;3677:710;;;;;:::o;4410:370::-;4481:5;4530:3;4523:4;4515:6;4511:17;4507:27;4497:122;;4538:79;;:::i;:::-;4497:122;4655:6;4642:20;4680:94;4770:3;4762:6;4755:4;4747:6;4743:17;4680:94;:::i;:::-;4671:103;;4487:293;4410:370;;;;:::o;4786:117::-;4895:1;4892;4885:12;4909:307;4970:4;5060:18;5052:6;5049:30;5046:56;;;5082:18;;:::i;:::-;5046:56;5120:29;5142:6;5120:29;:::i;:::-;5112:37;;5204:4;5198;5194:15;5186:23;;4909:307;;;:::o;5222:146::-;5319:6;5314:3;5309;5296:30;5360:1;5351:6;5346:3;5342:16;5335:27;5222:146;;;:::o;5374:423::-;5451:5;5476:65;5492:48;5533:6;5492:48;:::i;:::-;5476:65;:::i;:::-;5467:74;;5564:6;5557:5;5550:21;5602:4;5595:5;5591:16;5640:3;5631:6;5626:3;5622:16;5619:25;5616:112;;;5647:79;;:::i;:::-;5616:112;5737:54;5784:6;5779:3;5774;5737:54;:::i;:::-;5457:340;5374:423;;;;;:::o;5816:338::-;5871:5;5920:3;5913:4;5905:6;5901:17;5897:27;5887:122;;5928:79;;:::i;:::-;5887:122;6045:6;6032:20;6070:78;6144:3;6136:6;6129:4;6121:6;6117:17;6070:78;:::i;:::-;6061:87;;5877:277;5816:338;;;;:::o;6160:1509::-;6314:6;6322;6330;6338;6346;6395:3;6383:9;6374:7;6370:23;6366:33;6363:120;;;6402:79;;:::i;:::-;6363:120;6522:1;6547:53;6592:7;6583:6;6572:9;6568:22;6547:53;:::i;:::-;6537:63;;6493:117;6649:2;6675:53;6720:7;6711:6;6700:9;6696:22;6675:53;:::i;:::-;6665:63;;6620:118;6805:2;6794:9;6790:18;6777:32;6836:18;6828:6;6825:30;6822:117;;;6858:79;;:::i;:::-;6822:117;6963:78;7033:7;7024:6;7013:9;7009:22;6963:78;:::i;:::-;6953:88;;6748:303;7118:2;7107:9;7103:18;7090:32;7149:18;7141:6;7138:30;7135:117;;;7171:79;;:::i;:::-;7135:117;7276:78;7346:7;7337:6;7326:9;7322:22;7276:78;:::i;:::-;7266:88;;7061:303;7431:3;7420:9;7416:19;7403:33;7463:18;7455:6;7452:30;7449:117;;;7485:79;;:::i;:::-;7449:117;7590:62;7644:7;7635:6;7624:9;7620:22;7590:62;:::i;:::-;7580:72;;7374:288;6160:1509;;;;;;;;:::o;7675:115::-;7760:23;7777:5;7760:23;:::i;:::-;7755:3;7748:36;7675:115;;:::o;7796:218::-;7887:4;7925:2;7914:9;7910:18;7902:26;;7938:69;8004:1;7993:9;7989:17;7980:6;7938:69;:::i;:::-;7796:218;;;;:::o;8020:1089::-;8124:6;8132;8140;8148;8156;8205:3;8193:9;8184:7;8180:23;8176:33;8173:120;;;8212:79;;:::i;:::-;8173:120;8332:1;8357:53;8402:7;8393:6;8382:9;8378:22;8357:53;:::i;:::-;8347:63;;8303:117;8459:2;8485:53;8530:7;8521:6;8510:9;8506:22;8485:53;:::i;:::-;8475:63;;8430:118;8587:2;8613:53;8658:7;8649:6;8638:9;8634:22;8613:53;:::i;:::-;8603:63;;8558:118;8715:2;8741:53;8786:7;8777:6;8766:9;8762:22;8741:53;:::i;:::-;8731:63;;8686:118;8871:3;8860:9;8856:19;8843:33;8903:18;8895:6;8892:30;8889:117;;;8925:79;;:::i;:::-;8889:117;9030:62;9084:7;9075:6;9064:9;9060:22;9030:62;:::i;:::-;9020:72;;8814:288;8020:1089;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "363800",
								"executionCost": "399",
								"totalCost": "364199"
							},
							"external": {
								"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
								"onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
								"supportsInterface(bytes4)": "705"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 451,
									"end": 973,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 451,
									"end": 973,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207a8fd22152579f24b9978eea341db72e4f194c66a327740bcf2135a3c886ec3964736f6c63430008120033",
									".code": [
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 973,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 451,
											"end": 973,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 387,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 387,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 387,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 724,
											"end": 971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 724,
											"end": 971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 724,
											"end": 971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 499,
											"end": 718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 499,
											"end": 718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 499,
											"end": 718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 489,
											"end": 493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 527,
											"end": 561,
											"name": "PUSH",
											"source": 3,
											"value": "4E2312E000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 512,
											"end": 561,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 512,
											"end": 523,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 512,
											"end": 561,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 512,
											"end": 561,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 512,
											"end": 561,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 512,
											"end": 601,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 512,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 512,
											"end": 601,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 512,
											"end": 601,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 565,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 589,
											"end": 600,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 565,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 565,
											"end": 601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 565,
											"end": 601,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 512,
											"end": 601,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 512,
											"end": 601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 505,
											"end": 601,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 505,
											"end": 601,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 903,
											"end": 909,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 921,
											"end": 964,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 921,
											"end": 964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 655,
											"end": 661,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 673,
											"end": 711,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 673,
											"end": 711,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 21,
											"value": "30"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 21,
											"value": "31"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 21,
											"value": "32"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 21,
											"value": "33"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 21,
											"value": "34"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "66"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "33"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 21,
											"value": "66"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "67"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 21,
											"value": "67"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 21,
											"value": "35"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "69"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "34"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 21,
											"value": "69"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 21,
											"value": "8"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "71"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "72"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "31"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 21,
											"value": "72"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 21,
											"value": "71"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "73"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "35"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 21,
											"value": "73"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 21,
											"value": "36"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 21,
											"value": "37"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "76"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "36"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 21,
											"value": "76"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 21,
											"value": "11"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "78"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "37"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 21,
											"value": "78"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "tag",
											"source": 21,
											"value": "38"
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1637,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1584,
											"end": 1638,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1518,
											"end": 1644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "tag",
											"source": 21,
											"value": "39"
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "81"
										},
										{
											"begin": 1734,
											"end": 1739,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "38"
										},
										{
											"begin": 1716,
											"end": 1740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "tag",
											"source": 21,
											"value": "81"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1650,
											"end": 1746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "tag",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "83"
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "39"
										},
										{
											"begin": 1825,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "tag",
											"source": 21,
											"value": "83"
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1818,
											"end": 1823,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1815,
											"end": 1850,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "84"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1862,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1854,
											"end": 1866,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "tag",
											"source": 21,
											"value": "84"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1752,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "tag",
											"source": 21,
											"value": "41"
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1926,
											"end": 1931,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1970,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "86"
										},
										{
											"begin": 2007,
											"end": 2012,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 1980,
											"end": 2013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "tag",
											"source": 21,
											"value": "86"
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1880,
											"end": 2019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2025,
											"end": 2142,
											"name": "tag",
											"source": 21,
											"value": "42"
										},
										{
											"begin": 2025,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2134,
											"end": 2135,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2131,
											"end": 2132,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2124,
											"end": 2136,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 2148,
											"end": 2250,
											"name": "tag",
											"source": 21,
											"value": "43"
										},
										{
											"begin": 2148,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2189,
											"end": 2195,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2242,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 2236,
											"end": 2243,
											"name": "NOT",
											"source": 21
										},
										{
											"begin": 2231,
											"end": 2233,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 2224,
											"end": 2229,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 2220,
											"end": 2234,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2216,
											"end": 2244,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 2206,
											"end": 2244,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2206,
											"end": 2244,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2148,
											"end": 2250,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2148,
											"end": 2250,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2148,
											"end": 2250,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2148,
											"end": 2250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2256,
											"end": 2436,
											"name": "tag",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 2256,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2304,
											"end": 2381,
											"name": "PUSH",
											"source": 21,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2301,
											"end": 2302,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2294,
											"end": 2382,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2401,
											"end": 2405,
											"name": "PUSH",
											"source": 21,
											"value": "41"
										},
										{
											"begin": 2398,
											"end": 2399,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 2391,
											"end": 2406,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2425,
											"end": 2429,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 2422,
											"end": 2423,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2415,
											"end": 2430,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 2442,
											"end": 2723,
											"name": "tag",
											"source": 21,
											"value": "45"
										},
										{
											"begin": 2442,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2525,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "91"
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2525,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "43"
										},
										{
											"begin": 2525,
											"end": 2552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2525,
											"end": 2552,
											"name": "tag",
											"source": 21,
											"value": "91"
										},
										{
											"begin": 2525,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2517,
											"end": 2523,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2513,
											"end": 2553,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2655,
											"end": 2661,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2643,
											"end": 2653,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2640,
											"end": 2662,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2607,
											"end": 2617,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2604,
											"end": 2638,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 2601,
											"end": 2663,
											"name": "OR",
											"source": 21
										},
										{
											"begin": 2598,
											"end": 2686,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 2598,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "92"
										},
										{
											"begin": 2598,
											"end": 2686,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 2666,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "93"
										},
										{
											"begin": 2666,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 2666,
											"end": 2684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2666,
											"end": 2684,
											"name": "tag",
											"source": 21,
											"value": "93"
										},
										{
											"begin": 2666,
											"end": 2684,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2598,
											"end": 2686,
											"name": "tag",
											"source": 21,
											"value": "92"
										},
										{
											"begin": 2598,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2706,
											"end": 2716,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2702,
											"end": 2704,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 2695,
											"end": 2717,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2485,
											"end": 2723,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2442,
											"end": 2723,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2442,
											"end": 2723,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2442,
											"end": 2723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2729,
											"end": 2858,
											"name": "tag",
											"source": 21,
											"value": "46"
										},
										{
											"begin": 2729,
											"end": 2858,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2763,
											"end": 2769,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2790,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "95"
										},
										{
											"begin": 2790,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "30"
										},
										{
											"begin": 2790,
											"end": 2810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2790,
											"end": 2810,
											"name": "tag",
											"source": 21,
											"value": "95"
										},
										{
											"begin": 2790,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2780,
											"end": 2810,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2780,
											"end": 2810,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2819,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "96"
										},
										{
											"begin": 2847,
											"end": 2851,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2839,
											"end": 2845,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2819,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "45"
										},
										{
											"begin": 2819,
											"end": 2852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2819,
											"end": 2852,
											"name": "tag",
											"source": 21,
											"value": "96"
										},
										{
											"begin": 2819,
											"end": 2852,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2729,
											"end": 2858,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2729,
											"end": 2858,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2729,
											"end": 2858,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2729,
											"end": 2858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2864,
											"end": 3175,
											"name": "tag",
											"source": 21,
											"value": "47"
										},
										{
											"begin": 2864,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2941,
											"end": 2945,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3031,
											"end": 3049,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3020,
											"end": 3050,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 3017,
											"end": 3073,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 3017,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "98"
										},
										{
											"begin": 3017,
											"end": 3073,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "99"
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 3053,
											"end": 3071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "tag",
											"source": 21,
											"value": "99"
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3017,
											"end": 3073,
											"name": "tag",
											"source": 21,
											"value": "98"
										},
										{
											"begin": 3017,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3103,
											"end": 3107,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3101,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3091,
											"end": 3108,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 3083,
											"end": 3108,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3083,
											"end": 3108,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3163,
											"end": 3167,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3157,
											"end": 3161,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3145,
											"end": 3168,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3145,
											"end": 3168,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2864,
											"end": 3175,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2864,
											"end": 3175,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2864,
											"end": 3175,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2864,
											"end": 3175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3181,
											"end": 3298,
											"name": "tag",
											"source": 21,
											"value": "48"
										},
										{
											"begin": 3181,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3290,
											"end": 3291,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3287,
											"end": 3288,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3280,
											"end": 3292,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 3304,
											"end": 3381,
											"name": "tag",
											"source": 21,
											"value": "49"
										},
										{
											"begin": 3304,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3341,
											"end": 3348,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3370,
											"end": 3375,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3359,
											"end": 3375,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3359,
											"end": 3375,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3304,
											"end": 3381,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3304,
											"end": 3381,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3304,
											"end": 3381,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3304,
											"end": 3381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3387,
											"end": 3509,
											"name": "tag",
											"source": 21,
											"value": "50"
										},
										{
											"begin": 3387,
											"end": 3509,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3460,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "103"
										},
										{
											"begin": 3478,
											"end": 3483,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3460,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "49"
										},
										{
											"begin": 3460,
											"end": 3484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3460,
											"end": 3484,
											"name": "tag",
											"source": 21,
											"value": "103"
										},
										{
											"begin": 3460,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3453,
											"end": 3458,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3450,
											"end": 3485,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 3440,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "104"
										},
										{
											"begin": 3440,
											"end": 3503,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3499,
											"end": 3500,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3496,
											"end": 3497,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3489,
											"end": 3501,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 3440,
											"end": 3503,
											"name": "tag",
											"source": 21,
											"value": "104"
										},
										{
											"begin": 3440,
											"end": 3503,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3387,
											"end": 3509,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3387,
											"end": 3509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3515,
											"end": 3654,
											"name": "tag",
											"source": 21,
											"value": "51"
										},
										{
											"begin": 3515,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3561,
											"end": 3566,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3599,
											"end": 3605,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3586,
											"end": 3606,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 3577,
											"end": 3606,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3577,
											"end": 3606,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "106"
										},
										{
											"begin": 3642,
											"end": 3647,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "50"
										},
										{
											"begin": 3615,
											"end": 3648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "tag",
											"source": 21,
											"value": "106"
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3515,
											"end": 3654,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 3515,
											"end": 3654,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3515,
											"end": 3654,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3515,
											"end": 3654,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3515,
											"end": 3654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3677,
											"end": 4387,
											"name": "tag",
											"source": 21,
											"value": "52"
										},
										{
											"begin": 3677,
											"end": 4387,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3773,
											"end": 3778,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3798,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "108"
										},
										{
											"begin": 3814,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "109"
										},
										{
											"begin": 3871,
											"end": 3877,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 3814,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "47"
										},
										{
											"begin": 3814,
											"end": 3878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3814,
											"end": 3878,
											"name": "tag",
											"source": 21,
											"value": "109"
										},
										{
											"begin": 3814,
											"end": 3878,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3798,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "46"
										},
										{
											"begin": 3798,
											"end": 3879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3798,
											"end": 3879,
											"name": "tag",
											"source": 21,
											"value": "108"
										},
										{
											"begin": 3798,
											"end": 3879,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3789,
											"end": 3879,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3789,
											"end": 3879,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3899,
											"end": 3904,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3928,
											"end": 3934,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3921,
											"end": 3926,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3914,
											"end": 3935,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3962,
											"end": 3966,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3955,
											"end": 3960,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3951,
											"end": 3967,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3944,
											"end": 3967,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3944,
											"end": 3967,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4015,
											"end": 4019,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4007,
											"end": 4013,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4003,
											"end": 4020,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 3995,
											"end": 4001,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3991,
											"end": 4021,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4044,
											"end": 4047,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 4036,
											"end": 4042,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4033,
											"end": 4048,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "110"
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4063,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "111"
										},
										{
											"begin": 4063,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "48"
										},
										{
											"begin": 4063,
											"end": 4142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4063,
											"end": 4142,
											"name": "tag",
											"source": 21,
											"value": "111"
										},
										{
											"begin": 4063,
											"end": 4142,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "tag",
											"source": 21,
											"value": "110"
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4178,
											"end": 4184,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "tag",
											"source": 21,
											"value": "112"
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4195,
											"end": 4201,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4190,
											"end": 4193,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4187,
											"end": 4202,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "114"
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4270,
											"end": 4273,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4299,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "115"
										},
										{
											"begin": 4332,
											"end": 4335,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 4320,
											"end": 4330,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4299,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "51"
										},
										{
											"begin": 4299,
											"end": 4336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4299,
											"end": 4336,
											"name": "tag",
											"source": 21,
											"value": "115"
										},
										{
											"begin": 4299,
											"end": 4336,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4294,
											"end": 4297,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4287,
											"end": 4337,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4361,
											"end": 4364,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4357,
											"end": 4371,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4350,
											"end": 4371,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 4350,
											"end": 4371,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4237,
											"end": 4381,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4221,
											"end": 4225,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4216,
											"end": 4219,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4212,
											"end": 4226,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4205,
											"end": 4226,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4205,
											"end": 4226,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "112"
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "tag",
											"source": 21,
											"value": "114"
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4165,
											"end": 4186,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3779,
											"end": 4387,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3779,
											"end": 4387,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3677,
											"end": 4387,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 3677,
											"end": 4387,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 3677,
											"end": 4387,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3677,
											"end": 4387,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3677,
											"end": 4387,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3677,
											"end": 4387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4410,
											"end": 4780,
											"name": "tag",
											"source": 21,
											"value": "53"
										},
										{
											"begin": 4410,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4481,
											"end": 4486,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4530,
											"end": 4533,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4523,
											"end": 4527,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 4515,
											"end": 4521,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 4511,
											"end": 4528,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4507,
											"end": 4534,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 4497,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "117"
										},
										{
											"begin": 4497,
											"end": 4619,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4538,
											"end": 4617,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "118"
										},
										{
											"begin": 4538,
											"end": 4617,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "42"
										},
										{
											"begin": 4538,
											"end": 4617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4538,
											"end": 4617,
											"name": "tag",
											"source": 21,
											"value": "118"
										},
										{
											"begin": 4538,
											"end": 4617,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4497,
											"end": 4619,
											"name": "tag",
											"source": 21,
											"value": "117"
										},
										{
											"begin": 4497,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4655,
											"end": 4661,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4642,
											"end": 4662,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 4680,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "119"
										},
										{
											"begin": 4770,
											"end": 4773,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4762,
											"end": 4768,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4755,
											"end": 4759,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4747,
											"end": 4753,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 4743,
											"end": 4760,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4680,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "52"
										},
										{
											"begin": 4680,
											"end": 4774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4680,
											"end": 4774,
											"name": "tag",
											"source": 21,
											"value": "119"
										},
										{
											"begin": 4680,
											"end": 4774,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4671,
											"end": 4774,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4671,
											"end": 4774,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4487,
											"end": 4780,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4410,
											"end": 4780,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4410,
											"end": 4780,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4410,
											"end": 4780,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4410,
											"end": 4780,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4410,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4786,
											"end": 4903,
											"name": "tag",
											"source": 21,
											"value": "54"
										},
										{
											"begin": 4786,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4895,
											"end": 4896,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4892,
											"end": 4893,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4885,
											"end": 4897,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 4909,
											"end": 5216,
											"name": "tag",
											"source": 21,
											"value": "55"
										},
										{
											"begin": 4909,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4970,
											"end": 4974,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5060,
											"end": 5078,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5052,
											"end": 5058,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5049,
											"end": 5079,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 5046,
											"end": 5102,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5046,
											"end": 5102,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "122"
										},
										{
											"begin": 5046,
											"end": 5102,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5082,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "123"
										},
										{
											"begin": 5082,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 5082,
											"end": 5100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5082,
											"end": 5100,
											"name": "tag",
											"source": 21,
											"value": "123"
										},
										{
											"begin": 5082,
											"end": 5100,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5046,
											"end": 5102,
											"name": "tag",
											"source": 21,
											"value": "122"
										},
										{
											"begin": 5046,
											"end": 5102,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5120,
											"end": 5149,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "124"
										},
										{
											"begin": 5142,
											"end": 5148,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5120,
											"end": 5149,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "43"
										},
										{
											"begin": 5120,
											"end": 5149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5120,
											"end": 5149,
											"name": "tag",
											"source": 21,
											"value": "124"
										},
										{
											"begin": 5120,
											"end": 5149,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5112,
											"end": 5149,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5112,
											"end": 5149,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5204,
											"end": 5208,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5194,
											"end": 5209,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5186,
											"end": 5209,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5186,
											"end": 5209,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4909,
											"end": 5216,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4909,
											"end": 5216,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4909,
											"end": 5216,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4909,
											"end": 5216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5222,
											"end": 5368,
											"name": "tag",
											"source": 21,
											"value": "56"
										},
										{
											"begin": 5222,
											"end": 5368,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5319,
											"end": 5325,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5314,
											"end": 5317,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5309,
											"end": 5312,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 5296,
											"end": 5326,
											"name": "CALLDATACOPY",
											"source": 21
										},
										{
											"begin": 5360,
											"end": 5361,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5351,
											"end": 5357,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 5346,
											"end": 5349,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 5342,
											"end": 5358,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5335,
											"end": 5362,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5222,
											"end": 5368,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5222,
											"end": 5368,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5222,
											"end": 5368,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5222,
											"end": 5368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5374,
											"end": 5797,
											"name": "tag",
											"source": 21,
											"value": "57"
										},
										{
											"begin": 5374,
											"end": 5797,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5451,
											"end": 5456,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5541,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "127"
										},
										{
											"begin": 5492,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "128"
										},
										{
											"begin": 5533,
											"end": 5539,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 5492,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "55"
										},
										{
											"begin": 5492,
											"end": 5540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5492,
											"end": 5540,
											"name": "tag",
											"source": 21,
											"value": "128"
										},
										{
											"begin": 5492,
											"end": 5540,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5476,
											"end": 5541,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "46"
										},
										{
											"begin": 5476,
											"end": 5541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5476,
											"end": 5541,
											"name": "tag",
											"source": 21,
											"value": "127"
										},
										{
											"begin": 5476,
											"end": 5541,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5467,
											"end": 5541,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5467,
											"end": 5541,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5564,
											"end": 5570,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5557,
											"end": 5562,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5550,
											"end": 5571,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5602,
											"end": 5606,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 5595,
											"end": 5600,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5591,
											"end": 5607,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5640,
											"end": 5643,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 5631,
											"end": 5637,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 5626,
											"end": 5629,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 5622,
											"end": 5638,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5619,
											"end": 5644,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 5616,
											"end": 5728,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5616,
											"end": 5728,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "129"
										},
										{
											"begin": 5616,
											"end": 5728,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5647,
											"end": 5726,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "130"
										},
										{
											"begin": 5647,
											"end": 5726,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "54"
										},
										{
											"begin": 5647,
											"end": 5726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5647,
											"end": 5726,
											"name": "tag",
											"source": 21,
											"value": "130"
										},
										{
											"begin": 5647,
											"end": 5726,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5616,
											"end": 5728,
											"name": "tag",
											"source": 21,
											"value": "129"
										},
										{
											"begin": 5616,
											"end": 5728,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5737,
											"end": 5791,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "131"
										},
										{
											"begin": 5784,
											"end": 5790,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 5779,
											"end": 5782,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5774,
											"end": 5777,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 5737,
											"end": 5791,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "56"
										},
										{
											"begin": 5737,
											"end": 5791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5737,
											"end": 5791,
											"name": "tag",
											"source": 21,
											"value": "131"
										},
										{
											"begin": 5737,
											"end": 5791,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5457,
											"end": 5797,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5374,
											"end": 5797,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 5374,
											"end": 5797,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 5374,
											"end": 5797,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5374,
											"end": 5797,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5374,
											"end": 5797,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5374,
											"end": 5797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5816,
											"end": 6154,
											"name": "tag",
											"source": 21,
											"value": "58"
										},
										{
											"begin": 5816,
											"end": 6154,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5871,
											"end": 5876,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5920,
											"end": 5923,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5913,
											"end": 5917,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 5905,
											"end": 5911,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 5901,
											"end": 5918,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5897,
											"end": 5924,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 5887,
											"end": 6009,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "133"
										},
										{
											"begin": 5887,
											"end": 6009,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5928,
											"end": 6007,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "134"
										},
										{
											"begin": 5928,
											"end": 6007,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "42"
										},
										{
											"begin": 5928,
											"end": 6007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5928,
											"end": 6007,
											"name": "tag",
											"source": 21,
											"value": "134"
										},
										{
											"begin": 5928,
											"end": 6007,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5887,
											"end": 6009,
											"name": "tag",
											"source": 21,
											"value": "133"
										},
										{
											"begin": 5887,
											"end": 6009,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6045,
											"end": 6051,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6032,
											"end": 6052,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 6070,
											"end": 6148,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "135"
										},
										{
											"begin": 6144,
											"end": 6147,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 6136,
											"end": 6142,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6129,
											"end": 6133,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6121,
											"end": 6127,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 6117,
											"end": 6134,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6070,
											"end": 6148,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "57"
										},
										{
											"begin": 6070,
											"end": 6148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6070,
											"end": 6148,
											"name": "tag",
											"source": 21,
											"value": "135"
										},
										{
											"begin": 6070,
											"end": 6148,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6061,
											"end": 6148,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 6061,
											"end": 6148,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5877,
											"end": 6154,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5816,
											"end": 6154,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 5816,
											"end": 6154,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5816,
											"end": 6154,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5816,
											"end": 6154,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5816,
											"end": 6154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6160,
											"end": 7669,
											"name": "tag",
											"source": 21,
											"value": "14"
										},
										{
											"begin": 6160,
											"end": 7669,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6314,
											"end": 6320,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6328,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6330,
											"end": 6336,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6338,
											"end": 6344,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6346,
											"end": 6352,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6395,
											"end": 6398,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 6383,
											"end": 6392,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 6374,
											"end": 6381,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 6370,
											"end": 6393,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 6366,
											"end": 6399,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 6363,
											"end": 6483,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 6363,
											"end": 6483,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "137"
										},
										{
											"begin": 6363,
											"end": 6483,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 6402,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "138"
										},
										{
											"begin": 6402,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "31"
										},
										{
											"begin": 6402,
											"end": 6481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6402,
											"end": 6481,
											"name": "tag",
											"source": 21,
											"value": "138"
										},
										{
											"begin": 6402,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6363,
											"end": 6483,
											"name": "tag",
											"source": 21,
											"value": "137"
										},
										{
											"begin": 6363,
											"end": 6483,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6522,
											"end": 6523,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6547,
											"end": 6600,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "139"
										},
										{
											"begin": 6592,
											"end": 6599,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 6583,
											"end": 6589,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6572,
											"end": 6581,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 6568,
											"end": 6590,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6547,
											"end": 6600,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "41"
										},
										{
											"begin": 6547,
											"end": 6600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6547,
											"end": 6600,
											"name": "tag",
											"source": 21,
											"value": "139"
										},
										{
											"begin": 6547,
											"end": 6600,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6537,
											"end": 6600,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 6537,
											"end": 6600,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6493,
											"end": 6610,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6649,
											"end": 6651,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6675,
											"end": 6728,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "140"
										},
										{
											"begin": 6720,
											"end": 6727,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 6711,
											"end": 6717,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6700,
											"end": 6709,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 6696,
											"end": 6718,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6675,
											"end": 6728,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "41"
										},
										{
											"begin": 6675,
											"end": 6728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6675,
											"end": 6728,
											"name": "tag",
											"source": 21,
											"value": "140"
										},
										{
											"begin": 6675,
											"end": 6728,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6665,
											"end": 6728,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 6665,
											"end": 6728,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6620,
											"end": 6738,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6805,
											"end": 6807,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 6794,
											"end": 6803,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 6790,
											"end": 6808,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6777,
											"end": 6809,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 6836,
											"end": 6854,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6828,
											"end": 6834,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6825,
											"end": 6855,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 6822,
											"end": 6939,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 6822,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "141"
										},
										{
											"begin": 6822,
											"end": 6939,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 6858,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "142"
										},
										{
											"begin": 6858,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "32"
										},
										{
											"begin": 6858,
											"end": 6937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6858,
											"end": 6937,
											"name": "tag",
											"source": 21,
											"value": "142"
										},
										{
											"begin": 6858,
											"end": 6937,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6822,
											"end": 6939,
											"name": "tag",
											"source": 21,
											"value": "141"
										},
										{
											"begin": 6822,
											"end": 6939,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6963,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "143"
										},
										{
											"begin": 7033,
											"end": 7040,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 7024,
											"end": 7030,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7013,
											"end": 7022,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 7009,
											"end": 7031,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6963,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "53"
										},
										{
											"begin": 6963,
											"end": 7041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6963,
											"end": 7041,
											"name": "tag",
											"source": 21,
											"value": "143"
										},
										{
											"begin": 6963,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6953,
											"end": 7041,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 6953,
											"end": 7041,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6748,
											"end": 7051,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7118,
											"end": 7120,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 7107,
											"end": 7116,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 7103,
											"end": 7121,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7090,
											"end": 7122,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 7149,
											"end": 7167,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7141,
											"end": 7147,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7138,
											"end": 7168,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 7135,
											"end": 7252,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 7135,
											"end": 7252,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "144"
										},
										{
											"begin": 7135,
											"end": 7252,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 7171,
											"end": 7250,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "145"
										},
										{
											"begin": 7171,
											"end": 7250,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "32"
										},
										{
											"begin": 7171,
											"end": 7250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7171,
											"end": 7250,
											"name": "tag",
											"source": 21,
											"value": "145"
										},
										{
											"begin": 7171,
											"end": 7250,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7135,
											"end": 7252,
											"name": "tag",
											"source": 21,
											"value": "144"
										},
										{
											"begin": 7135,
											"end": 7252,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7276,
											"end": 7354,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "146"
										},
										{
											"begin": 7346,
											"end": 7353,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 7337,
											"end": 7343,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7326,
											"end": 7335,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 7322,
											"end": 7344,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7276,
											"end": 7354,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "53"
										},
										{
											"begin": 7276,
											"end": 7354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7276,
											"end": 7354,
											"name": "tag",
											"source": 21,
											"value": "146"
										},
										{
											"begin": 7276,
											"end": 7354,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7266,
											"end": 7354,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 7266,
											"end": 7354,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7061,
											"end": 7364,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7431,
											"end": 7434,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 7420,
											"end": 7429,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 7416,
											"end": 7435,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7403,
											"end": 7436,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 7463,
											"end": 7481,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7455,
											"end": 7461,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7452,
											"end": 7482,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 7449,
											"end": 7566,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 7449,
											"end": 7566,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "147"
										},
										{
											"begin": 7449,
											"end": 7566,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 7485,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "148"
										},
										{
											"begin": 7485,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "32"
										},
										{
											"begin": 7485,
											"end": 7564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7485,
											"end": 7564,
											"name": "tag",
											"source": 21,
											"value": "148"
										},
										{
											"begin": 7485,
											"end": 7564,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7449,
											"end": 7566,
											"name": "tag",
											"source": 21,
											"value": "147"
										},
										{
											"begin": 7449,
											"end": 7566,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7590,
											"end": 7652,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "149"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 7635,
											"end": 7641,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7624,
											"end": 7633,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 7620,
											"end": 7642,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7590,
											"end": 7652,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "58"
										},
										{
											"begin": 7590,
											"end": 7652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7590,
											"end": 7652,
											"name": "tag",
											"source": 21,
											"value": "149"
										},
										{
											"begin": 7590,
											"end": 7652,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7580,
											"end": 7652,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7580,
											"end": 7652,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7374,
											"end": 7662,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6160,
											"end": 7669,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6160,
											"end": 7669,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 6160,
											"end": 7669,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6160,
											"end": 7669,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6160,
											"end": 7669,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 6160,
											"end": 7669,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6160,
											"end": 7669,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 6160,
											"end": 7669,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6160,
											"end": 7669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7675,
											"end": 7790,
											"name": "tag",
											"source": 21,
											"value": "59"
										},
										{
											"begin": 7675,
											"end": 7790,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7760,
											"end": 7783,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "151"
										},
										{
											"begin": 7777,
											"end": 7782,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7760,
											"end": 7783,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "33"
										},
										{
											"begin": 7760,
											"end": 7783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7760,
											"end": 7783,
											"name": "tag",
											"source": 21,
											"value": "151"
										},
										{
											"begin": 7760,
											"end": 7783,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7755,
											"end": 7758,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7748,
											"end": 7784,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7675,
											"end": 7790,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7675,
											"end": 7790,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7675,
											"end": 7790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7796,
											"end": 8014,
											"name": "tag",
											"source": 21,
											"value": "17"
										},
										{
											"begin": 7796,
											"end": 8014,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7887,
											"end": 7891,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7925,
											"end": 7927,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 7914,
											"end": 7923,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7910,
											"end": 7928,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7902,
											"end": 7928,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7902,
											"end": 7928,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7938,
											"end": 8007,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "153"
										},
										{
											"begin": 8004,
											"end": 8005,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7993,
											"end": 8002,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 7989,
											"end": 8006,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 7938,
											"end": 8007,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "59"
										},
										{
											"begin": 7938,
											"end": 8007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7938,
											"end": 8007,
											"name": "tag",
											"source": 21,
											"value": "153"
										},
										{
											"begin": 7938,
											"end": 8007,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7796,
											"end": 8014,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 7796,
											"end": 8014,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7796,
											"end": 8014,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7796,
											"end": 8014,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7796,
											"end": 8014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8020,
											"end": 9109,
											"name": "tag",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 8020,
											"end": 9109,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8124,
											"end": 8130,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8132,
											"end": 8138,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 8140,
											"end": 8146,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8148,
											"end": 8154,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 8156,
											"end": 8162,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8205,
											"end": 8208,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 8193,
											"end": 8202,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 8184,
											"end": 8191,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 8180,
											"end": 8203,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 8176,
											"end": 8209,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 8173,
											"end": 8293,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 8173,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "155"
										},
										{
											"begin": 8173,
											"end": 8293,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 8212,
											"end": 8291,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "156"
										},
										{
											"begin": 8212,
											"end": 8291,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "31"
										},
										{
											"begin": 8212,
											"end": 8291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8212,
											"end": 8291,
											"name": "tag",
											"source": 21,
											"value": "156"
										},
										{
											"begin": 8212,
											"end": 8291,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8173,
											"end": 8293,
											"name": "tag",
											"source": 21,
											"value": "155"
										},
										{
											"begin": 8173,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8332,
											"end": 8333,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8357,
											"end": 8410,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "157"
										},
										{
											"begin": 8402,
											"end": 8409,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 8393,
											"end": 8399,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8382,
											"end": 8391,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 8378,
											"end": 8400,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8357,
											"end": 8410,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "41"
										},
										{
											"begin": 8357,
											"end": 8410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8357,
											"end": 8410,
											"name": "tag",
											"source": 21,
											"value": "157"
										},
										{
											"begin": 8357,
											"end": 8410,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8347,
											"end": 8410,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 8347,
											"end": 8410,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8303,
											"end": 8420,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8459,
											"end": 8461,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 8485,
											"end": 8538,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "158"
										},
										{
											"begin": 8530,
											"end": 8537,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 8521,
											"end": 8527,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8510,
											"end": 8519,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 8506,
											"end": 8528,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8485,
											"end": 8538,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "41"
										},
										{
											"begin": 8485,
											"end": 8538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8485,
											"end": 8538,
											"name": "tag",
											"source": 21,
											"value": "158"
										},
										{
											"begin": 8485,
											"end": 8538,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8475,
											"end": 8538,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 8475,
											"end": 8538,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8430,
											"end": 8548,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8587,
											"end": 8589,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 8613,
											"end": 8666,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "159"
										},
										{
											"begin": 8658,
											"end": 8665,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 8649,
											"end": 8655,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8638,
											"end": 8647,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 8634,
											"end": 8656,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8613,
											"end": 8666,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "51"
										},
										{
											"begin": 8613,
											"end": 8666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8613,
											"end": 8666,
											"name": "tag",
											"source": 21,
											"value": "159"
										},
										{
											"begin": 8613,
											"end": 8666,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8603,
											"end": 8666,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 8603,
											"end": 8666,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8558,
											"end": 8676,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8715,
											"end": 8717,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 8741,
											"end": 8794,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "160"
										},
										{
											"begin": 8786,
											"end": 8793,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 8777,
											"end": 8783,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8766,
											"end": 8775,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 8762,
											"end": 8784,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8741,
											"end": 8794,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "51"
										},
										{
											"begin": 8741,
											"end": 8794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8741,
											"end": 8794,
											"name": "tag",
											"source": 21,
											"value": "160"
										},
										{
											"begin": 8741,
											"end": 8794,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8731,
											"end": 8794,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 8731,
											"end": 8794,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8686,
											"end": 8804,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8871,
											"end": 8874,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 8860,
											"end": 8869,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 8856,
											"end": 8875,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8843,
											"end": 8876,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 8903,
											"end": 8921,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8895,
											"end": 8901,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8892,
											"end": 8922,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 8889,
											"end": 9006,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 8889,
											"end": 9006,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "161"
										},
										{
											"begin": 8889,
											"end": 9006,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 8925,
											"end": 9004,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "162"
										},
										{
											"begin": 8925,
											"end": 9004,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "32"
										},
										{
											"begin": 8925,
											"end": 9004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8925,
											"end": 9004,
											"name": "tag",
											"source": 21,
											"value": "162"
										},
										{
											"begin": 8925,
											"end": 9004,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8889,
											"end": 9006,
											"name": "tag",
											"source": 21,
											"value": "161"
										},
										{
											"begin": 8889,
											"end": 9006,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9030,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "163"
										},
										{
											"begin": 9084,
											"end": 9091,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 9075,
											"end": 9081,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9064,
											"end": 9073,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 9060,
											"end": 9082,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9030,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "58"
										},
										{
											"begin": 9030,
											"end": 9092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9030,
											"end": 9092,
											"name": "tag",
											"source": 21,
											"value": "163"
										},
										{
											"begin": 9030,
											"end": 9092,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9020,
											"end": 9092,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 9020,
											"end": 9092,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8814,
											"end": 9102,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8020,
											"end": 9109,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 8020,
											"end": 9109,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 8020,
											"end": 9109,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8020,
											"end": 9109,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 8020,
											"end": 9109,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 8020,
											"end": 9109,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8020,
											"end": 9109,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 8020,
											"end": 9109,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8020,
											"end": 9109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"TokenBound/ERC6551Account.sol",
								"TokenBound/interfaces/IERC6551Account.sol",
								"TokenBound/lib/ERC6551AccountLib.sol",
								"TokenBound/lib/ERC6551BytecodeLib.sol",
								"TokenBound/lib/MinimalReceiver.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens. IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be stuck.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":\"ERC1155Holder\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519\",\"dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens. IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be stuck.",
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"ERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":\"ERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
				"ERC721Holder": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":414:767  contract ERC721Holder is IERC721Receiver {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":414:767  contract ERC721Holder is IERC721Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x150b7a02\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":603:765  function onERC721Received(address, address, uint256, bytes memory) public virtual override returns (bytes4) {... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":703:709  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":728:758  this.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":721:758  return this.onERC721Received.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":603:765  function onERC721Received(address, address, uint256, bytes memory) public virtual override returns (bytes4) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_11:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_12:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_13:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_14:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_15:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_39\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_14\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_16:\n        /* \"#utility.yul\":641:665   */\n      tag_41\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_15\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_42\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_42:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_17:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_44\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_16\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_18:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_19:\n        /* \"#utility.yul\":997:1021   */\n      tag_47\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_18\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_48\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_48:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_20:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_50\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_19\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1314   */\n    tag_21:\n        /* \"#utility.yul\":1306:1307   */\n      0x00\n        /* \"#utility.yul\":1303:1304   */\n      dup1\n        /* \"#utility.yul\":1296:1308   */\n      revert\n        /* \"#utility.yul\":1320:1437   */\n    tag_22:\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1426:1427   */\n      dup1\n        /* \"#utility.yul\":1419:1431   */\n      revert\n        /* \"#utility.yul\":1443:1545   */\n    tag_23:\n        /* \"#utility.yul\":1484:1490   */\n      0x00\n        /* \"#utility.yul\":1535:1537   */\n      0x1f\n        /* \"#utility.yul\":1531:1538   */\n      not\n        /* \"#utility.yul\":1526:1528   */\n      0x1f\n        /* \"#utility.yul\":1519:1524   */\n      dup4\n        /* \"#utility.yul\":1515:1529   */\n      add\n        /* \"#utility.yul\":1511:1539   */\n      and\n        /* \"#utility.yul\":1501:1539   */\n      swap1\n      pop\n        /* \"#utility.yul\":1443:1545   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1551:1731   */\n    tag_24:\n        /* \"#utility.yul\":1599:1676   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1596:1597   */\n      0x00\n        /* \"#utility.yul\":1589:1677   */\n      mstore\n        /* \"#utility.yul\":1696:1700   */\n      0x41\n        /* \"#utility.yul\":1693:1694   */\n      0x04\n        /* \"#utility.yul\":1686:1701   */\n      mstore\n        /* \"#utility.yul\":1720:1724   */\n      0x24\n        /* \"#utility.yul\":1717:1718   */\n      0x00\n        /* \"#utility.yul\":1710:1725   */\n      revert\n        /* \"#utility.yul\":1737:2018   */\n    tag_25:\n        /* \"#utility.yul\":1820:1847   */\n      tag_56\n        /* \"#utility.yul\":1842:1846   */\n      dup3\n        /* \"#utility.yul\":1820:1847   */\n      tag_23\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1812:1818   */\n      dup2\n        /* \"#utility.yul\":1808:1848   */\n      add\n        /* \"#utility.yul\":1950:1956   */\n      dup2\n        /* \"#utility.yul\":1938:1948   */\n      dup2\n        /* \"#utility.yul\":1935:1957   */\n      lt\n        /* \"#utility.yul\":1914:1932   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1902:1912   */\n      dup3\n        /* \"#utility.yul\":1899:1933   */\n      gt\n        /* \"#utility.yul\":1896:1958   */\n      or\n        /* \"#utility.yul\":1893:1981   */\n      iszero\n      tag_57\n      jumpi\n        /* \"#utility.yul\":1961:1979   */\n      tag_58\n      tag_24\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1893:1981   */\n    tag_57:\n        /* \"#utility.yul\":2001:2011   */\n      dup1\n        /* \"#utility.yul\":1997:1999   */\n      0x40\n        /* \"#utility.yul\":1990:2012   */\n      mstore\n        /* \"#utility.yul\":1780:2018   */\n      pop\n        /* \"#utility.yul\":1737:2018   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2024:2153   */\n    tag_26:\n        /* \"#utility.yul\":2058:2064   */\n      0x00\n        /* \"#utility.yul\":2085:2105   */\n      tag_60\n      tag_11\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":2075:2105   */\n      swap1\n      pop\n        /* \"#utility.yul\":2114:2147   */\n      tag_61\n        /* \"#utility.yul\":2142:2146   */\n      dup3\n        /* \"#utility.yul\":2134:2140   */\n      dup3\n        /* \"#utility.yul\":2114:2147   */\n      tag_25\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":2024:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2466   */\n    tag_27:\n        /* \"#utility.yul\":2220:2224   */\n      0x00\n        /* \"#utility.yul\":2310:2328   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2302:2308   */\n      dup3\n        /* \"#utility.yul\":2299:2329   */\n      gt\n        /* \"#utility.yul\":2296:2352   */\n      iszero\n      tag_63\n      jumpi\n        /* \"#utility.yul\":2332:2350   */\n      tag_64\n      tag_24\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2296:2352   */\n    tag_63:\n        /* \"#utility.yul\":2370:2399   */\n      tag_65\n        /* \"#utility.yul\":2392:2398   */\n      dup3\n        /* \"#utility.yul\":2370:2399   */\n      tag_23\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":2362:2399   */\n      swap1\n      pop\n        /* \"#utility.yul\":2454:2458   */\n      0x20\n        /* \"#utility.yul\":2448:2452   */\n      dup2\n        /* \"#utility.yul\":2444:2459   */\n      add\n        /* \"#utility.yul\":2436:2459   */\n      swap1\n      pop\n        /* \"#utility.yul\":2159:2466   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2472:2618   */\n    tag_28:\n        /* \"#utility.yul\":2569:2575   */\n      dup3\n        /* \"#utility.yul\":2564:2567   */\n      dup2\n        /* \"#utility.yul\":2559:2562   */\n      dup4\n        /* \"#utility.yul\":2546:2576   */\n      calldatacopy\n        /* \"#utility.yul\":2610:2611   */\n      0x00\n        /* \"#utility.yul\":2601:2607   */\n      dup4\n        /* \"#utility.yul\":2596:2599   */\n      dup4\n        /* \"#utility.yul\":2592:2608   */\n      add\n        /* \"#utility.yul\":2585:2612   */\n      mstore\n        /* \"#utility.yul\":2472:2618   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2624:3047   */\n    tag_29:\n        /* \"#utility.yul\":2701:2706   */\n      0x00\n        /* \"#utility.yul\":2726:2791   */\n      tag_68\n        /* \"#utility.yul\":2742:2790   */\n      tag_69\n        /* \"#utility.yul\":2783:2789   */\n      dup5\n        /* \"#utility.yul\":2742:2790   */\n      tag_27\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":2726:2791   */\n      tag_26\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":2717:2791   */\n      swap1\n      pop\n        /* \"#utility.yul\":2814:2820   */\n      dup3\n        /* \"#utility.yul\":2807:2812   */\n      dup2\n        /* \"#utility.yul\":2800:2821   */\n      mstore\n        /* \"#utility.yul\":2852:2856   */\n      0x20\n        /* \"#utility.yul\":2845:2850   */\n      dup2\n        /* \"#utility.yul\":2841:2857   */\n      add\n        /* \"#utility.yul\":2890:2893   */\n      dup5\n        /* \"#utility.yul\":2881:2887   */\n      dup5\n        /* \"#utility.yul\":2876:2879   */\n      dup5\n        /* \"#utility.yul\":2872:2888   */\n      add\n        /* \"#utility.yul\":2869:2894   */\n      gt\n        /* \"#utility.yul\":2866:2978   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2897:2976   */\n      tag_71\n      tag_22\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":2866:2978   */\n    tag_70:\n        /* \"#utility.yul\":2987:3041   */\n      tag_72\n        /* \"#utility.yul\":3034:3040   */\n      dup5\n        /* \"#utility.yul\":3029:3032   */\n      dup3\n        /* \"#utility.yul\":3024:3027   */\n      dup6\n        /* \"#utility.yul\":2987:3041   */\n      tag_28\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":2707:3047   */\n      pop\n        /* \"#utility.yul\":2624:3047   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3066:3404   */\n    tag_30:\n        /* \"#utility.yul\":3121:3126   */\n      0x00\n        /* \"#utility.yul\":3170:3173   */\n      dup3\n        /* \"#utility.yul\":3163:3167   */\n      0x1f\n        /* \"#utility.yul\":3155:3161   */\n      dup4\n        /* \"#utility.yul\":3151:3168   */\n      add\n        /* \"#utility.yul\":3147:3174   */\n      slt\n        /* \"#utility.yul\":3137:3259   */\n      tag_74\n      jumpi\n        /* \"#utility.yul\":3178:3257   */\n      tag_75\n      tag_21\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":3137:3259   */\n    tag_74:\n        /* \"#utility.yul\":3295:3301   */\n      dup2\n        /* \"#utility.yul\":3282:3302   */\n      calldataload\n        /* \"#utility.yul\":3320:3398   */\n      tag_76\n        /* \"#utility.yul\":3394:3397   */\n      dup5\n        /* \"#utility.yul\":3386:3392   */\n      dup3\n        /* \"#utility.yul\":3379:3383   */\n      0x20\n        /* \"#utility.yul\":3371:3377   */\n      dup7\n        /* \"#utility.yul\":3367:3384   */\n      add\n        /* \"#utility.yul\":3320:3398   */\n      tag_29\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":3311:3398   */\n      swap2\n      pop\n        /* \"#utility.yul\":3127:3404   */\n      pop\n        /* \"#utility.yul\":3066:3404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3410:4353   */\n    tag_6:\n        /* \"#utility.yul\":3505:3511   */\n      0x00\n        /* \"#utility.yul\":3513:3519   */\n      dup1\n        /* \"#utility.yul\":3521:3527   */\n      0x00\n        /* \"#utility.yul\":3529:3535   */\n      dup1\n        /* \"#utility.yul\":3578:3581   */\n      0x80\n        /* \"#utility.yul\":3566:3575   */\n      dup6\n        /* \"#utility.yul\":3557:3564   */\n      dup8\n        /* \"#utility.yul\":3553:3576   */\n      sub\n        /* \"#utility.yul\":3549:3582   */\n      slt\n        /* \"#utility.yul\":3546:3666   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":3585:3664   */\n      tag_79\n      tag_12\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":3546:3666   */\n    tag_78:\n        /* \"#utility.yul\":3705:3706   */\n      0x00\n        /* \"#utility.yul\":3730:3783   */\n      tag_80\n        /* \"#utility.yul\":3775:3782   */\n      dup8\n        /* \"#utility.yul\":3766:3772   */\n      dup3\n        /* \"#utility.yul\":3755:3764   */\n      dup9\n        /* \"#utility.yul\":3751:3773   */\n      add\n        /* \"#utility.yul\":3730:3783   */\n      tag_17\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":3720:3783   */\n      swap5\n      pop\n        /* \"#utility.yul\":3676:3793   */\n      pop\n        /* \"#utility.yul\":3832:3834   */\n      0x20\n        /* \"#utility.yul\":3858:3911   */\n      tag_81\n        /* \"#utility.yul\":3903:3910   */\n      dup8\n        /* \"#utility.yul\":3894:3900   */\n      dup3\n        /* \"#utility.yul\":3883:3892   */\n      dup9\n        /* \"#utility.yul\":3879:3901   */\n      add\n        /* \"#utility.yul\":3858:3911   */\n      tag_17\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":3848:3911   */\n      swap4\n      pop\n        /* \"#utility.yul\":3803:3921   */\n      pop\n        /* \"#utility.yul\":3960:3962   */\n      0x40\n        /* \"#utility.yul\":3986:4039   */\n      tag_82\n        /* \"#utility.yul\":4031:4038   */\n      dup8\n        /* \"#utility.yul\":4022:4028   */\n      dup3\n        /* \"#utility.yul\":4011:4020   */\n      dup9\n        /* \"#utility.yul\":4007:4029   */\n      add\n        /* \"#utility.yul\":3986:4039   */\n      tag_20\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":3976:4039   */\n      swap3\n      pop\n        /* \"#utility.yul\":3931:4049   */\n      pop\n        /* \"#utility.yul\":4116:4118   */\n      0x60\n        /* \"#utility.yul\":4105:4114   */\n      dup6\n        /* \"#utility.yul\":4101:4119   */\n      add\n        /* \"#utility.yul\":4088:4120   */\n      calldataload\n        /* \"#utility.yul\":4147:4165   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4139:4145   */\n      dup2\n        /* \"#utility.yul\":4136:4166   */\n      gt\n        /* \"#utility.yul\":4133:4250   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":4169:4248   */\n      tag_84\n      tag_13\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":4133:4250   */\n    tag_83:\n        /* \"#utility.yul\":4274:4336   */\n      tag_85\n        /* \"#utility.yul\":4328:4335   */\n      dup8\n        /* \"#utility.yul\":4319:4325   */\n      dup3\n        /* \"#utility.yul\":4308:4317   */\n      dup9\n        /* \"#utility.yul\":4304:4326   */\n      add\n        /* \"#utility.yul\":4274:4336   */\n      tag_30\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":4264:4336   */\n      swap2\n      pop\n        /* \"#utility.yul\":4059:4346   */\n      pop\n        /* \"#utility.yul\":3410:4353   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4359:4508   */\n    tag_31:\n        /* \"#utility.yul\":4395:4402   */\n      0x00\n        /* \"#utility.yul\":4435:4501   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4428:4433   */\n      dup3\n        /* \"#utility.yul\":4424:4502   */\n      and\n        /* \"#utility.yul\":4413:4502   */\n      swap1\n      pop\n        /* \"#utility.yul\":4359:4508   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4514:4629   */\n    tag_32:\n        /* \"#utility.yul\":4599:4622   */\n      tag_88\n        /* \"#utility.yul\":4616:4621   */\n      dup2\n        /* \"#utility.yul\":4599:4622   */\n      tag_31\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":4594:4597   */\n      dup3\n        /* \"#utility.yul\":4587:4623   */\n      mstore\n        /* \"#utility.yul\":4514:4629   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4635:4853   */\n    tag_9:\n        /* \"#utility.yul\":4726:4730   */\n      0x00\n        /* \"#utility.yul\":4764:4766   */\n      0x20\n        /* \"#utility.yul\":4753:4762   */\n      dup3\n        /* \"#utility.yul\":4749:4767   */\n      add\n        /* \"#utility.yul\":4741:4767   */\n      swap1\n      pop\n        /* \"#utility.yul\":4777:4846   */\n      tag_90\n        /* \"#utility.yul\":4843:4844   */\n      0x00\n        /* \"#utility.yul\":4832:4841   */\n      dup4\n        /* \"#utility.yul\":4828:4845   */\n      add\n        /* \"#utility.yul\":4819:4825   */\n      dup5\n        /* \"#utility.yul\":4777:4846   */\n      tag_32\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":4635:4853   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122069b5380b80d5e701f72071134b9522b62ae8cafd2c45145b4a186f9b1c3ec37f64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610371806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004a60048036038101906100459190610262565b610060565b6040516100579190610320565b60405180910390f35b600063150b7a0260e01b9050949350505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100b382610088565b9050919050565b6100c3816100a8565b81146100ce57600080fd5b50565b6000813590506100e0816100ba565b92915050565b6000819050919050565b6100f9816100e6565b811461010457600080fd5b50565b600081359050610116816100f0565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61016f82610126565b810181811067ffffffffffffffff8211171561018e5761018d610137565b5b80604052505050565b60006101a1610074565b90506101ad8282610166565b919050565b600067ffffffffffffffff8211156101cd576101cc610137565b5b6101d682610126565b9050602081019050919050565b82818337600083830152505050565b6000610205610200846101b2565b610197565b90508281526020810184848401111561022157610220610121565b5b61022c8482856101e3565b509392505050565b600082601f8301126102495761024861011c565b5b81356102598482602086016101f2565b91505092915050565b6000806000806080858703121561027c5761027b61007e565b5b600061028a878288016100d1565b945050602061029b878288016100d1565b93505060406102ac87828801610107565b925050606085013567ffffffffffffffff8111156102cd576102cc610083565b5b6102d987828801610234565b91505092959194509250565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61031a816102e5565b82525050565b60006020820190506103356000830184610311565b9291505056fea264697066735822122069b5380b80d5e701f72071134b9522b62ae8cafd2c45145b4a186f9b1c3ec37f64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x262 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB3 DUP3 PUSH2 0x88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3 DUP2 PUSH2 0xA8 JUMP JUMPDEST DUP2 EQ PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE0 DUP2 PUSH2 0xBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9 DUP2 PUSH2 0xE6 JUMP JUMPDEST DUP2 EQ PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x116 DUP2 PUSH2 0xF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x16F DUP3 PUSH2 0x126 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18E JUMPI PUSH2 0x18D PUSH2 0x137 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1 PUSH2 0x74 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AD DUP3 DUP3 PUSH2 0x166 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CD JUMPI PUSH2 0x1CC PUSH2 0x137 JUMP JUMPDEST JUMPDEST PUSH2 0x1D6 DUP3 PUSH2 0x126 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205 PUSH2 0x200 DUP5 PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x197 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x221 JUMPI PUSH2 0x220 PUSH2 0x121 JUMP JUMPDEST JUMPDEST PUSH2 0x22C DUP5 DUP3 DUP6 PUSH2 0x1E3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x249 JUMPI PUSH2 0x248 PUSH2 0x11C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x259 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x27C JUMPI PUSH2 0x27B PUSH2 0x7E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28A DUP8 DUP3 DUP9 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x29B DUP8 DUP3 DUP9 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2AC DUP8 DUP3 DUP9 ADD PUSH2 0x107 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CD JUMPI PUSH2 0x2CC PUSH2 0x83 JUMP JUMPDEST JUMPDEST PUSH2 0x2D9 DUP8 DUP3 DUP9 ADD PUSH2 0x234 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31A DUP2 PUSH2 0x2E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x335 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x311 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xB5380B80D5E701F72071 SGT 0x4B SWAP6 0x22 0xB6 0x2A 0xE8 0xCA REVERT 0x2C GASLIMIT EQ JUMPDEST 0x4A XOR PUSH16 0x9B1C3EC37F64736F6C63430008120033 ",
							"sourceMap": "414:353:7:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onERC721Received_377": {
									"entryPoint": 96,
									"id": 377,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 498,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 116,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 483,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 311,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 284,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 289,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 131,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 126,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4856:21",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:21",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:21"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:21"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:21",
														"type": ""
													}
												],
												"src": "7:75:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:21"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:21"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:21",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:21",
														"type": ""
													}
												],
												"src": "334:126:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:21",
														"type": ""
													}
												],
												"src": "466:96:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:21"
															},
															"nodeType": "YulIf",
															"src": "621:63:21"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:21",
														"type": ""
													}
												],
												"src": "568:122:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:21"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:21",
														"type": ""
													}
												],
												"src": "696:139:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:21",
														"type": ""
													}
												],
												"src": "841:77:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:21"
															},
															"nodeType": "YulIf",
															"src": "977:63:21"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:21",
														"type": ""
													}
												],
												"src": "924:122:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:21"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:21",
														"type": ""
													}
												],
												"src": "1052:139:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1286:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1303:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1306:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1296:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:12:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1296:12:21"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "1197:117:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1409:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1426:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1419:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1419:12:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1419:12:21"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "1320:117:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1491:54:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1501:38:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1519:5:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1526:2:21",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1515:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1515:14:21"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1535:2:21",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:7:21"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1511:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1511:28:21"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:21"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1474:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1484:6:21",
														"type": ""
													}
												],
												"src": "1443:102:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1579:152:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1596:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1599:77:21",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1589:88:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1589:88:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1693:1:21",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1696:4:21",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1686:15:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1686:15:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1717:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1720:4:21",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1710:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1710:15:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1710:15:21"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1551:180:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1780:238:21",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1790:58:21",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1812:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "1842:4:21"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1820:21:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1820:27:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1808:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1808:40:21"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1794:10:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1959:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1961:16:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1961:18:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1961:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1902:10:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1914:18:21",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1899:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1899:34:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1938:10:21"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1950:6:21"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1935:22:21"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1896:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1896:62:21"
															},
															"nodeType": "YulIf",
															"src": "1893:88:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1997:2:21",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2001:10:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1990:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1990:22:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1990:22:21"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1766:6:21",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1774:4:21",
														"type": ""
													}
												],
												"src": "1737:281:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2065:88:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2075:30:21",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "2085:18:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2085:20:21"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2075:6:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2134:6:21"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2142:4:21"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2114:19:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2114:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2114:33:21"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2049:4:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2058:6:21",
														"type": ""
													}
												],
												"src": "2024:129:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2225:241:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2330:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2332:16:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2332:18:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2332:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2302:6:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2310:18:21",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2299:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2299:30:21"
															},
															"nodeType": "YulIf",
															"src": "2296:56:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2362:37:21",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2392:6:21"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2370:21:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2370:29:21"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2362:4:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2436:23:21",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2448:4:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2454:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2444:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2444:15:21"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2436:4:21"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2209:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2220:4:21",
														"type": ""
													}
												],
												"src": "2159:307:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2536:82:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2559:3:21"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2564:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2569:6:21"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2546:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2546:30:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2546:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2596:3:21"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2601:6:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2592:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2592:16:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2610:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2585:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2585:27:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2585:27:21"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2518:3:21",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2523:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2528:6:21",
														"type": ""
													}
												],
												"src": "2472:146:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2707:340:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2717:74:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2783:6:21"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2742:40:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2742:48:21"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2726:15:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2726:65:21"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2717:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2807:5:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2814:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2800:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2800:21:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2800:21:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2830:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2845:5:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2852:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2841:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2841:16:21"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2834:3:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2895:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2897:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2897:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2897:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2876:3:21"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2881:6:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2872:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2872:16:21"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2890:3:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2869:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2869:25:21"
															},
															"nodeType": "YulIf",
															"src": "2866:112:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3024:3:21"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3029:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3034:6:21"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2987:36:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2987:54:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2987:54:21"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2680:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2685:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2693:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2701:5:21",
														"type": ""
													}
												],
												"src": "2624:423:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3127:277:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3176:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "3178:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3178:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3178:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3155:6:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3163:4:21",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3151:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3151:17:21"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3170:3:21"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3147:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3147:27:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3140:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3140:35:21"
															},
															"nodeType": "YulIf",
															"src": "3137:122:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3268:34:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3295:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3282:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3282:20:21"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3272:6:21",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3311:87:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3371:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3379:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3367:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3367:17:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3386:6:21"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3394:3:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3320:46:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3320:78:21"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3311:5:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3105:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3113:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3121:5:21",
														"type": ""
													}
												],
												"src": "3066:338:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3536:817:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3583:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3585:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3585:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3585:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3557:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3566:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3553:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3553:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3578:3:21",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3549:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3549:33:21"
															},
															"nodeType": "YulIf",
															"src": "3546:120:21"
														},
														{
															"nodeType": "YulBlock",
															"src": "3676:117:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3691:15:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3705:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3695:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3720:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3755:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3766:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3751:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3751:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3775:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3730:20:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3730:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3720:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3803:118:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3818:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3832:2:21",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3822:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3848:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3883:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3894:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3879:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3879:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3903:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3858:20:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3858:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3848:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3931:118:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3946:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3960:2:21",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3950:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3976:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4011:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4022:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4007:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4007:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4031:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3986:20:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3986:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3976:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4059:287:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4074:46:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4105:9:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4116:2:21",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4101:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4101:18:21"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4088:12:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4088:32:21"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4078:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4167:83:21",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4169:77:21"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4169:79:21"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4169:79:21"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4139:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4147:18:21",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4136:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4136:30:21"
																	},
																	"nodeType": "YulIf",
																	"src": "4133:117:21"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4264:72:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4308:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4319:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4304:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4304:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4328:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4274:29:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4274:62:21"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "4264:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3482:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3493:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3505:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3513:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3521:6:21",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3529:6:21",
														"type": ""
													}
												],
												"src": "3410:943:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4403:105:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4413:89:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4428:5:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4435:66:21",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4424:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4424:78:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4413:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4385:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4395:7:21",
														"type": ""
													}
												],
												"src": "4359:149:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4577:52:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4594:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4616:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "4599:16:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4599:23:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4587:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4587:36:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4587:36:21"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4565:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4572:3:21",
														"type": ""
													}
												],
												"src": "4514:115:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4731:122:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4741:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4753:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4764:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4749:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4749:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4741:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4819:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4832:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4843:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4828:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4828:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4777:41:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4777:69:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4777:69:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4703:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4715:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4726:4:21",
														"type": ""
													}
												],
												"src": "4635:218:21"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 21,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004a60048036038101906100459190610262565b610060565b6040516100579190610320565b60405180910390f35b600063150b7a0260e01b9050949350505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100b382610088565b9050919050565b6100c3816100a8565b81146100ce57600080fd5b50565b6000813590506100e0816100ba565b92915050565b6000819050919050565b6100f9816100e6565b811461010457600080fd5b50565b600081359050610116816100f0565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61016f82610126565b810181811067ffffffffffffffff8211171561018e5761018d610137565b5b80604052505050565b60006101a1610074565b90506101ad8282610166565b919050565b600067ffffffffffffffff8211156101cd576101cc610137565b5b6101d682610126565b9050602081019050919050565b82818337600083830152505050565b6000610205610200846101b2565b610197565b90508281526020810184848401111561022157610220610121565b5b61022c8482856101e3565b509392505050565b600082601f8301126102495761024861011c565b5b81356102598482602086016101f2565b91505092915050565b6000806000806080858703121561027c5761027b61007e565b5b600061028a878288016100d1565b945050602061029b878288016100d1565b93505060406102ac87828801610107565b925050606085013567ffffffffffffffff8111156102cd576102cc610083565b5b6102d987828801610234565b91505092959194509250565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61031a816102e5565b82525050565b60006020820190506103356000830184610311565b9291505056fea264697066735822122069b5380b80d5e701f72071134b9522b62ae8cafd2c45145b4a186f9b1c3ec37f64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x262 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB3 DUP3 PUSH2 0x88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3 DUP2 PUSH2 0xA8 JUMP JUMPDEST DUP2 EQ PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE0 DUP2 PUSH2 0xBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9 DUP2 PUSH2 0xE6 JUMP JUMPDEST DUP2 EQ PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x116 DUP2 PUSH2 0xF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x16F DUP3 PUSH2 0x126 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18E JUMPI PUSH2 0x18D PUSH2 0x137 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1 PUSH2 0x74 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AD DUP3 DUP3 PUSH2 0x166 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CD JUMPI PUSH2 0x1CC PUSH2 0x137 JUMP JUMPDEST JUMPDEST PUSH2 0x1D6 DUP3 PUSH2 0x126 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205 PUSH2 0x200 DUP5 PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x197 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x221 JUMPI PUSH2 0x220 PUSH2 0x121 JUMP JUMPDEST JUMPDEST PUSH2 0x22C DUP5 DUP3 DUP6 PUSH2 0x1E3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x249 JUMPI PUSH2 0x248 PUSH2 0x11C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x259 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x27C JUMPI PUSH2 0x27B PUSH2 0x7E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28A DUP8 DUP3 DUP9 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x29B DUP8 DUP3 DUP9 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2AC DUP8 DUP3 DUP9 ADD PUSH2 0x107 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CD JUMPI PUSH2 0x2CC PUSH2 0x83 JUMP JUMPDEST JUMPDEST PUSH2 0x2D9 DUP8 DUP3 DUP9 ADD PUSH2 0x234 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31A DUP2 PUSH2 0x2E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x335 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x311 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xB5380B80D5E701F72071 SGT 0x4B SWAP6 0x22 0xB6 0x2A 0xE8 0xCA REVERT 0x2C GASLIMIT EQ JUMPDEST 0x4A XOR PUSH16 0x9B1C3EC37F64736F6C63430008120033 ",
							"sourceMap": "414:353:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;603:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;703:6;728:30;;;721:37;;603:162;;;;;;:::o;7:75:21:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:117::-;1306:1;1303;1296:12;1320:117;1429:1;1426;1419:12;1443:102;1484:6;1535:2;1531:7;1526:2;1519:5;1515:14;1511:28;1501:38;;1443:102;;;:::o;1551:180::-;1599:77;1596:1;1589:88;1696:4;1693:1;1686:15;1720:4;1717:1;1710:15;1737:281;1820:27;1842:4;1820:27;:::i;:::-;1812:6;1808:40;1950:6;1938:10;1935:22;1914:18;1902:10;1899:34;1896:62;1893:88;;;1961:18;;:::i;:::-;1893:88;2001:10;1997:2;1990:22;1780:238;1737:281;;:::o;2024:129::-;2058:6;2085:20;;:::i;:::-;2075:30;;2114:33;2142:4;2134:6;2114:33;:::i;:::-;2024:129;;;:::o;2159:307::-;2220:4;2310:18;2302:6;2299:30;2296:56;;;2332:18;;:::i;:::-;2296:56;2370:29;2392:6;2370:29;:::i;:::-;2362:37;;2454:4;2448;2444:15;2436:23;;2159:307;;;:::o;2472:146::-;2569:6;2564:3;2559;2546:30;2610:1;2601:6;2596:3;2592:16;2585:27;2472:146;;;:::o;2624:423::-;2701:5;2726:65;2742:48;2783:6;2742:48;:::i;:::-;2726:65;:::i;:::-;2717:74;;2814:6;2807:5;2800:21;2852:4;2845:5;2841:16;2890:3;2881:6;2876:3;2872:16;2869:25;2866:112;;;2897:79;;:::i;:::-;2866:112;2987:54;3034:6;3029:3;3024;2987:54;:::i;:::-;2707:340;2624:423;;;;;:::o;3066:338::-;3121:5;3170:3;3163:4;3155:6;3151:17;3147:27;3137:122;;3178:79;;:::i;:::-;3137:122;3295:6;3282:20;3320:78;3394:3;3386:6;3379:4;3371:6;3367:17;3320:78;:::i;:::-;3311:87;;3127:277;3066:338;;;;:::o;3410:943::-;3505:6;3513;3521;3529;3578:3;3566:9;3557:7;3553:23;3549:33;3546:120;;;3585:79;;:::i;:::-;3546:120;3705:1;3730:53;3775:7;3766:6;3755:9;3751:22;3730:53;:::i;:::-;3720:63;;3676:117;3832:2;3858:53;3903:7;3894:6;3883:9;3879:22;3858:53;:::i;:::-;3848:63;;3803:118;3960:2;3986:53;4031:7;4022:6;4011:9;4007:22;3986:53;:::i;:::-;3976:63;;3931:118;4116:2;4105:9;4101:18;4088:32;4147:18;4139:6;4136:30;4133:117;;;4169:79;;:::i;:::-;4133:117;4274:62;4328:7;4319:6;4308:9;4304:22;4274:62;:::i;:::-;4264:72;;4059:287;3410:943;;;;;;;:::o;4359:149::-;4395:7;4435:66;4428:5;4424:78;4413:89;;4359:149;;;:::o;4514:115::-;4599:23;4616:5;4599:23;:::i;:::-;4594:3;4587:36;4514:115;;:::o;4635:218::-;4726:4;4764:2;4753:9;4749:18;4741:26;;4777:69;4843:1;4832:9;4828:17;4819:6;4777:69;:::i;:::-;4635:218;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "176200",
								"executionCost": "220",
								"totalCost": "176420"
							},
							"external": {
								"onERC721Received(address,address,uint256,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 414,
									"end": 767,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 414,
									"end": 767,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 414,
									"end": 767,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 414,
									"end": 767,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 414,
									"end": 767,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 414,
									"end": 767,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 414,
									"end": 767,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 414,
									"end": 767,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 414,
									"end": 767,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 414,
									"end": 767,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 414,
									"end": 767,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 414,
									"end": 767,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 414,
									"end": 767,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 414,
									"end": 767,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 414,
									"end": 767,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 414,
									"end": 767,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 414,
									"end": 767,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 414,
									"end": 767,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 414,
									"end": 767,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 414,
									"end": 767,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 414,
									"end": 767,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122069b5380b80d5e701f72071134b9522b62ae8cafd2c45145b4a186f9b1c3ec37f64736f6c63430008120033",
									".code": [
										{
											"begin": 414,
											"end": 767,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 414,
											"end": 767,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 414,
											"end": 767,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 414,
											"end": 767,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 414,
											"end": 767,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 414,
											"end": 767,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 414,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 414,
											"end": 767,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 414,
											"end": 767,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 414,
											"end": 767,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 414,
											"end": 767,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 414,
											"end": 767,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 414,
											"end": 767,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 414,
											"end": 767,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 414,
											"end": 767,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 414,
											"end": 767,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 414,
											"end": 767,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 414,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 414,
											"end": 767,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 414,
											"end": 767,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 414,
											"end": 767,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 414,
											"end": 767,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 414,
											"end": 767,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 414,
											"end": 767,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 414,
											"end": 767,
											"name": "PUSH",
											"source": 7,
											"value": "150B7A02"
										},
										{
											"begin": 414,
											"end": 767,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 414,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 414,
											"end": 767,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 414,
											"end": 767,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 414,
											"end": 767,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 414,
											"end": 767,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 414,
											"end": 767,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 414,
											"end": 767,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 603,
											"end": 765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 603,
											"end": 765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 603,
											"end": 765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 703,
											"end": 709,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 728,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "150B7A02"
										},
										{
											"begin": 728,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 728,
											"end": 758,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 721,
											"end": 758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 721,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 21,
											"value": "11"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 21,
											"value": "12"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 21,
											"value": "13"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 21,
											"value": "14"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 21,
											"value": "15"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "39"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "14"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 21,
											"value": "39"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 21,
											"value": "16"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "41"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "15"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 21,
											"value": "41"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "42"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 21,
											"value": "42"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 21,
											"value": "17"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "16"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 21,
											"value": "18"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 21,
											"value": "19"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "47"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "18"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 21,
											"value": "47"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "48"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 21,
											"value": "48"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "50"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "19"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 21,
											"value": "50"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1197,
											"end": 1314,
											"name": "tag",
											"source": 21,
											"value": "21"
										},
										{
											"begin": 1197,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1306,
											"end": 1307,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1303,
											"end": 1304,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1296,
											"end": 1308,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 1320,
											"end": 1437,
											"name": "tag",
											"source": 21,
											"value": "22"
										},
										{
											"begin": 1320,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1427,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1419,
											"end": 1431,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 1443,
											"end": 1545,
											"name": "tag",
											"source": 21,
											"value": "23"
										},
										{
											"begin": 1443,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1484,
											"end": 1490,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1537,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 1531,
											"end": 1538,
											"name": "NOT",
											"source": 21
										},
										{
											"begin": 1526,
											"end": 1528,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 1519,
											"end": 1524,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1515,
											"end": 1529,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1511,
											"end": 1539,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 1501,
											"end": 1539,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1501,
											"end": 1539,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1443,
											"end": 1545,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1443,
											"end": 1545,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1443,
											"end": 1545,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1443,
											"end": 1545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1551,
											"end": 1731,
											"name": "tag",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 1551,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1599,
											"end": 1676,
											"name": "PUSH",
											"source": 21,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1596,
											"end": 1597,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 1677,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1696,
											"end": 1700,
											"name": "PUSH",
											"source": 21,
											"value": "41"
										},
										{
											"begin": 1693,
											"end": 1694,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 1686,
											"end": 1701,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1720,
											"end": 1724,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 1717,
											"end": 1718,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1725,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 1737,
											"end": 2018,
											"name": "tag",
											"source": 21,
											"value": "25"
										},
										{
											"begin": 1737,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "56"
										},
										{
											"begin": 1842,
											"end": 1846,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "23"
										},
										{
											"begin": 1820,
											"end": 1847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "tag",
											"source": 21,
											"value": "56"
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1812,
											"end": 1818,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1808,
											"end": 1848,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1950,
											"end": 1956,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1938,
											"end": 1948,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1935,
											"end": 1957,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 1914,
											"end": 1932,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1902,
											"end": 1912,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1899,
											"end": 1933,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 1896,
											"end": 1958,
											"name": "OR",
											"source": 21
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "57"
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "58"
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 1961,
											"end": 1979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "tag",
											"source": 21,
											"value": "58"
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "tag",
											"source": 21,
											"value": "57"
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2001,
											"end": 2011,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1997,
											"end": 1999,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2012,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1780,
											"end": 2018,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1737,
											"end": 2018,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1737,
											"end": 2018,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1737,
											"end": 2018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2024,
											"end": 2153,
											"name": "tag",
											"source": 21,
											"value": "26"
										},
										{
											"begin": 2024,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2058,
											"end": 2064,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "11"
										},
										{
											"begin": 2085,
											"end": 2105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "tag",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2075,
											"end": 2105,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2075,
											"end": 2105,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2114,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "61"
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2134,
											"end": 2140,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2114,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "25"
										},
										{
											"begin": 2114,
											"end": 2147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2114,
											"end": 2147,
											"name": "tag",
											"source": 21,
											"value": "61"
										},
										{
											"begin": 2114,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2024,
											"end": 2153,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2024,
											"end": 2153,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2024,
											"end": 2153,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2024,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2159,
											"end": 2466,
											"name": "tag",
											"source": 21,
											"value": "27"
										},
										{
											"begin": 2159,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2220,
											"end": 2224,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2310,
											"end": 2328,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2302,
											"end": 2308,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2299,
											"end": 2329,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 2296,
											"end": 2352,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 2296,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "63"
										},
										{
											"begin": 2296,
											"end": 2352,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 2332,
											"end": 2350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "tag",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2296,
											"end": 2352,
											"name": "tag",
											"source": 21,
											"value": "63"
										},
										{
											"begin": 2296,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2370,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "65"
										},
										{
											"begin": 2392,
											"end": 2398,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2370,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "23"
										},
										{
											"begin": 2370,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2370,
											"end": 2399,
											"name": "tag",
											"source": 21,
											"value": "65"
										},
										{
											"begin": 2370,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2362,
											"end": 2399,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2362,
											"end": 2399,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2454,
											"end": 2458,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2452,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2436,
											"end": 2459,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2436,
											"end": 2459,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2159,
											"end": 2466,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2159,
											"end": 2466,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2159,
											"end": 2466,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2159,
											"end": 2466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2472,
											"end": 2618,
											"name": "tag",
											"source": 21,
											"value": "28"
										},
										{
											"begin": 2472,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2569,
											"end": 2575,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2564,
											"end": 2567,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2559,
											"end": 2562,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 2546,
											"end": 2576,
											"name": "CALLDATACOPY",
											"source": 21
										},
										{
											"begin": 2610,
											"end": 2611,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2601,
											"end": 2607,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 2596,
											"end": 2599,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 2592,
											"end": 2608,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2585,
											"end": 2612,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2472,
											"end": 2618,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2472,
											"end": 2618,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2472,
											"end": 2618,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2472,
											"end": 2618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2624,
											"end": 3047,
											"name": "tag",
											"source": 21,
											"value": "29"
										},
										{
											"begin": 2624,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2701,
											"end": 2706,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "68"
										},
										{
											"begin": 2742,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "69"
										},
										{
											"begin": 2783,
											"end": 2789,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 2742,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "27"
										},
										{
											"begin": 2742,
											"end": 2790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2742,
											"end": 2790,
											"name": "tag",
											"source": 21,
											"value": "69"
										},
										{
											"begin": 2742,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2726,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "26"
										},
										{
											"begin": 2726,
											"end": 2791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2726,
											"end": 2791,
											"name": "tag",
											"source": 21,
											"value": "68"
										},
										{
											"begin": 2726,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2717,
											"end": 2791,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2717,
											"end": 2791,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2814,
											"end": 2820,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2807,
											"end": 2812,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2800,
											"end": 2821,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2852,
											"end": 2856,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 2845,
											"end": 2850,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2841,
											"end": 2857,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2890,
											"end": 2893,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 2881,
											"end": 2887,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 2876,
											"end": 2879,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 2872,
											"end": 2888,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2869,
											"end": 2894,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 2866,
											"end": 2978,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 2866,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "70"
										},
										{
											"begin": 2866,
											"end": 2978,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 2897,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "71"
										},
										{
											"begin": 2897,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "22"
										},
										{
											"begin": 2897,
											"end": 2976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2897,
											"end": 2976,
											"name": "tag",
											"source": 21,
											"value": "71"
										},
										{
											"begin": 2897,
											"end": 2976,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2866,
											"end": 2978,
											"name": "tag",
											"source": 21,
											"value": "70"
										},
										{
											"begin": 2866,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2987,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "72"
										},
										{
											"begin": 3034,
											"end": 3040,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 3029,
											"end": 3032,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3024,
											"end": 3027,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 2987,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "28"
										},
										{
											"begin": 2987,
											"end": 3041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2987,
											"end": 3041,
											"name": "tag",
											"source": 21,
											"value": "72"
										},
										{
											"begin": 2987,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2707,
											"end": 3047,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2624,
											"end": 3047,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 2624,
											"end": 3047,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 2624,
											"end": 3047,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2624,
											"end": 3047,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2624,
											"end": 3047,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2624,
											"end": 3047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3066,
											"end": 3404,
											"name": "tag",
											"source": 21,
											"value": "30"
										},
										{
											"begin": 3066,
											"end": 3404,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3121,
											"end": 3126,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3170,
											"end": 3173,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3163,
											"end": 3167,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3151,
											"end": 3168,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3147,
											"end": 3174,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 3137,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "74"
										},
										{
											"begin": 3137,
											"end": 3259,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3178,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "75"
										},
										{
											"begin": 3178,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "21"
										},
										{
											"begin": 3178,
											"end": 3257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3178,
											"end": 3257,
											"name": "tag",
											"source": 21,
											"value": "75"
										},
										{
											"begin": 3178,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3137,
											"end": 3259,
											"name": "tag",
											"source": 21,
											"value": "74"
										},
										{
											"begin": 3137,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3295,
											"end": 3301,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3282,
											"end": 3302,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 3320,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "76"
										},
										{
											"begin": 3394,
											"end": 3397,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 3386,
											"end": 3392,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3379,
											"end": 3383,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3371,
											"end": 3377,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 3367,
											"end": 3384,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3320,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "29"
										},
										{
											"begin": 3320,
											"end": 3398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3320,
											"end": 3398,
											"name": "tag",
											"source": 21,
											"value": "76"
										},
										{
											"begin": 3320,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3311,
											"end": 3398,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3311,
											"end": 3398,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3127,
											"end": 3404,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3066,
											"end": 3404,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 3066,
											"end": 3404,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3066,
											"end": 3404,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3066,
											"end": 3404,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3066,
											"end": 3404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "tag",
											"source": 21,
											"value": "6"
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3505,
											"end": 3511,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3519,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3521,
											"end": 3527,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3529,
											"end": 3535,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3578,
											"end": 3581,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 3566,
											"end": 3575,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 3557,
											"end": 3564,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 3553,
											"end": 3576,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 3549,
											"end": 3582,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 3546,
											"end": 3666,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 3546,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "78"
										},
										{
											"begin": 3546,
											"end": 3666,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3585,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "79"
										},
										{
											"begin": 3585,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "12"
										},
										{
											"begin": 3585,
											"end": 3664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3585,
											"end": 3664,
											"name": "tag",
											"source": 21,
											"value": "79"
										},
										{
											"begin": 3585,
											"end": 3664,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3546,
											"end": 3666,
											"name": "tag",
											"source": 21,
											"value": "78"
										},
										{
											"begin": 3546,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3705,
											"end": 3706,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3730,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 3775,
											"end": 3782,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 3766,
											"end": 3772,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3755,
											"end": 3764,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 3751,
											"end": 3773,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3730,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "17"
										},
										{
											"begin": 3730,
											"end": 3783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3730,
											"end": 3783,
											"name": "tag",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 3730,
											"end": 3783,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3720,
											"end": 3783,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 3720,
											"end": 3783,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3676,
											"end": 3793,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3832,
											"end": 3834,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3858,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "81"
										},
										{
											"begin": 3903,
											"end": 3910,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3883,
											"end": 3892,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 3879,
											"end": 3901,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3858,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "17"
										},
										{
											"begin": 3858,
											"end": 3911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3858,
											"end": 3911,
											"name": "tag",
											"source": 21,
											"value": "81"
										},
										{
											"begin": 3858,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3848,
											"end": 3911,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 3848,
											"end": 3911,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3803,
											"end": 3921,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3960,
											"end": 3962,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3986,
											"end": 4039,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "82"
										},
										{
											"begin": 4031,
											"end": 4038,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 4022,
											"end": 4028,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4011,
											"end": 4020,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 4007,
											"end": 4029,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3986,
											"end": 4039,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3986,
											"end": 4039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3986,
											"end": 4039,
											"name": "tag",
											"source": 21,
											"value": "82"
										},
										{
											"begin": 3986,
											"end": 4039,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3976,
											"end": 4039,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 3976,
											"end": 4039,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3931,
											"end": 4049,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4116,
											"end": 4118,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 4105,
											"end": 4114,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 4101,
											"end": 4119,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4088,
											"end": 4120,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 4147,
											"end": 4165,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4139,
											"end": 4145,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4136,
											"end": 4166,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 4133,
											"end": 4250,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 4133,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "83"
										},
										{
											"begin": 4133,
											"end": 4250,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4169,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "84"
										},
										{
											"begin": 4169,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "13"
										},
										{
											"begin": 4169,
											"end": 4248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4169,
											"end": 4248,
											"name": "tag",
											"source": 21,
											"value": "84"
										},
										{
											"begin": 4169,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4133,
											"end": 4250,
											"name": "tag",
											"source": 21,
											"value": "83"
										},
										{
											"begin": 4133,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4274,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "85"
										},
										{
											"begin": 4328,
											"end": 4335,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 4319,
											"end": 4325,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4308,
											"end": 4317,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 4304,
											"end": 4326,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4274,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "30"
										},
										{
											"begin": 4274,
											"end": 4336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4274,
											"end": 4336,
											"name": "tag",
											"source": 21,
											"value": "85"
										},
										{
											"begin": 4274,
											"end": 4336,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4264,
											"end": 4336,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4264,
											"end": 4336,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4059,
											"end": 4346,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3410,
											"end": 4353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4359,
											"end": 4508,
											"name": "tag",
											"source": 21,
											"value": "31"
										},
										{
											"begin": 4359,
											"end": 4508,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4395,
											"end": 4402,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4435,
											"end": 4501,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4428,
											"end": 4433,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4424,
											"end": 4502,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 4413,
											"end": 4502,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4413,
											"end": 4502,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4359,
											"end": 4508,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4359,
											"end": 4508,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4359,
											"end": 4508,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4359,
											"end": 4508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4514,
											"end": 4629,
											"name": "tag",
											"source": 21,
											"value": "32"
										},
										{
											"begin": 4514,
											"end": 4629,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4599,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "88"
										},
										{
											"begin": 4616,
											"end": 4621,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4599,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "31"
										},
										{
											"begin": 4599,
											"end": 4622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4599,
											"end": 4622,
											"name": "tag",
											"source": 21,
											"value": "88"
										},
										{
											"begin": 4599,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4594,
											"end": 4597,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4587,
											"end": 4623,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4514,
											"end": 4629,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4514,
											"end": 4629,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4514,
											"end": 4629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4635,
											"end": 4853,
											"name": "tag",
											"source": 21,
											"value": "9"
										},
										{
											"begin": 4635,
											"end": 4853,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4726,
											"end": 4730,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4764,
											"end": 4766,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4753,
											"end": 4762,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4749,
											"end": 4767,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4741,
											"end": 4767,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4741,
											"end": 4767,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4777,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "90"
										},
										{
											"begin": 4843,
											"end": 4844,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4832,
											"end": 4841,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 4828,
											"end": 4845,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4819,
											"end": 4825,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4777,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "32"
										},
										{
											"begin": 4777,
											"end": 4846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4777,
											"end": 4846,
											"name": "tag",
											"source": 21,
											"value": "90"
										},
										{
											"begin": 4777,
											"end": 4846,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4635,
											"end": 4853,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4635,
											"end": 4853,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4635,
											"end": 4853,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4635,
											"end": 4853,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4635,
											"end": 4853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"TokenBound/ERC6551Account.sol",
								"TokenBound/interfaces/IERC6551Account.sol",
								"TokenBound/lib/ERC6551AccountLib.sol",
								"TokenBound/lib/ERC6551BytecodeLib.sol",
								"TokenBound/lib/MinimalReceiver.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":\"ERC721Holder\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x67ef46fef257faae47adb630aad49694dda0334e5f7a7c5fb386243b974886b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c63284cf05ff845109190961e72ca27bd6a7b997f053d2ce21db83e9e285085c\",\"dweb:/ipfs/QmQBQVYJRzscToP6YaTRDvwYeLmr4V7kD1PjoG9mRpUYzU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Create2.sol": {
				"Create2": {
					"abi": [],
					"devdoc": {
						"details": "Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Create2.sol\":494:3951  library Create2 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Create2.sol\":494:3951  library Create2 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208c9bdf21ca89c6f27ab031e032e4869c5009d0b755df4746876456fb1bfa2dad64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208c9bdf21ca89c6f27ab031e032e4869c5009d0b755df4746876456fb1bfa2dad64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 SWAP12 0xDF 0x21 0xCA DUP10 0xC6 CALLCODE PUSH27 0xB031E032E4869C5009D0B755DF4746876456FB1BFA2DAD64736F6C PUSH4 0x43000812 STOP CALLER ",
							"sourceMap": "494:3457:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208c9bdf21ca89c6f27ab031e032e4869c5009d0b755df4746876456fb1bfa2dad64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 SWAP12 0xDF 0x21 0xCA DUP10 0xC6 CALLCODE PUSH27 0xB031E032E4869C5009D0B755DF4746876456FB1BFA2DAD64736F6C PUSH4 0x43000812 STOP CALLER ",
							"sourceMap": "494:3457:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"computeAddress(bytes32,bytes32)": "infinite",
								"computeAddress(bytes32,bytes32,address)": "infinite",
								"deploy(uint256,bytes32,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 494,
									"end": 3951,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 494,
									"end": 3951,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 494,
									"end": 3951,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 494,
									"end": 3951,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 494,
									"end": 3951,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 494,
									"end": 3951,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 494,
									"end": 3951,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 494,
									"end": 3951,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 494,
									"end": 3951,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 494,
									"end": 3951,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 494,
									"end": 3951,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 494,
									"end": 3951,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 494,
									"end": 3951,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 494,
									"end": 3951,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 494,
									"end": 3951,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 494,
									"end": 3951,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 494,
									"end": 3951,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 494,
									"end": 3951,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 494,
									"end": 3951,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 494,
									"end": 3951,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 494,
									"end": 3951,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 494,
									"end": 3951,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 494,
									"end": 3951,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 494,
									"end": 3951,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 494,
									"end": 3951,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 494,
									"end": 3951,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 494,
									"end": 3951,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 494,
									"end": 3951,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 494,
									"end": 3951,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 494,
									"end": 3951,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 494,
									"end": 3951,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 494,
									"end": 3951,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 494,
									"end": 3951,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 494,
									"end": 3951,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 494,
									"end": 3951,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208c9bdf21ca89c6f27ab031e032e4869c5009d0b755df4746876456fb1bfa2dad64736f6c63430008120033",
									".code": [
										{
											"begin": 494,
											"end": 3951,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 494,
											"end": 3951,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 494,
											"end": 3951,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 494,
											"end": 3951,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 494,
											"end": 3951,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 494,
											"end": 3951,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 494,
											"end": 3951,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 494,
											"end": 3951,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 494,
											"end": 3951,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"TokenBound/ERC6551Account.sol",
								"TokenBound/interfaces/IERC6551Account.sol",
								"TokenBound/lib/ERC6551AccountLib.sol",
								"TokenBound/lib/ERC6551BytecodeLib.sol",
								"TokenBound/lib/MinimalReceiver.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Create2.sol\":\"Create2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0x6e00f269073ffc4350e56b7e8153c9092d5f70bfba423299990514183101ef89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc5ff5c204604be7594ce2fa9100a0638f22b5aada6ebec1e165b0f50a48447\",\"dweb:/ipfs/QmfH7uWphPrq8jqwGvyh4pFnLEgEPmLwyGV2Bvx1Acjggh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ab6a269a65f5803da06b288908b4f00629e38397f6d295ec471d84279be2e1d564736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab6a269a65f5803da06b288908b4f00629e38397f6d295ec471d84279be2e1d564736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB PUSH11 0x269A65F5803DA06B288908 0xB4 CREATE MOD 0x29 0xE3 DUP4 SWAP8 0xF6 0xD2 SWAP6 0xEC SELFBALANCE SAR DUP5 0x27 SWAP12 0xE2 0xE1 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "220:2559:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab6a269a65f5803da06b288908b4f00629e38397f6d295ec471d84279be2e1d564736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB PUSH11 0x269A65F5803DA06B288908 0xB4 CREATE MOD 0x29 0xE3 DUP4 SWAP8 0xF6 0xD2 SWAP6 0xEC SELFBALANCE SAR DUP5 0x27 SWAP12 0xE2 0xE1 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "220:2559:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ab6a269a65f5803da06b288908b4f00629e38397f6d295ec471d84279be2e1d564736f6c63430008120033",
									".code": [
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"TokenBound/ERC6551Account.sol",
								"TokenBound/interfaces/IERC6551Account.sol",
								"TokenBound/lib/ERC6551AccountLib.sol",
								"TokenBound/lib/ERC6551BytecodeLib.sol",
								"TokenBound/lib/MinimalReceiver.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ECDSA": {
					"abi": [],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":369:9130  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":369:9130  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122044719535d4f0927b344373336cd15f417c0acbe2b5844ef02267a9d7179c605364736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044719535d4f0927b344373336cd15f417c0acbe2b5844ef02267a9d7179c605364736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO PUSH18 0x9535D4F0927B344373336CD15F417C0ACBE2 0xB5 DUP5 0x4E CREATE 0x22 PUSH8 0xA9D7179C60536473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "369:8761:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044719535d4f0927b344373336cd15f417c0acbe2b5844ef02267a9d7179c605364736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO PUSH18 0x9535D4F0927B344373336CD15F417C0ACBE2 0xB5 DUP5 0x4E CREATE 0x22 PUSH8 0xA9D7179C60536473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "369:8761:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"toDataWithIntendedValidatorHash(address,bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 369,
									"end": 9130,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122044719535d4f0927b344373336cd15f417c0acbe2b5844ef02267a9d7179c605364736f6c63430008120033",
									".code": [
										{
											"begin": 369,
											"end": 9130,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 369,
											"end": 9130,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 369,
											"end": 9130,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 369,
											"end": 9130,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 369,
											"end": 9130,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 369,
											"end": 9130,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 369,
											"end": 9130,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 369,
											"end": 9130,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 369,
											"end": 9130,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"TokenBound/ERC6551Account.sol",
								"TokenBound/interfaces/IERC6551Account.sol",
								"TokenBound/lib/ERC6551AccountLib.sol",
								"TokenBound/lib/ERC6551BytecodeLib.sol",
								"TokenBound/lib/MinimalReceiver.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol": {
				"SignatureChecker": {
					"abi": [],
					"devdoc": {
						"details": "Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA signatures from externally owned accounts (EOAs) as well as ERC1271 signatures from smart contract wallets like Argent and Gnosis Safe. _Available since v4.1._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":506:2261  library SignatureChecker {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":506:2261  library SignatureChecker {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206d0c1c90cc8de6bf65308a735d7eb3f89adb95725aef1dec7ad20f369c8d6ff564736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206d0c1c90cc8de6bf65308a735d7eb3f89adb95725aef1dec7ad20f369c8d6ff564736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xC1C90CC8DE6BF65308A735D7EB3 0xF8 SWAP11 0xDB SWAP6 PUSH19 0x5AEF1DEC7AD20F369C8D6FF564736F6C634300 ADDMOD SLT STOP CALLER ",
							"sourceMap": "506:1755:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206d0c1c90cc8de6bf65308a735d7eb3f89adb95725aef1dec7ad20f369c8d6ff564736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xC1C90CC8DE6BF65308A735D7EB3 0xF8 SWAP11 0xDB SWAP6 PUSH19 0x5AEF1DEC7AD20F369C8D6FF564736F6C634300 ADDMOD SLT STOP CALLER ",
							"sourceMap": "506:1755:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"isValidERC1271SignatureNow(address,bytes32,bytes memory)": "infinite",
								"isValidSignatureNow(address,bytes32,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 506,
									"end": 2261,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 506,
									"end": 2261,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206d0c1c90cc8de6bf65308a735d7eb3f89adb95725aef1dec7ad20f369c8d6ff564736f6c63430008120033",
									".code": [
										{
											"begin": 506,
											"end": 2261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 506,
											"end": 2261,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 506,
											"end": 2261,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 506,
											"end": 2261,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 506,
											"end": 2261,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 506,
											"end": 2261,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 506,
											"end": 2261,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 506,
											"end": 2261,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 506,
											"end": 2261,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"TokenBound/ERC6551Account.sol",
								"TokenBound/interfaces/IERC6551Account.sol",
								"TokenBound/lib/ERC6551AccountLib.sol",
								"TokenBound/lib/ERC6551BytecodeLib.sol",
								"TokenBound/lib/MinimalReceiver.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA signatures from externally owned accounts (EOAs) as well as ERC1271 signatures from smart contract wallets like Argent and Gnosis Safe. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":\"SignatureChecker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0x3af3ca86df39aac39a0514c84459d691434a108d2151c8ce9d69f32e315cab80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77d1f1cf302cd5e1dfbbb4ce3b281b28e8c52942d4319fce43df2e1b6f02a52d\",\"dweb:/ipfs/QmT6ZXStmK3Knhh9BokeVHQ9HXTBZNgL3Eb1ar1cYg1hWy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209150934ab0c91ee4f9e04d862390c6531c91524dc4cebd8ff4df5e5c5f78cf9a64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209150934ab0c91ee4f9e04d862390c6531c91524dc4cebd8ff4df5e5c5f78cf9a64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 POP SWAP4 0x4A 0xB0 0xC9 0x1E 0xE4 0xF9 0xE0 0x4D DUP7 0x23 SWAP1 0xC6 MSTORE8 SHR SWAP2 MSTORE 0x4D 0xC4 0xCE 0xBD DUP16 DELEGATECALL 0xDF 0x5E 0x5C 0x5F PUSH25 0xCF9A64736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "202:12582:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209150934ab0c91ee4f9e04d862390c6531c91524dc4cebd8ff4df5e5c5f78cf9a64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 POP SWAP4 0x4A 0xB0 0xC9 0x1E 0xE4 0xF9 0xE0 0x4D DUP7 0x23 SWAP1 0xC6 MSTORE8 SHR SWAP2 MSTORE 0x4D 0xC4 0xCE 0xBD DUP16 DELEGATECALL 0xDF 0x5E 0x5C 0x5F PUSH25 0xCF9A64736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "202:12582:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209150934ab0c91ee4f9e04d862390c6531c91524dc4cebd8ff4df5e5c5f78cf9a64736f6c63430008120033",
									".code": [
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"TokenBound/ERC6551Account.sol",
								"TokenBound/interfaces/IERC6551Account.sol",
								"TokenBound/lib/ERC6551AccountLib.sol",
								"TokenBound/lib/ERC6551BytecodeLib.sol",
								"TokenBound/lib/MinimalReceiver.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d721ecf1dbea5e9bc0132744e6031bb93b88801904ab98161f4e012e5110763064736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d721ecf1dbea5e9bc0132744e6031bb93b88801904ab98161f4e012e5110763064736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0x21 0xEC CALL 0xDB 0xEA 0x5E SWAP12 0xC0 SGT 0x27 PREVRANDAO 0xE6 SUB SHL 0xB9 EXTCODESIZE DUP9 DUP1 NOT DIV 0xAB SWAP9 AND 0x1F 0x4E ADD 0x2E MLOAD LT PUSH23 0x3064736F6C634300081200330000000000000000000000 ",
							"sourceMap": "215:1047:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d721ecf1dbea5e9bc0132744e6031bb93b88801904ab98161f4e012e5110763064736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0x21 0xEC CALL 0xDB 0xEA 0x5E SWAP12 0xC0 SGT 0x27 PREVRANDAO 0xE6 SUB SHL 0xB9 EXTCODESIZE DUP9 DUP1 NOT DIV 0xAB SWAP9 AND 0x1F 0x4E ADD 0x2E MLOAD LT PUSH23 0x3064736F6C634300081200330000000000000000000000 ",
							"sourceMap": "215:1047:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d721ecf1dbea5e9bc0132744e6031bb93b88801904ab98161f4e012e5110763064736f6c63430008120033",
									".code": [
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"TokenBound/ERC6551Account.sol",
								"TokenBound/interfaces/IERC6551Account.sol",
								"TokenBound/lib/ERC6551AccountLib.sol",
								"TokenBound/lib/ERC6551BytecodeLib.sol",
								"TokenBound/lib/MinimalReceiver.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TokenBound/ERC6551Account.sol": {
				"ERC6551Account": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "TransactionExecuted",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "executeCall",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "result",
									"type": "bytes"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "magicValue",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"isValidSignature(bytes32,bytes)": {
								"details": "Should return whether the signature provided is valid for the provided data",
								"params": {
									"hash": "Hash of the data to be signed",
									"signature": "Signature byte array associated with _data"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TokenBound/ERC6551Account.sol\":642:2331  contract ERC6551Account is IERC165, IERC1271, IERC6551Account {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"TokenBound/ERC6551Account.sol\":642:2331  contract ERC6551Account is IERC165, IERC1271, IERC6551Account {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1626ba7e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x9e5d4c49\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xaffed0e0\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"TokenBound/ERC6551Account.sol\":1764:1971  function supportsInterface(bytes4 interfaceId) public pure returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenBound/ERC6551Account.sol\":1979:2328  function isValidSignature(bytes32 hash, bytes memory signature)... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenBound/ERC6551Account.sol\":1501:1756  function owner() public view returns (address) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenBound/ERC6551Account.sol\":777:1285  function executeCall(... */\n    tag_6:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenBound/ERC6551Account.sol\":711:731  uint256 public nonce */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenBound/ERC6551Account.sol\":1293:1493  function token()... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenBound/ERC6551Account.sol\":1764:1971  function supportsInterface(bytes4 interfaceId) public pure returns (bool) {... */\n    tag_15:\n        /* \"TokenBound/ERC6551Account.sol\":1832:1836  bool */\n      0x00\n        /* \"TokenBound/ERC6551Account.sol\":1872:1897  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"TokenBound/ERC6551Account.sol\":1857:1897  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"TokenBound/ERC6551Account.sol\":1857:1868  interfaceId */\n      dup3\n        /* \"TokenBound/ERC6551Account.sol\":1857:1897  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"TokenBound/ERC6551Account.sol\":1857:1962  interfaceId == type(IERC165).interfaceId ||... */\n      dup1\n      tag_47\n      jumpi\n      pop\n        /* \"TokenBound/ERC6551Account.sol\":1929:1962  type(IERC6551Account).interfaceId */\n      0x400a039800000000000000000000000000000000000000000000000000000000\n        /* \"TokenBound/ERC6551Account.sol\":1914:1962  interfaceId == type(IERC6551Account).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"TokenBound/ERC6551Account.sol\":1914:1925  interfaceId */\n      dup3\n        /* \"TokenBound/ERC6551Account.sol\":1914:1962  interfaceId == type(IERC6551Account).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"TokenBound/ERC6551Account.sol\":1857:1962  interfaceId == type(IERC165).interfaceId ||... */\n    tag_47:\n        /* \"TokenBound/ERC6551Account.sol\":1849:1963  return (interfaceId == type(IERC165).interfaceId ||... */\n      swap1\n      pop\n        /* \"TokenBound/ERC6551Account.sol\":1764:1971  function supportsInterface(bytes4 interfaceId) public pure returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"TokenBound/ERC6551Account.sol\":1979:2328  function isValidSignature(bytes32 hash, bytes memory signature)... */\n    tag_22:\n        /* \"TokenBound/ERC6551Account.sol\":2093:2110  bytes4 magicValue */\n      0x00\n        /* \"TokenBound/ERC6551Account.sol\":2128:2140  bool isValid */\n      dup1\n        /* \"TokenBound/ERC6551Account.sol\":2143:2205  SignatureChecker.isValidSignatureNow(owner(), hash, signature) */\n      tag_49\n        /* \"TokenBound/ERC6551Account.sol\":2180:2187  owner() */\n      tag_50\n        /* \"TokenBound/ERC6551Account.sol\":2180:2185  owner */\n      tag_27\n        /* \"TokenBound/ERC6551Account.sol\":2180:2187  owner() */\n      jump\t// in\n    tag_50:\n        /* \"TokenBound/ERC6551Account.sol\":2189:2193  hash */\n      dup6\n        /* \"TokenBound/ERC6551Account.sol\":2195:2204  signature */\n      dup6\n        /* \"TokenBound/ERC6551Account.sol\":2143:2179  SignatureChecker.isValidSignatureNow */\n      tag_51\n        /* \"TokenBound/ERC6551Account.sol\":2143:2205  SignatureChecker.isValidSignatureNow(owner(), hash, signature) */\n      jump\t// in\n    tag_49:\n        /* \"TokenBound/ERC6551Account.sol\":2128:2205  bool isValid = SignatureChecker.isValidSignatureNow(owner(), hash, signature) */\n      swap1\n      pop\n        /* \"TokenBound/ERC6551Account.sol\":2222:2229  isValid */\n      dup1\n        /* \"TokenBound/ERC6551Account.sol\":2218:2299  if (isValid) {... */\n      iszero\n      tag_52\n      jumpi\n        /* \"TokenBound/ERC6551Account.sol\":2253:2287  IERC1271.isValidSignature.selector */\n      shl(0xe0, 0x1626ba7e)\n        /* \"TokenBound/ERC6551Account.sol\":2246:2287  return IERC1271.isValidSignature.selector */\n      swap2\n      pop\n      pop\n      jump(tag_48)\n        /* \"TokenBound/ERC6551Account.sol\":2218:2299  if (isValid) {... */\n    tag_52:\n        /* \"TokenBound/ERC6551Account.sol\":2311:2320  return \"\" */\n      0x00\n      swap2\n      pop\n      pop\n        /* \"TokenBound/ERC6551Account.sol\":1979:2328  function isValidSignature(bytes32 hash, bytes memory signature)... */\n    tag_48:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"TokenBound/ERC6551Account.sol\":1501:1756  function owner() public view returns (address) {... */\n    tag_27:\n        /* \"TokenBound/ERC6551Account.sol\":1539:1546  address */\n      0x00\n        /* \"TokenBound/ERC6551Account.sol\":1560:1575  uint256 chainId */\n      dup1\n        /* \"TokenBound/ERC6551Account.sol\":1577:1598  address tokenContract */\n      0x00\n        /* \"TokenBound/ERC6551Account.sol\":1600:1615  uint256 tokenId */\n      dup1\n        /* \"TokenBound/ERC6551Account.sol\":1619:1623  this */\n      address\n        /* \"TokenBound/ERC6551Account.sol\":1619:1629  this.token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfc0c546a\n        /* \"TokenBound/ERC6551Account.sol\":1619:1631  this.token() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_55\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_55:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"TokenBound/ERC6551Account.sol\":1559:1631  (uint256 chainId, address tokenContract, uint256 tokenId) = this.token() */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"TokenBound/ERC6551Account.sol\":1657:1670  block.chainid */\n      chainid\n        /* \"TokenBound/ERC6551Account.sol\":1646:1653  chainId */\n      dup4\n        /* \"TokenBound/ERC6551Account.sol\":1646:1670  chainId != block.chainid */\n      eq\n        /* \"TokenBound/ERC6551Account.sol\":1642:1689  if (chainId != block.chainid) return address(0) */\n      tag_58\n      jumpi\n        /* \"TokenBound/ERC6551Account.sol\":1687:1688  0 */\n      0x00\n        /* \"TokenBound/ERC6551Account.sol\":1672:1689  return address(0) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_53)\n        /* \"TokenBound/ERC6551Account.sol\":1642:1689  if (chainId != block.chainid) return address(0) */\n    tag_58:\n        /* \"TokenBound/ERC6551Account.sol\":1717:1730  tokenContract */\n      dup2\n        /* \"TokenBound/ERC6551Account.sol\":1709:1739  IERC721(tokenContract).ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"TokenBound/ERC6551Account.sol\":1740:1747  tokenId */\n      dup3\n        /* \"TokenBound/ERC6551Account.sol\":1709:1748  IERC721(tokenContract).ownerOf(tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_59:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_61\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_61:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"TokenBound/ERC6551Account.sol\":1702:1748  return IERC721(tokenContract).ownerOf(tokenId) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"TokenBound/ERC6551Account.sol\":1501:1756  function owner() public view returns (address) {... */\n    tag_53:\n      swap1\n      jump\t// out\n        /* \"TokenBound/ERC6551Account.sol\":777:1285  function executeCall(... */\n    tag_33:\n        /* \"TokenBound/ERC6551Account.sol\":906:925  bytes memory result */\n      0x60\n        /* \"TokenBound/ERC6551Account.sol\":960:967  owner() */\n      tag_65\n        /* \"TokenBound/ERC6551Account.sol\":960:965  owner */\n      tag_27\n        /* \"TokenBound/ERC6551Account.sol\":960:967  owner() */\n      jump\t// in\n    tag_65:\n        /* \"TokenBound/ERC6551Account.sol\":946:967  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TokenBound/ERC6551Account.sol\":946:956  msg.sender */\n      caller\n        /* \"TokenBound/ERC6551Account.sol\":946:967  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"TokenBound/ERC6551Account.sol\":938:987  require(msg.sender == owner(), \"Not token owner\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_66:\n        /* \"TokenBound/ERC6551Account.sol\":1002:1007  nonce */\n      0x00\n      dup1\n        /* \"TokenBound/ERC6551Account.sol\":1000:1007  ++nonce */\n      dup2\n      sload\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"TokenBound/ERC6551Account.sol\":1049:1054  value */\n      dup4\n        /* \"TokenBound/ERC6551Account.sol\":1045:1047  to */\n      dup6\n        /* \"TokenBound/ERC6551Account.sol\":1025:1061  TransactionExecuted(to, value, data) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x47d99ad340f52da66535aff7e10da1ceb85a32bcbd9fa1c42314d194545e14d2\n        /* \"TokenBound/ERC6551Account.sol\":1056:1060  data */\n      dup6\n      dup6\n        /* \"TokenBound/ERC6551Account.sol\":1025:1061  TransactionExecuted(to, value, data) */\n      mload(0x40)\n      tag_71\n      swap3\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"TokenBound/ERC6551Account.sol\":1074:1086  bool success */\n      0x00\n        /* \"TokenBound/ERC6551Account.sol\":1117:1119  to */\n      dup6\n        /* \"TokenBound/ERC6551Account.sol\":1117:1124  to.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TokenBound/ERC6551Account.sol\":1132:1137  value */\n      dup6\n        /* \"TokenBound/ERC6551Account.sol\":1139:1143  data */\n      dup6\n      dup6\n        /* \"TokenBound/ERC6551Account.sol\":1117:1144  to.call{value: value}(data) */\n      mload(0x40)\n      tag_73\n      swap3\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_77\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_76)\n    tag_77:\n      0x60\n      swap2\n      pop\n    tag_76:\n      pop\n        /* \"TokenBound/ERC6551Account.sol\":1097:1144  (success, result) = to.call{value: value}(data) */\n      dup1\n      swap4\n      pop\n      dup2\n      swap3\n      pop\n      pop\n      pop\n        /* \"TokenBound/ERC6551Account.sol\":1162:1169  success */\n      dup1\n        /* \"TokenBound/ERC6551Account.sol\":1157:1278  if (!success) {... */\n      tag_78\n      jumpi\n        /* \"TokenBound/ERC6551Account.sol\":1244:1250  result */\n      dup2\n        /* \"TokenBound/ERC6551Account.sol\":1238:1251  mload(result) */\n      mload\n        /* \"TokenBound/ERC6551Account.sol\":1233:1235  32 */\n      0x20\n        /* \"TokenBound/ERC6551Account.sol\":1225:1231  result */\n      dup4\n        /* \"TokenBound/ERC6551Account.sol\":1221:1236  add(result, 32) */\n      add\n        /* \"TokenBound/ERC6551Account.sol\":1214:1252  revert(add(result, 32), mload(result)) */\n      revert\n        /* \"TokenBound/ERC6551Account.sol\":1157:1278  if (!success) {... */\n    tag_78:\n        /* \"TokenBound/ERC6551Account.sol\":927:1285  {... */\n      pop\n        /* \"TokenBound/ERC6551Account.sol\":777:1285  function executeCall(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TokenBound/ERC6551Account.sol\":711:731  uint256 public nonce */\n    tag_38:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"TokenBound/ERC6551Account.sol\":1293:1493  function token()... */\n    tag_43:\n        /* \"TokenBound/ERC6551Account.sol\":1374:1381  uint256 */\n      0x00\n        /* \"TokenBound/ERC6551Account.sol\":1396:1403  address */\n      dup1\n        /* \"TokenBound/ERC6551Account.sol\":1418:1425  uint256 */\n      0x00\n        /* \"TokenBound/ERC6551Account.sol\":1460:1485  ERC6551AccountLib.token() */\n      tag_80\n        /* \"TokenBound/ERC6551Account.sol\":1460:1483  ERC6551AccountLib.token */\n      tag_81\n        /* \"TokenBound/ERC6551Account.sol\":1460:1485  ERC6551AccountLib.token() */\n      jump\t// in\n    tag_80:\n        /* \"TokenBound/ERC6551Account.sol\":1453:1485  return ERC6551AccountLib.token() */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"TokenBound/ERC6551Account.sol\":1293:1493  function token()... */\n      swap1\n      swap2\n      swap3\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1014:1380  function isValidSignatureNow(address signer, bytes32 hash, bytes memory signature) internal view returns (bool) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1120:1124  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1137:1154  address recovered */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1156:1180  ECDSA.RecoverError error */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1184:1217  ECDSA.tryRecover(hash, signature) */\n      tag_83\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1201:1205  hash */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1207:1216  signature */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1184:1200  ECDSA.tryRecover */\n      tag_84\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1184:1217  ECDSA.tryRecover(hash, signature) */\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1136:1217  (address recovered, ECDSA.RecoverError error) = ECDSA.tryRecover(hash, signature) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1256:1282  ECDSA.RecoverError.NoError */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1247:1282  error == ECDSA.RecoverError.NoError */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_85\n      jumpi\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n    tag_85:\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1247:1252  error */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1247:1282  error == ECDSA.RecoverError.NoError */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_88\n      jumpi\n      tag_89\n      tag_87\n      jump\t// in\n    tag_89:\n    tag_88:\n      eq\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1247:1305  error == ECDSA.RecoverError.NoError && recovered == signer */\n      dup1\n      iszero\n      tag_90\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1299:1305  signer */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1286:1305  recovered == signer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1286:1295  recovered */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1286:1305  recovered == signer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1247:1305  error == ECDSA.RecoverError.NoError && recovered == signer */\n    tag_90:\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1246:1373  (error == ECDSA.RecoverError.NoError && recovered == signer) ||... */\n      dup1\n      tag_91\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1322:1373  isValidERC1271SignatureNow(signer, hash, signature) */\n      tag_92\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1349:1355  signer */\n      dup7\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1357:1361  hash */\n      dup7\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1363:1372  signature */\n      dup7\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1322:1348  isValidERC1271SignatureNow */\n      tag_93\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1322:1373  isValidERC1271SignatureNow(signer, hash, signature) */\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1246:1373  (error == ECDSA.RecoverError.NoError && recovered == signer) ||... */\n    tag_91:\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1227:1373  return... */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1014:1380  function isValidSignatureNow(address signer, bytes32 hash, bytes memory signature) internal view returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TokenBound/lib/ERC6551AccountLib.sol\":772:1195  function token()... */\n    tag_81:\n        /* \"TokenBound/lib/ERC6551AccountLib.sol\":853:860  uint256 */\n      0x00\n        /* \"TokenBound/lib/ERC6551AccountLib.sol\":875:882  address */\n      dup1\n        /* \"TokenBound/lib/ERC6551AccountLib.sol\":897:904  uint256 */\n      0x00\n        /* \"TokenBound/lib/ERC6551AccountLib.sol\":932:951  bytes memory footer */\n      dup1\n        /* \"TokenBound/lib/ERC6551AccountLib.sol\":964:968  0x60 */\n      0x60\n        /* \"TokenBound/lib/ERC6551AccountLib.sol\":954:969  new bytes(0x60) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_95\n      jumpi\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n    tag_95:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_98\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_98:\n      pop\n        /* \"TokenBound/lib/ERC6551AccountLib.sol\":932:969  bytes memory footer = new bytes(0x60) */\n      swap1\n      pop\n        /* \"TokenBound/lib/ERC6551AccountLib.sol\":1105:1109  0x60 */\n      0x60\n        /* \"TokenBound/lib/ERC6551AccountLib.sol\":1099:1103  0x4d */\n      0x4d\n        /* \"TokenBound/lib/ERC6551AccountLib.sol\":1092:1096  0x20 */\n      0x20\n        /* \"TokenBound/lib/ERC6551AccountLib.sol\":1084:1090  footer */\n      dup4\n        /* \"TokenBound/lib/ERC6551AccountLib.sol\":1080:1097  add(footer, 0x20) */\n      add\n        /* \"TokenBound/lib/ERC6551AccountLib.sol\":1069:1078  address() */\n      address\n        /* \"TokenBound/lib/ERC6551AccountLib.sol\":1057:1110  extcodecopy(address(), add(footer, 0x20), 0x4d, 0x60) */\n      extcodecopy\n        /* \"TokenBound/lib/ERC6551AccountLib.sol\":1151:1157  footer */\n      dup1\n        /* \"TokenBound/lib/ERC6551AccountLib.sol\":1140:1187  abi.decode(footer, (uint256, address, uint256)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n        /* \"TokenBound/lib/ERC6551AccountLib.sol\":1133:1187  return abi.decode(footer, (uint256, address, uint256)) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n        /* \"TokenBound/lib/ERC6551AccountLib.sol\":772:1195  function token()... */\n      swap1\n      swap2\n      swap3\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2145:2875  function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2226:2233  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2235:2247  RecoverError */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2283:2285  65 */\n      0x41\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2263:2272  signature */\n      dup4\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2263:2279  signature.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2263:2285  signature.length == 65 */\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2259:2869  if (signature.length == 65) {... */\n      tag_102\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2301:2310  bytes32 r */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2324:2333  bytes32 s */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2347:2354  uint8 v */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2599:2603  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2588:2597  signature */\n      dup7\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2584:2604  add(signature, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2578:2605  mload(add(signature, 0x20)) */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2573:2605  r := mload(add(signature, 0x20)) */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2648:2652  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2637:2646  signature */\n      dup7\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2633:2653  add(signature, 0x40) */\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2627:2654  mload(add(signature, 0x40)) */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2622:2654  s := mload(add(signature, 0x40)) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2705:2709  0x60 */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2694:2703  signature */\n      dup7\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2690:2710  add(signature, 0x60) */\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2684:2711  mload(add(signature, 0x60)) */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2681:2682  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2676:2712  byte(0, mload(add(signature, 0x60))) */\n      byte\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2671:2712  v := byte(0, mload(add(signature, 0x60))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2746:2771  tryRecover(hash, v, r, s) */\n      tag_103\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2757:2761  hash */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2763:2764  v */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2766:2767  r */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2769:2770  s */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2746:2756  tryRecover */\n      tag_104\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2746:2771  tryRecover(hash, v, r, s) */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2739:2771  return tryRecover(hash, v, r, s) */\n      swap5\n      pop\n      swap5\n      pop\n      pop\n      pop\n      pop\n      jump(tag_101)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2259:2869  if (signature.length == 65) {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2818:2819  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2822:2857  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2802:2858  return (address(0), RecoverError.InvalidSignatureLength) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2145:2875  function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {... */\n    tag_101:\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1786:2259  function isValidERC1271SignatureNow(... */\n    tag_93:\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1929:1933  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1946:1958  bool success */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1960:1979  bytes memory result */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1983:1989  signer */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1983:2000  signer.staticcall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2037:2071  IERC1271.isValidSignature.selector */\n      shl(0xe0, 0x1626ba7e)\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2073:2077  hash */\n      dup7\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2079:2088  signature */\n      dup7\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2014:2089  abi.encodeWithSelector(IERC1271.isValidSignature.selector, hash, signature) */\n      add(0x24, mload(0x40))\n      tag_107\n      swap3\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1983:2099  signer.staticcall(... */\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      staticcall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_113\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_112)\n    tag_113:\n      0x60\n      swap2\n      pop\n    tag_112:\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1945:2099  (bool success, bytes memory result) = signer.staticcall(... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2117:2124  success */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2117:2159  success &&... */\n      dup1\n      iszero\n      tag_114\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2157:2159  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2140:2146  result */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2140:2153  result.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2140:2159  result.length >= 32 */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2117:2159  success &&... */\n    tag_114:\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2117:2251  success &&... */\n      dup1\n      iszero\n      tag_115\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2216:2250  IERC1271.isValidSignature.selector */\n      shl(0xe0, 0x1626ba7e)\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2208:2251  bytes32(IERC1271.isValidSignature.selector) */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2186:2192  result */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2175:2204  abi.decode(result, (bytes32)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2175:2251  abi.decode(result, (bytes32)) == bytes32(IERC1271.isValidSignature.selector) */\n      eq\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2117:2251  success &&... */\n    tag_115:\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2109:2252  return (success &&... */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1786:2259  function isValidERC1271SignatureNow(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5009:6465  function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5097:5104  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5106:5118  RecoverError */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6021:6087  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6016:6017  s */\n      dup4\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6008:6018  uint256(s) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6008:6087  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6004:6165  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      iszero\n      tag_119\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6119:6120  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6123:6153  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6103:6154  return (address(0), RecoverError.InvalidSignatureS) */\n      swap2\n      pop\n      swap2\n      pop\n      jump(tag_118)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6004:6165  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6259:6273  address signer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6276:6300  ecrecover(hash, v, r, s) */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6286:6290  hash */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6292:6293  v */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6295:6296  r */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6298:6299  s */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6276:6300  ecrecover(hash, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      tag_120\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_123\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_123:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6259:6300  address signer = ecrecover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6332:6333  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6314:6334  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6314:6320  signer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6314:6334  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6310:6411  if (signer == address(0)) {... */\n      tag_124\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6366:6367  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6370:6399  RecoverError.InvalidSignature */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6350:6400  return (address(0), RecoverError.InvalidSignature) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      jump(tag_118)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6310:6411  if (signer == address(0)) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6429:6435  signer */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6437:6457  RecoverError.NoError */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6421:6458  return (signer, RecoverError.NoError) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5009:6465  function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {... */\n    tag_118:\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_125:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_126:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_127:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_128:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_129:\n        /* \"#utility.yul\":561:584   */\n      tag_185\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_128\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_186\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_186:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_130:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_188\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_129\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_14:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_190\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_191\n      tag_126\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":833:952   */\n    tag_190:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_192\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_130\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_131:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_132:\n        /* \"#utility.yul\":1268:1289   */\n      tag_195\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_131\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_17:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_197\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_132\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_133:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1723   */\n    tag_134:\n        /* \"#utility.yul\":1674:1698   */\n      tag_200\n        /* \"#utility.yul\":1692:1697   */\n      dup2\n        /* \"#utility.yul\":1674:1698   */\n      tag_133\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":1667:1672   */\n      dup2\n        /* \"#utility.yul\":1664:1699   */\n      eq\n        /* \"#utility.yul\":1654:1717   */\n      tag_201\n      jumpi\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1710:1711   */\n      dup1\n        /* \"#utility.yul\":1703:1715   */\n      revert\n        /* \"#utility.yul\":1654:1717   */\n    tag_201:\n        /* \"#utility.yul\":1601:1723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1729:1868   */\n    tag_135:\n        /* \"#utility.yul\":1775:1780   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup2\n        /* \"#utility.yul\":1800:1820   */\n      calldataload\n        /* \"#utility.yul\":1791:1820   */\n      swap1\n      pop\n        /* \"#utility.yul\":1829:1862   */\n      tag_203\n        /* \"#utility.yul\":1856:1861   */\n      dup2\n        /* \"#utility.yul\":1829:1862   */\n      tag_134\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":1729:1868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1874:1991   */\n    tag_136:\n        /* \"#utility.yul\":1983:1984   */\n      0x00\n        /* \"#utility.yul\":1980:1981   */\n      dup1\n        /* \"#utility.yul\":1973:1985   */\n      revert\n        /* \"#utility.yul\":1997:2114   */\n    tag_137:\n        /* \"#utility.yul\":2106:2107   */\n      0x00\n        /* \"#utility.yul\":2103:2104   */\n      dup1\n        /* \"#utility.yul\":2096:2108   */\n      revert\n        /* \"#utility.yul\":2120:2222   */\n    tag_138:\n        /* \"#utility.yul\":2161:2167   */\n      0x00\n        /* \"#utility.yul\":2212:2214   */\n      0x1f\n        /* \"#utility.yul\":2208:2215   */\n      not\n        /* \"#utility.yul\":2203:2205   */\n      0x1f\n        /* \"#utility.yul\":2196:2201   */\n      dup4\n        /* \"#utility.yul\":2192:2206   */\n      add\n        /* \"#utility.yul\":2188:2216   */\n      and\n        /* \"#utility.yul\":2178:2216   */\n      swap1\n      pop\n        /* \"#utility.yul\":2120:2222   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2228:2408   */\n    tag_97:\n        /* \"#utility.yul\":2276:2353   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2273:2274   */\n      0x00\n        /* \"#utility.yul\":2266:2354   */\n      mstore\n        /* \"#utility.yul\":2373:2377   */\n      0x41\n        /* \"#utility.yul\":2370:2371   */\n      0x04\n        /* \"#utility.yul\":2363:2378   */\n      mstore\n        /* \"#utility.yul\":2397:2401   */\n      0x24\n        /* \"#utility.yul\":2394:2395   */\n      0x00\n        /* \"#utility.yul\":2387:2402   */\n      revert\n        /* \"#utility.yul\":2414:2695   */\n    tag_139:\n        /* \"#utility.yul\":2497:2524   */\n      tag_209\n        /* \"#utility.yul\":2519:2523   */\n      dup3\n        /* \"#utility.yul\":2497:2524   */\n      tag_138\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":2489:2495   */\n      dup2\n        /* \"#utility.yul\":2485:2525   */\n      add\n        /* \"#utility.yul\":2627:2633   */\n      dup2\n        /* \"#utility.yul\":2615:2625   */\n      dup2\n        /* \"#utility.yul\":2612:2634   */\n      lt\n        /* \"#utility.yul\":2591:2609   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2579:2589   */\n      dup3\n        /* \"#utility.yul\":2576:2610   */\n      gt\n        /* \"#utility.yul\":2573:2635   */\n      or\n        /* \"#utility.yul\":2570:2658   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":2638:2656   */\n      tag_211\n      tag_97\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":2570:2658   */\n    tag_210:\n        /* \"#utility.yul\":2678:2688   */\n      dup1\n        /* \"#utility.yul\":2674:2676   */\n      0x40\n        /* \"#utility.yul\":2667:2689   */\n      mstore\n        /* \"#utility.yul\":2457:2695   */\n      pop\n        /* \"#utility.yul\":2414:2695   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2701:2830   */\n    tag_140:\n        /* \"#utility.yul\":2735:2741   */\n      0x00\n        /* \"#utility.yul\":2762:2782   */\n      tag_213\n      tag_125\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":2752:2782   */\n      swap1\n      pop\n        /* \"#utility.yul\":2791:2824   */\n      tag_214\n        /* \"#utility.yul\":2819:2823   */\n      dup3\n        /* \"#utility.yul\":2811:2817   */\n      dup3\n        /* \"#utility.yul\":2791:2824   */\n      tag_139\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":2701:2830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2836:3143   */\n    tag_141:\n        /* \"#utility.yul\":2897:2901   */\n      0x00\n        /* \"#utility.yul\":2987:3005   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2976:3006   */\n      gt\n        /* \"#utility.yul\":2973:3029   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":3009:3027   */\n      tag_217\n      tag_97\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":2973:3029   */\n    tag_216:\n        /* \"#utility.yul\":3047:3076   */\n      tag_218\n        /* \"#utility.yul\":3069:3075   */\n      dup3\n        /* \"#utility.yul\":3047:3076   */\n      tag_138\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":3039:3076   */\n      swap1\n      pop\n        /* \"#utility.yul\":3131:3135   */\n      0x20\n        /* \"#utility.yul\":3125:3129   */\n      dup2\n        /* \"#utility.yul\":3121:3136   */\n      add\n        /* \"#utility.yul\":3113:3136   */\n      swap1\n      pop\n        /* \"#utility.yul\":2836:3143   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3149:3295   */\n    tag_142:\n        /* \"#utility.yul\":3246:3252   */\n      dup3\n        /* \"#utility.yul\":3241:3244   */\n      dup2\n        /* \"#utility.yul\":3236:3239   */\n      dup4\n        /* \"#utility.yul\":3223:3253   */\n      calldatacopy\n        /* \"#utility.yul\":3287:3288   */\n      0x00\n        /* \"#utility.yul\":3278:3284   */\n      dup4\n        /* \"#utility.yul\":3273:3276   */\n      dup4\n        /* \"#utility.yul\":3269:3285   */\n      add\n        /* \"#utility.yul\":3262:3289   */\n      mstore\n        /* \"#utility.yul\":3149:3295   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3301:3724   */\n    tag_143:\n        /* \"#utility.yul\":3378:3383   */\n      0x00\n        /* \"#utility.yul\":3403:3468   */\n      tag_221\n        /* \"#utility.yul\":3419:3467   */\n      tag_222\n        /* \"#utility.yul\":3460:3466   */\n      dup5\n        /* \"#utility.yul\":3419:3467   */\n      tag_141\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":3403:3468   */\n      tag_140\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":3394:3468   */\n      swap1\n      pop\n        /* \"#utility.yul\":3491:3497   */\n      dup3\n        /* \"#utility.yul\":3484:3489   */\n      dup2\n        /* \"#utility.yul\":3477:3498   */\n      mstore\n        /* \"#utility.yul\":3529:3533   */\n      0x20\n        /* \"#utility.yul\":3522:3527   */\n      dup2\n        /* \"#utility.yul\":3518:3534   */\n      add\n        /* \"#utility.yul\":3567:3570   */\n      dup5\n        /* \"#utility.yul\":3558:3564   */\n      dup5\n        /* \"#utility.yul\":3553:3556   */\n      dup5\n        /* \"#utility.yul\":3549:3565   */\n      add\n        /* \"#utility.yul\":3546:3571   */\n      gt\n        /* \"#utility.yul\":3543:3655   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":3574:3653   */\n      tag_224\n      tag_137\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":3543:3655   */\n    tag_223:\n        /* \"#utility.yul\":3664:3718   */\n      tag_225\n        /* \"#utility.yul\":3711:3717   */\n      dup5\n        /* \"#utility.yul\":3706:3709   */\n      dup3\n        /* \"#utility.yul\":3701:3704   */\n      dup6\n        /* \"#utility.yul\":3664:3718   */\n      tag_142\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":3384:3724   */\n      pop\n        /* \"#utility.yul\":3301:3724   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3743:4081   */\n    tag_144:\n        /* \"#utility.yul\":3798:3803   */\n      0x00\n        /* \"#utility.yul\":3847:3850   */\n      dup3\n        /* \"#utility.yul\":3840:3844   */\n      0x1f\n        /* \"#utility.yul\":3832:3838   */\n      dup4\n        /* \"#utility.yul\":3828:3845   */\n      add\n        /* \"#utility.yul\":3824:3851   */\n      slt\n        /* \"#utility.yul\":3814:3936   */\n      tag_227\n      jumpi\n        /* \"#utility.yul\":3855:3934   */\n      tag_228\n      tag_136\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":3814:3936   */\n    tag_227:\n        /* \"#utility.yul\":3972:3978   */\n      dup2\n        /* \"#utility.yul\":3959:3979   */\n      calldataload\n        /* \"#utility.yul\":3997:4075   */\n      tag_229\n        /* \"#utility.yul\":4071:4074   */\n      dup5\n        /* \"#utility.yul\":4063:4069   */\n      dup3\n        /* \"#utility.yul\":4056:4060   */\n      0x20\n        /* \"#utility.yul\":4048:4054   */\n      dup7\n        /* \"#utility.yul\":4044:4061   */\n      add\n        /* \"#utility.yul\":3997:4075   */\n      tag_143\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":3988:4075   */\n      swap2\n      pop\n        /* \"#utility.yul\":3804:4081   */\n      pop\n        /* \"#utility.yul\":3743:4081   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4087:4739   */\n    tag_21:\n        /* \"#utility.yul\":4164:4170   */\n      0x00\n        /* \"#utility.yul\":4172:4178   */\n      dup1\n        /* \"#utility.yul\":4221:4223   */\n      0x40\n        /* \"#utility.yul\":4209:4218   */\n      dup4\n        /* \"#utility.yul\":4200:4207   */\n      dup6\n        /* \"#utility.yul\":4196:4219   */\n      sub\n        /* \"#utility.yul\":4192:4224   */\n      slt\n        /* \"#utility.yul\":4189:4308   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":4227:4306   */\n      tag_232\n      tag_126\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":4189:4308   */\n    tag_231:\n        /* \"#utility.yul\":4347:4348   */\n      0x00\n        /* \"#utility.yul\":4372:4425   */\n      tag_233\n        /* \"#utility.yul\":4417:4424   */\n      dup6\n        /* \"#utility.yul\":4408:4414   */\n      dup3\n        /* \"#utility.yul\":4397:4406   */\n      dup7\n        /* \"#utility.yul\":4393:4415   */\n      add\n        /* \"#utility.yul\":4372:4425   */\n      tag_135\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":4362:4425   */\n      swap3\n      pop\n        /* \"#utility.yul\":4318:4435   */\n      pop\n        /* \"#utility.yul\":4502:4504   */\n      0x20\n        /* \"#utility.yul\":4491:4500   */\n      dup4\n        /* \"#utility.yul\":4487:4505   */\n      add\n        /* \"#utility.yul\":4474:4506   */\n      calldataload\n        /* \"#utility.yul\":4533:4551   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4525:4531   */\n      dup2\n        /* \"#utility.yul\":4522:4552   */\n      gt\n        /* \"#utility.yul\":4519:4636   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":4555:4634   */\n      tag_235\n      tag_127\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":4519:4636   */\n    tag_234:\n        /* \"#utility.yul\":4660:4722   */\n      tag_236\n        /* \"#utility.yul\":4714:4721   */\n      dup6\n        /* \"#utility.yul\":4705:4711   */\n      dup3\n        /* \"#utility.yul\":4694:4703   */\n      dup7\n        /* \"#utility.yul\":4690:4712   */\n      add\n        /* \"#utility.yul\":4660:4722   */\n      tag_144\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":4650:4722   */\n      swap2\n      pop\n        /* \"#utility.yul\":4445:4732   */\n      pop\n        /* \"#utility.yul\":4087:4739   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4745:4860   */\n    tag_145:\n        /* \"#utility.yul\":4830:4853   */\n      tag_238\n        /* \"#utility.yul\":4847:4852   */\n      dup2\n        /* \"#utility.yul\":4830:4853   */\n      tag_128\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":4825:4828   */\n      dup3\n        /* \"#utility.yul\":4818:4854   */\n      mstore\n        /* \"#utility.yul\":4745:4860   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4866:5084   */\n    tag_24:\n        /* \"#utility.yul\":4957:4961   */\n      0x00\n        /* \"#utility.yul\":4995:4997   */\n      0x20\n        /* \"#utility.yul\":4984:4993   */\n      dup3\n        /* \"#utility.yul\":4980:4998   */\n      add\n        /* \"#utility.yul\":4972:4998   */\n      swap1\n      pop\n        /* \"#utility.yul\":5008:5077   */\n      tag_240\n        /* \"#utility.yul\":5074:5075   */\n      0x00\n        /* \"#utility.yul\":5063:5072   */\n      dup4\n        /* \"#utility.yul\":5059:5076   */\n      add\n        /* \"#utility.yul\":5050:5056   */\n      dup5\n        /* \"#utility.yul\":5008:5077   */\n      tag_145\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":4866:5084   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5090:5216   */\n    tag_146:\n        /* \"#utility.yul\":5127:5134   */\n      0x00\n        /* \"#utility.yul\":5167:5209   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5160:5165   */\n      dup3\n        /* \"#utility.yul\":5156:5210   */\n      and\n        /* \"#utility.yul\":5145:5210   */\n      swap1\n      pop\n        /* \"#utility.yul\":5090:5216   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5222:5318   */\n    tag_147:\n        /* \"#utility.yul\":5259:5266   */\n      0x00\n        /* \"#utility.yul\":5288:5312   */\n      tag_243\n        /* \"#utility.yul\":5306:5311   */\n      dup3\n        /* \"#utility.yul\":5288:5312   */\n      tag_146\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":5277:5312   */\n      swap1\n      pop\n        /* \"#utility.yul\":5222:5318   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5324:5442   */\n    tag_148:\n        /* \"#utility.yul\":5411:5435   */\n      tag_245\n        /* \"#utility.yul\":5429:5434   */\n      dup2\n        /* \"#utility.yul\":5411:5435   */\n      tag_147\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":5406:5409   */\n      dup3\n        /* \"#utility.yul\":5399:5436   */\n      mstore\n        /* \"#utility.yul\":5324:5442   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5448:5670   */\n    tag_29:\n        /* \"#utility.yul\":5541:5545   */\n      0x00\n        /* \"#utility.yul\":5579:5581   */\n      0x20\n        /* \"#utility.yul\":5568:5577   */\n      dup3\n        /* \"#utility.yul\":5564:5582   */\n      add\n        /* \"#utility.yul\":5556:5582   */\n      swap1\n      pop\n        /* \"#utility.yul\":5592:5663   */\n      tag_247\n        /* \"#utility.yul\":5660:5661   */\n      0x00\n        /* \"#utility.yul\":5649:5658   */\n      dup4\n        /* \"#utility.yul\":5645:5662   */\n      add\n        /* \"#utility.yul\":5636:5642   */\n      dup5\n        /* \"#utility.yul\":5592:5663   */\n      tag_148\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":5448:5670   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5676:5798   */\n    tag_149:\n        /* \"#utility.yul\":5749:5773   */\n      tag_249\n        /* \"#utility.yul\":5767:5772   */\n      dup2\n        /* \"#utility.yul\":5749:5773   */\n      tag_147\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":5742:5747   */\n      dup2\n        /* \"#utility.yul\":5739:5774   */\n      eq\n        /* \"#utility.yul\":5729:5792   */\n      tag_250\n      jumpi\n        /* \"#utility.yul\":5788:5789   */\n      0x00\n        /* \"#utility.yul\":5785:5786   */\n      dup1\n        /* \"#utility.yul\":5778:5790   */\n      revert\n        /* \"#utility.yul\":5729:5792   */\n    tag_250:\n        /* \"#utility.yul\":5676:5798   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5804:5943   */\n    tag_150:\n        /* \"#utility.yul\":5850:5855   */\n      0x00\n        /* \"#utility.yul\":5888:5894   */\n      dup2\n        /* \"#utility.yul\":5875:5895   */\n      calldataload\n        /* \"#utility.yul\":5866:5895   */\n      swap1\n      pop\n        /* \"#utility.yul\":5904:5937   */\n      tag_252\n        /* \"#utility.yul\":5931:5936   */\n      dup2\n        /* \"#utility.yul\":5904:5937   */\n      tag_149\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":5804:5943   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5949:6026   */\n    tag_151:\n        /* \"#utility.yul\":5986:5993   */\n      0x00\n        /* \"#utility.yul\":6015:6020   */\n      dup2\n        /* \"#utility.yul\":6004:6020   */\n      swap1\n      pop\n        /* \"#utility.yul\":5949:6026   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6032:6154   */\n    tag_152:\n        /* \"#utility.yul\":6105:6129   */\n      tag_255\n        /* \"#utility.yul\":6123:6128   */\n      dup2\n        /* \"#utility.yul\":6105:6129   */\n      tag_151\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":6098:6103   */\n      dup2\n        /* \"#utility.yul\":6095:6130   */\n      eq\n        /* \"#utility.yul\":6085:6148   */\n      tag_256\n      jumpi\n        /* \"#utility.yul\":6144:6145   */\n      0x00\n        /* \"#utility.yul\":6141:6142   */\n      dup1\n        /* \"#utility.yul\":6134:6146   */\n      revert\n        /* \"#utility.yul\":6085:6148   */\n    tag_256:\n        /* \"#utility.yul\":6032:6154   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6160:6299   */\n    tag_153:\n        /* \"#utility.yul\":6206:6211   */\n      0x00\n        /* \"#utility.yul\":6244:6250   */\n      dup2\n        /* \"#utility.yul\":6231:6251   */\n      calldataload\n        /* \"#utility.yul\":6222:6251   */\n      swap1\n      pop\n        /* \"#utility.yul\":6260:6293   */\n      tag_258\n        /* \"#utility.yul\":6287:6292   */\n      dup2\n        /* \"#utility.yul\":6260:6293   */\n      tag_152\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":6160:6299   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6305:6422   */\n    tag_154:\n        /* \"#utility.yul\":6414:6415   */\n      0x00\n        /* \"#utility.yul\":6411:6412   */\n      dup1\n        /* \"#utility.yul\":6404:6416   */\n      revert\n        /* \"#utility.yul\":6428:6545   */\n    tag_155:\n        /* \"#utility.yul\":6537:6538   */\n      0x00\n        /* \"#utility.yul\":6534:6535   */\n      dup1\n        /* \"#utility.yul\":6527:6539   */\n      revert\n        /* \"#utility.yul\":6564:7116   */\n    tag_156:\n        /* \"#utility.yul\":6621:6629   */\n      0x00\n        /* \"#utility.yul\":6631:6637   */\n      dup1\n        /* \"#utility.yul\":6681:6684   */\n      dup4\n        /* \"#utility.yul\":6674:6678   */\n      0x1f\n        /* \"#utility.yul\":6666:6672   */\n      dup5\n        /* \"#utility.yul\":6662:6679   */\n      add\n        /* \"#utility.yul\":6658:6685   */\n      slt\n        /* \"#utility.yul\":6648:6770   */\n      tag_262\n      jumpi\n        /* \"#utility.yul\":6689:6768   */\n      tag_263\n      tag_136\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":6648:6770   */\n    tag_262:\n        /* \"#utility.yul\":6802:6808   */\n      dup3\n        /* \"#utility.yul\":6789:6809   */\n      calldataload\n        /* \"#utility.yul\":6779:6809   */\n      swap1\n      pop\n        /* \"#utility.yul\":6832:6850   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6824:6830   */\n      dup2\n        /* \"#utility.yul\":6821:6851   */\n      gt\n        /* \"#utility.yul\":6818:6935   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":6854:6933   */\n      tag_265\n      tag_154\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":6818:6935   */\n    tag_264:\n        /* \"#utility.yul\":6968:6972   */\n      0x20\n        /* \"#utility.yul\":6960:6966   */\n      dup4\n        /* \"#utility.yul\":6956:6973   */\n      add\n        /* \"#utility.yul\":6944:6973   */\n      swap2\n      pop\n        /* \"#utility.yul\":7022:7025   */\n      dup4\n        /* \"#utility.yul\":7014:7018   */\n      0x01\n        /* \"#utility.yul\":7006:7012   */\n      dup3\n        /* \"#utility.yul\":7002:7019   */\n      mul\n        /* \"#utility.yul\":6992:7000   */\n      dup4\n        /* \"#utility.yul\":6988:7020   */\n      add\n        /* \"#utility.yul\":6985:7026   */\n      gt\n        /* \"#utility.yul\":6982:7110   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":7029:7108   */\n      tag_267\n      tag_155\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":6982:7110   */\n    tag_266:\n        /* \"#utility.yul\":6564:7116   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7122:7939   */\n    tag_32:\n        /* \"#utility.yul\":7210:7216   */\n      0x00\n        /* \"#utility.yul\":7218:7224   */\n      dup1\n        /* \"#utility.yul\":7226:7232   */\n      0x00\n        /* \"#utility.yul\":7234:7240   */\n      dup1\n        /* \"#utility.yul\":7283:7285   */\n      0x60\n        /* \"#utility.yul\":7271:7280   */\n      dup6\n        /* \"#utility.yul\":7262:7269   */\n      dup8\n        /* \"#utility.yul\":7258:7281   */\n      sub\n        /* \"#utility.yul\":7254:7286   */\n      slt\n        /* \"#utility.yul\":7251:7370   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":7289:7368   */\n      tag_270\n      tag_126\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":7251:7370   */\n    tag_269:\n        /* \"#utility.yul\":7409:7410   */\n      0x00\n        /* \"#utility.yul\":7434:7487   */\n      tag_271\n        /* \"#utility.yul\":7479:7486   */\n      dup8\n        /* \"#utility.yul\":7470:7476   */\n      dup3\n        /* \"#utility.yul\":7459:7468   */\n      dup9\n        /* \"#utility.yul\":7455:7477   */\n      add\n        /* \"#utility.yul\":7434:7487   */\n      tag_150\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":7424:7487   */\n      swap5\n      pop\n        /* \"#utility.yul\":7380:7497   */\n      pop\n        /* \"#utility.yul\":7536:7538   */\n      0x20\n        /* \"#utility.yul\":7562:7615   */\n      tag_272\n        /* \"#utility.yul\":7607:7614   */\n      dup8\n        /* \"#utility.yul\":7598:7604   */\n      dup3\n        /* \"#utility.yul\":7587:7596   */\n      dup9\n        /* \"#utility.yul\":7583:7605   */\n      add\n        /* \"#utility.yul\":7562:7615   */\n      tag_153\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":7552:7615   */\n      swap4\n      pop\n        /* \"#utility.yul\":7507:7625   */\n      pop\n        /* \"#utility.yul\":7692:7694   */\n      0x40\n        /* \"#utility.yul\":7681:7690   */\n      dup6\n        /* \"#utility.yul\":7677:7695   */\n      add\n        /* \"#utility.yul\":7664:7696   */\n      calldataload\n        /* \"#utility.yul\":7723:7741   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7715:7721   */\n      dup2\n        /* \"#utility.yul\":7712:7742   */\n      gt\n        /* \"#utility.yul\":7709:7826   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":7745:7824   */\n      tag_274\n      tag_127\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":7709:7826   */\n    tag_273:\n        /* \"#utility.yul\":7858:7922   */\n      tag_275\n        /* \"#utility.yul\":7914:7921   */\n      dup8\n        /* \"#utility.yul\":7905:7911   */\n      dup3\n        /* \"#utility.yul\":7894:7903   */\n      dup9\n        /* \"#utility.yul\":7890:7912   */\n      add\n        /* \"#utility.yul\":7858:7922   */\n      tag_156\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":7840:7922   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":7635:7932   */\n      pop\n        /* \"#utility.yul\":7122:7939   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7945:8043   */\n    tag_157:\n        /* \"#utility.yul\":7996:8002   */\n      0x00\n        /* \"#utility.yul\":8030:8035   */\n      dup2\n        /* \"#utility.yul\":8024:8036   */\n      mload\n        /* \"#utility.yul\":8014:8036   */\n      swap1\n      pop\n        /* \"#utility.yul\":7945:8043   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8049:8217   */\n    tag_158:\n        /* \"#utility.yul\":8132:8143   */\n      0x00\n        /* \"#utility.yul\":8166:8172   */\n      dup3\n        /* \"#utility.yul\":8161:8164   */\n      dup3\n        /* \"#utility.yul\":8154:8173   */\n      mstore\n        /* \"#utility.yul\":8206:8210   */\n      0x20\n        /* \"#utility.yul\":8201:8204   */\n      dup3\n        /* \"#utility.yul\":8197:8211   */\n      add\n        /* \"#utility.yul\":8182:8211   */\n      swap1\n      pop\n        /* \"#utility.yul\":8049:8217   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8223:8469   */\n    tag_159:\n        /* \"#utility.yul\":8304:8305   */\n      0x00\n        /* \"#utility.yul\":8314:8427   */\n    tag_279:\n        /* \"#utility.yul\":8328:8334   */\n      dup4\n        /* \"#utility.yul\":8325:8326   */\n      dup2\n        /* \"#utility.yul\":8322:8335   */\n      lt\n        /* \"#utility.yul\":8314:8427   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":8413:8414   */\n      dup1\n        /* \"#utility.yul\":8408:8411   */\n      dup3\n        /* \"#utility.yul\":8404:8415   */\n      add\n        /* \"#utility.yul\":8398:8416   */\n      mload\n        /* \"#utility.yul\":8394:8395   */\n      dup2\n        /* \"#utility.yul\":8389:8392   */\n      dup5\n        /* \"#utility.yul\":8385:8396   */\n      add\n        /* \"#utility.yul\":8378:8417   */\n      mstore\n        /* \"#utility.yul\":8350:8352   */\n      0x20\n        /* \"#utility.yul\":8347:8348   */\n      dup2\n        /* \"#utility.yul\":8343:8353   */\n      add\n        /* \"#utility.yul\":8338:8353   */\n      swap1\n      pop\n        /* \"#utility.yul\":8314:8427   */\n      jump(tag_279)\n    tag_281:\n        /* \"#utility.yul\":8461:8462   */\n      0x00\n        /* \"#utility.yul\":8452:8458   */\n      dup5\n        /* \"#utility.yul\":8447:8450   */\n      dup5\n        /* \"#utility.yul\":8443:8459   */\n      add\n        /* \"#utility.yul\":8436:8463   */\n      mstore\n        /* \"#utility.yul\":8285:8469   */\n      pop\n        /* \"#utility.yul\":8223:8469   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8475:8848   */\n    tag_160:\n        /* \"#utility.yul\":8561:8564   */\n      0x00\n        /* \"#utility.yul\":8589:8627   */\n      tag_283\n        /* \"#utility.yul\":8621:8626   */\n      dup3\n        /* \"#utility.yul\":8589:8627   */\n      tag_157\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":8643:8713   */\n      tag_284\n        /* \"#utility.yul\":8706:8712   */\n      dup2\n        /* \"#utility.yul\":8701:8704   */\n      dup6\n        /* \"#utility.yul\":8643:8713   */\n      tag_158\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":8636:8713   */\n      swap4\n      pop\n        /* \"#utility.yul\":8722:8787   */\n      tag_285\n        /* \"#utility.yul\":8780:8786   */\n      dup2\n        /* \"#utility.yul\":8775:8778   */\n      dup6\n        /* \"#utility.yul\":8768:8772   */\n      0x20\n        /* \"#utility.yul\":8761:8766   */\n      dup7\n        /* \"#utility.yul\":8757:8773   */\n      add\n        /* \"#utility.yul\":8722:8787   */\n      tag_159\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":8812:8841   */\n      tag_286\n        /* \"#utility.yul\":8834:8840   */\n      dup2\n        /* \"#utility.yul\":8812:8841   */\n      tag_138\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":8807:8810   */\n      dup5\n        /* \"#utility.yul\":8803:8842   */\n      add\n        /* \"#utility.yul\":8796:8842   */\n      swap2\n      pop\n        /* \"#utility.yul\":8565:8848   */\n      pop\n        /* \"#utility.yul\":8475:8848   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8854:9163   */\n    tag_35:\n        /* \"#utility.yul\":8965:8969   */\n      0x00\n        /* \"#utility.yul\":9003:9005   */\n      0x20\n        /* \"#utility.yul\":8992:9001   */\n      dup3\n        /* \"#utility.yul\":8988:9006   */\n      add\n        /* \"#utility.yul\":8980:9006   */\n      swap1\n      pop\n        /* \"#utility.yul\":9052:9061   */\n      dup2\n        /* \"#utility.yul\":9046:9050   */\n      dup2\n        /* \"#utility.yul\":9042:9062   */\n      sub\n        /* \"#utility.yul\":9038:9039   */\n      0x00\n        /* \"#utility.yul\":9027:9036   */\n      dup4\n        /* \"#utility.yul\":9023:9040   */\n      add\n        /* \"#utility.yul\":9016:9063   */\n      mstore\n        /* \"#utility.yul\":9080:9156   */\n      tag_288\n        /* \"#utility.yul\":9151:9155   */\n      dup2\n        /* \"#utility.yul\":9142:9148   */\n      dup5\n        /* \"#utility.yul\":9080:9156   */\n      tag_160\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":9072:9156   */\n      swap1\n      pop\n        /* \"#utility.yul\":8854:9163   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9169:9287   */\n    tag_161:\n        /* \"#utility.yul\":9256:9280   */\n      tag_290\n        /* \"#utility.yul\":9274:9279   */\n      dup2\n        /* \"#utility.yul\":9256:9280   */\n      tag_151\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":9251:9254   */\n      dup3\n        /* \"#utility.yul\":9244:9281   */\n      mstore\n        /* \"#utility.yul\":9169:9287   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9293:9515   */\n    tag_40:\n        /* \"#utility.yul\":9386:9390   */\n      0x00\n        /* \"#utility.yul\":9424:9426   */\n      0x20\n        /* \"#utility.yul\":9413:9422   */\n      dup3\n        /* \"#utility.yul\":9409:9427   */\n      add\n        /* \"#utility.yul\":9401:9427   */\n      swap1\n      pop\n        /* \"#utility.yul\":9437:9508   */\n      tag_292\n        /* \"#utility.yul\":9505:9506   */\n      0x00\n        /* \"#utility.yul\":9494:9503   */\n      dup4\n        /* \"#utility.yul\":9490:9507   */\n      add\n        /* \"#utility.yul\":9481:9487   */\n      dup5\n        /* \"#utility.yul\":9437:9508   */\n      tag_161\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":9293:9515   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9521:9963   */\n    tag_45:\n        /* \"#utility.yul\":9670:9674   */\n      0x00\n        /* \"#utility.yul\":9708:9710   */\n      0x60\n        /* \"#utility.yul\":9697:9706   */\n      dup3\n        /* \"#utility.yul\":9693:9711   */\n      add\n        /* \"#utility.yul\":9685:9711   */\n      swap1\n      pop\n        /* \"#utility.yul\":9721:9792   */\n      tag_294\n        /* \"#utility.yul\":9789:9790   */\n      0x00\n        /* \"#utility.yul\":9778:9787   */\n      dup4\n        /* \"#utility.yul\":9774:9791   */\n      add\n        /* \"#utility.yul\":9765:9771   */\n      dup7\n        /* \"#utility.yul\":9721:9792   */\n      tag_161\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":9802:9874   */\n      tag_295\n        /* \"#utility.yul\":9870:9872   */\n      0x20\n        /* \"#utility.yul\":9859:9868   */\n      dup4\n        /* \"#utility.yul\":9855:9873   */\n      add\n        /* \"#utility.yul\":9846:9852   */\n      dup6\n        /* \"#utility.yul\":9802:9874   */\n      tag_148\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":9884:9956   */\n      tag_296\n        /* \"#utility.yul\":9952:9954   */\n      0x40\n        /* \"#utility.yul\":9941:9950   */\n      dup4\n        /* \"#utility.yul\":9937:9955   */\n      add\n        /* \"#utility.yul\":9928:9934   */\n      dup5\n        /* \"#utility.yul\":9884:9956   */\n      tag_161\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":9521:9963   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9969:10112   */\n    tag_162:\n        /* \"#utility.yul\":10026:10031   */\n      0x00\n        /* \"#utility.yul\":10057:10063   */\n      dup2\n        /* \"#utility.yul\":10051:10064   */\n      mload\n        /* \"#utility.yul\":10042:10064   */\n      swap1\n      pop\n        /* \"#utility.yul\":10073:10106   */\n      tag_298\n        /* \"#utility.yul\":10100:10105   */\n      dup2\n        /* \"#utility.yul\":10073:10106   */\n      tag_152\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":9969:10112   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10118:10261   */\n    tag_163:\n        /* \"#utility.yul\":10175:10180   */\n      0x00\n        /* \"#utility.yul\":10206:10212   */\n      dup2\n        /* \"#utility.yul\":10200:10213   */\n      mload\n        /* \"#utility.yul\":10191:10213   */\n      swap1\n      pop\n        /* \"#utility.yul\":10222:10255   */\n      tag_300\n        /* \"#utility.yul\":10249:10254   */\n      dup2\n        /* \"#utility.yul\":10222:10255   */\n      tag_149\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":10118:10261   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10267:10930   */\n    tag_57:\n        /* \"#utility.yul\":10355:10361   */\n      0x00\n        /* \"#utility.yul\":10363:10369   */\n      dup1\n        /* \"#utility.yul\":10371:10377   */\n      0x00\n        /* \"#utility.yul\":10420:10422   */\n      0x60\n        /* \"#utility.yul\":10408:10417   */\n      dup5\n        /* \"#utility.yul\":10399:10406   */\n      dup7\n        /* \"#utility.yul\":10395:10418   */\n      sub\n        /* \"#utility.yul\":10391:10423   */\n      slt\n        /* \"#utility.yul\":10388:10507   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":10426:10505   */\n      tag_303\n      tag_126\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":10388:10507   */\n    tag_302:\n        /* \"#utility.yul\":10546:10547   */\n      0x00\n        /* \"#utility.yul\":10571:10635   */\n      tag_304\n        /* \"#utility.yul\":10627:10634   */\n      dup7\n        /* \"#utility.yul\":10618:10624   */\n      dup3\n        /* \"#utility.yul\":10607:10616   */\n      dup8\n        /* \"#utility.yul\":10603:10625   */\n      add\n        /* \"#utility.yul\":10571:10635   */\n      tag_162\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":10561:10635   */\n      swap4\n      pop\n        /* \"#utility.yul\":10517:10645   */\n      pop\n        /* \"#utility.yul\":10684:10686   */\n      0x20\n        /* \"#utility.yul\":10710:10774   */\n      tag_305\n        /* \"#utility.yul\":10766:10773   */\n      dup7\n        /* \"#utility.yul\":10757:10763   */\n      dup3\n        /* \"#utility.yul\":10746:10755   */\n      dup8\n        /* \"#utility.yul\":10742:10764   */\n      add\n        /* \"#utility.yul\":10710:10774   */\n      tag_163\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":10700:10774   */\n      swap3\n      pop\n        /* \"#utility.yul\":10655:10784   */\n      pop\n        /* \"#utility.yul\":10823:10825   */\n      0x40\n        /* \"#utility.yul\":10849:10913   */\n      tag_306\n        /* \"#utility.yul\":10905:10912   */\n      dup7\n        /* \"#utility.yul\":10896:10902   */\n      dup3\n        /* \"#utility.yul\":10885:10894   */\n      dup8\n        /* \"#utility.yul\":10881:10903   */\n      add\n        /* \"#utility.yul\":10849:10913   */\n      tag_162\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":10839:10913   */\n      swap2\n      pop\n        /* \"#utility.yul\":10794:10923   */\n      pop\n        /* \"#utility.yul\":10267:10930   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":10936:11287   */\n    tag_63:\n        /* \"#utility.yul\":11006:11012   */\n      0x00\n        /* \"#utility.yul\":11055:11057   */\n      0x20\n        /* \"#utility.yul\":11043:11052   */\n      dup3\n        /* \"#utility.yul\":11034:11041   */\n      dup5\n        /* \"#utility.yul\":11030:11053   */\n      sub\n        /* \"#utility.yul\":11026:11058   */\n      slt\n        /* \"#utility.yul\":11023:11142   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":11061:11140   */\n      tag_309\n      tag_126\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":11023:11142   */\n    tag_308:\n        /* \"#utility.yul\":11181:11182   */\n      0x00\n        /* \"#utility.yul\":11206:11270   */\n      tag_310\n        /* \"#utility.yul\":11262:11269   */\n      dup5\n        /* \"#utility.yul\":11253:11259   */\n      dup3\n        /* \"#utility.yul\":11242:11251   */\n      dup6\n        /* \"#utility.yul\":11238:11260   */\n      add\n        /* \"#utility.yul\":11206:11270   */\n      tag_163\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":11196:11270   */\n      swap2\n      pop\n        /* \"#utility.yul\":11152:11280   */\n      pop\n        /* \"#utility.yul\":10936:11287   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11293:11462   */\n    tag_164:\n        /* \"#utility.yul\":11377:11388   */\n      0x00\n        /* \"#utility.yul\":11411:11417   */\n      dup3\n        /* \"#utility.yul\":11406:11409   */\n      dup3\n        /* \"#utility.yul\":11399:11418   */\n      mstore\n        /* \"#utility.yul\":11451:11455   */\n      0x20\n        /* \"#utility.yul\":11446:11449   */\n      dup3\n        /* \"#utility.yul\":11442:11456   */\n      add\n        /* \"#utility.yul\":11427:11456   */\n      swap1\n      pop\n        /* \"#utility.yul\":11293:11462   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11468:11633   */\n    tag_165:\n        /* \"#utility.yul\":11608:11625   */\n      0x4e6f7420746f6b656e206f776e65720000000000000000000000000000000000\n        /* \"#utility.yul\":11604:11605   */\n      0x00\n        /* \"#utility.yul\":11596:11602   */\n      dup3\n        /* \"#utility.yul\":11592:11606   */\n      add\n        /* \"#utility.yul\":11585:11626   */\n      mstore\n        /* \"#utility.yul\":11468:11633   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11639:12005   */\n    tag_166:\n        /* \"#utility.yul\":11781:11784   */\n      0x00\n        /* \"#utility.yul\":11802:11869   */\n      tag_314\n        /* \"#utility.yul\":11866:11868   */\n      0x0f\n        /* \"#utility.yul\":11861:11864   */\n      dup4\n        /* \"#utility.yul\":11802:11869   */\n      tag_164\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":11795:11869   */\n      swap2\n      pop\n        /* \"#utility.yul\":11878:11971   */\n      tag_315\n        /* \"#utility.yul\":11967:11970   */\n      dup3\n        /* \"#utility.yul\":11878:11971   */\n      tag_165\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":11996:11998   */\n      0x20\n        /* \"#utility.yul\":11991:11994   */\n      dup3\n        /* \"#utility.yul\":11987:11999   */\n      add\n        /* \"#utility.yul\":11980:11999   */\n      swap1\n      pop\n        /* \"#utility.yul\":11639:12005   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12011:12430   */\n    tag_68:\n        /* \"#utility.yul\":12177:12181   */\n      0x00\n        /* \"#utility.yul\":12215:12217   */\n      0x20\n        /* \"#utility.yul\":12204:12213   */\n      dup3\n        /* \"#utility.yul\":12200:12218   */\n      add\n        /* \"#utility.yul\":12192:12218   */\n      swap1\n      pop\n        /* \"#utility.yul\":12264:12273   */\n      dup2\n        /* \"#utility.yul\":12258:12262   */\n      dup2\n        /* \"#utility.yul\":12254:12274   */\n      sub\n        /* \"#utility.yul\":12250:12251   */\n      0x00\n        /* \"#utility.yul\":12239:12248   */\n      dup4\n        /* \"#utility.yul\":12235:12252   */\n      add\n        /* \"#utility.yul\":12228:12275   */\n      mstore\n        /* \"#utility.yul\":12292:12423   */\n      tag_317\n        /* \"#utility.yul\":12418:12422   */\n      dup2\n        /* \"#utility.yul\":12292:12423   */\n      tag_166\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":12284:12423   */\n      swap1\n      pop\n        /* \"#utility.yul\":12011:12430   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12436:12616   */\n    tag_167:\n        /* \"#utility.yul\":12484:12561   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12481:12482   */\n      0x00\n        /* \"#utility.yul\":12474:12562   */\n      mstore\n        /* \"#utility.yul\":12581:12585   */\n      0x11\n        /* \"#utility.yul\":12578:12579   */\n      0x04\n        /* \"#utility.yul\":12571:12586   */\n      mstore\n        /* \"#utility.yul\":12605:12609   */\n      0x24\n        /* \"#utility.yul\":12602:12603   */\n      0x00\n        /* \"#utility.yul\":12595:12610   */\n      revert\n        /* \"#utility.yul\":12622:12855   */\n    tag_70:\n        /* \"#utility.yul\":12661:12664   */\n      0x00\n        /* \"#utility.yul\":12684:12708   */\n      tag_320\n        /* \"#utility.yul\":12702:12707   */\n      dup3\n        /* \"#utility.yul\":12684:12708   */\n      tag_151\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":12675:12708   */\n      swap2\n      pop\n        /* \"#utility.yul\":12730:12796   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12723:12728   */\n      dup3\n        /* \"#utility.yul\":12720:12797   */\n      sub\n        /* \"#utility.yul\":12717:12820   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":12800:12818   */\n      tag_322\n      tag_167\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":12717:12820   */\n    tag_321:\n        /* \"#utility.yul\":12847:12848   */\n      0x01\n        /* \"#utility.yul\":12840:12845   */\n      dup3\n        /* \"#utility.yul\":12836:12849   */\n      add\n        /* \"#utility.yul\":12829:12849   */\n      swap1\n      pop\n        /* \"#utility.yul\":12622:12855   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12883:13197   */\n    tag_168:\n        /* \"#utility.yul\":12979:12982   */\n      0x00\n        /* \"#utility.yul\":13000:13070   */\n      tag_324\n        /* \"#utility.yul\":13063:13069   */\n      dup4\n        /* \"#utility.yul\":13058:13061   */\n      dup6\n        /* \"#utility.yul\":13000:13070   */\n      tag_158\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":12993:13070   */\n      swap4\n      pop\n        /* \"#utility.yul\":13080:13136   */\n      tag_325\n        /* \"#utility.yul\":13129:13135   */\n      dup4\n        /* \"#utility.yul\":13124:13127   */\n      dup6\n        /* \"#utility.yul\":13117:13122   */\n      dup5\n        /* \"#utility.yul\":13080:13136   */\n      tag_142\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":13161:13190   */\n      tag_326\n        /* \"#utility.yul\":13183:13189   */\n      dup4\n        /* \"#utility.yul\":13161:13190   */\n      tag_138\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":13156:13159   */\n      dup5\n        /* \"#utility.yul\":13152:13191   */\n      add\n        /* \"#utility.yul\":13145:13191   */\n      swap1\n      pop\n        /* \"#utility.yul\":12883:13197   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13203:13532   */\n    tag_72:\n        /* \"#utility.yul\":13324:13328   */\n      0x00\n        /* \"#utility.yul\":13362:13364   */\n      0x20\n        /* \"#utility.yul\":13351:13360   */\n      dup3\n        /* \"#utility.yul\":13347:13365   */\n      add\n        /* \"#utility.yul\":13339:13365   */\n      swap1\n      pop\n        /* \"#utility.yul\":13411:13420   */\n      dup2\n        /* \"#utility.yul\":13405:13409   */\n      dup2\n        /* \"#utility.yul\":13401:13421   */\n      sub\n        /* \"#utility.yul\":13397:13398   */\n      0x00\n        /* \"#utility.yul\":13386:13395   */\n      dup4\n        /* \"#utility.yul\":13382:13399   */\n      add\n        /* \"#utility.yul\":13375:13422   */\n      mstore\n        /* \"#utility.yul\":13439:13525   */\n      tag_328\n        /* \"#utility.yul\":13520:13524   */\n      dup2\n        /* \"#utility.yul\":13511:13517   */\n      dup5\n        /* \"#utility.yul\":13503:13509   */\n      dup7\n        /* \"#utility.yul\":13439:13525   */\n      tag_168\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":13431:13525   */\n      swap1\n      pop\n        /* \"#utility.yul\":13203:13532   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13538:13685   */\n    tag_169:\n        /* \"#utility.yul\":13639:13650   */\n      0x00\n        /* \"#utility.yul\":13676:13679   */\n      dup2\n        /* \"#utility.yul\":13661:13679   */\n      swap1\n      pop\n        /* \"#utility.yul\":13538:13685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13713:14040   */\n    tag_170:\n        /* \"#utility.yul\":13827:13830   */\n      0x00\n        /* \"#utility.yul\":13848:13936   */\n      tag_331\n        /* \"#utility.yul\":13929:13935   */\n      dup4\n        /* \"#utility.yul\":13924:13927   */\n      dup6\n        /* \"#utility.yul\":13848:13936   */\n      tag_169\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":13841:13936   */\n      swap4\n      pop\n        /* \"#utility.yul\":13946:14002   */\n      tag_332\n        /* \"#utility.yul\":13995:14001   */\n      dup4\n        /* \"#utility.yul\":13990:13993   */\n      dup6\n        /* \"#utility.yul\":13983:13988   */\n      dup5\n        /* \"#utility.yul\":13946:14002   */\n      tag_142\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":14027:14033   */\n      dup3\n        /* \"#utility.yul\":14022:14025   */\n      dup5\n        /* \"#utility.yul\":14018:14034   */\n      add\n        /* \"#utility.yul\":14011:14034   */\n      swap1\n      pop\n        /* \"#utility.yul\":13713:14040   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14046:14337   */\n    tag_74:\n        /* \"#utility.yul\":14186:14189   */\n      0x00\n        /* \"#utility.yul\":14208:14311   */\n      tag_334\n        /* \"#utility.yul\":14307:14310   */\n      dup3\n        /* \"#utility.yul\":14298:14304   */\n      dup5\n        /* \"#utility.yul\":14290:14296   */\n      dup7\n        /* \"#utility.yul\":14208:14311   */\n      tag_170\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":14201:14311   */\n      swap2\n      pop\n        /* \"#utility.yul\":14328:14331   */\n      dup2\n        /* \"#utility.yul\":14321:14331   */\n      swap1\n      pop\n        /* \"#utility.yul\":14046:14337   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14343:14523   */\n    tag_87:\n        /* \"#utility.yul\":14391:14468   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14388:14389   */\n      0x00\n        /* \"#utility.yul\":14381:14469   */\n      mstore\n        /* \"#utility.yul\":14488:14492   */\n      0x21\n        /* \"#utility.yul\":14485:14486   */\n      0x04\n        /* \"#utility.yul\":14478:14493   */\n      mstore\n        /* \"#utility.yul\":14512:14516   */\n      0x24\n        /* \"#utility.yul\":14509:14510   */\n      0x00\n        /* \"#utility.yul\":14502:14517   */\n      revert\n        /* \"#utility.yul\":14529:14633   */\n    tag_171:\n        /* \"#utility.yul\":14574:14581   */\n      0x00\n        /* \"#utility.yul\":14603:14627   */\n      tag_337\n        /* \"#utility.yul\":14621:14626   */\n      dup3\n        /* \"#utility.yul\":14603:14627   */\n      tag_146\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":14592:14627   */\n      swap1\n      pop\n        /* \"#utility.yul\":14529:14633   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14639:14777   */\n    tag_172:\n        /* \"#utility.yul\":14720:14752   */\n      tag_339\n        /* \"#utility.yul\":14746:14751   */\n      dup2\n        /* \"#utility.yul\":14720:14752   */\n      tag_171\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":14713:14718   */\n      dup2\n        /* \"#utility.yul\":14710:14753   */\n      eq\n        /* \"#utility.yul\":14700:14771   */\n      tag_340\n      jumpi\n        /* \"#utility.yul\":14767:14768   */\n      0x00\n        /* \"#utility.yul\":14764:14765   */\n      dup1\n        /* \"#utility.yul\":14757:14769   */\n      revert\n        /* \"#utility.yul\":14700:14771   */\n    tag_340:\n        /* \"#utility.yul\":14639:14777   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14783:14942   */\n    tag_173:\n        /* \"#utility.yul\":14848:14853   */\n      0x00\n        /* \"#utility.yul\":14879:14885   */\n      dup2\n        /* \"#utility.yul\":14873:14886   */\n      mload\n        /* \"#utility.yul\":14864:14886   */\n      swap1\n      pop\n        /* \"#utility.yul\":14895:14936   */\n      tag_342\n        /* \"#utility.yul\":14930:14935   */\n      dup2\n        /* \"#utility.yul\":14895:14936   */\n      tag_172\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":14783:14942   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14948:15627   */\n    tag_100:\n        /* \"#utility.yul\":15044:15050   */\n      0x00\n        /* \"#utility.yul\":15052:15058   */\n      dup1\n        /* \"#utility.yul\":15060:15066   */\n      0x00\n        /* \"#utility.yul\":15109:15111   */\n      0x60\n        /* \"#utility.yul\":15097:15106   */\n      dup5\n        /* \"#utility.yul\":15088:15095   */\n      dup7\n        /* \"#utility.yul\":15084:15107   */\n      sub\n        /* \"#utility.yul\":15080:15112   */\n      slt\n        /* \"#utility.yul\":15077:15196   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":15115:15194   */\n      tag_345\n      tag_126\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":15077:15196   */\n    tag_344:\n        /* \"#utility.yul\":15235:15236   */\n      0x00\n        /* \"#utility.yul\":15260:15324   */\n      tag_346\n        /* \"#utility.yul\":15316:15323   */\n      dup7\n        /* \"#utility.yul\":15307:15313   */\n      dup3\n        /* \"#utility.yul\":15296:15305   */\n      dup8\n        /* \"#utility.yul\":15292:15314   */\n      add\n        /* \"#utility.yul\":15260:15324   */\n      tag_162\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":15250:15324   */\n      swap4\n      pop\n        /* \"#utility.yul\":15206:15334   */\n      pop\n        /* \"#utility.yul\":15373:15375   */\n      0x20\n        /* \"#utility.yul\":15399:15471   */\n      tag_347\n        /* \"#utility.yul\":15463:15470   */\n      dup7\n        /* \"#utility.yul\":15454:15460   */\n      dup3\n        /* \"#utility.yul\":15443:15452   */\n      dup8\n        /* \"#utility.yul\":15439:15461   */\n      add\n        /* \"#utility.yul\":15399:15471   */\n      tag_173\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":15389:15471   */\n      swap3\n      pop\n        /* \"#utility.yul\":15344:15481   */\n      pop\n        /* \"#utility.yul\":15520:15522   */\n      0x40\n        /* \"#utility.yul\":15546:15610   */\n      tag_348\n        /* \"#utility.yul\":15602:15609   */\n      dup7\n        /* \"#utility.yul\":15593:15599   */\n      dup3\n        /* \"#utility.yul\":15582:15591   */\n      dup8\n        /* \"#utility.yul\":15578:15600   */\n      add\n        /* \"#utility.yul\":15546:15610   */\n      tag_162\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":15536:15610   */\n      swap2\n      pop\n        /* \"#utility.yul\":15491:15620   */\n      pop\n        /* \"#utility.yul\":14948:15627   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":15633:15751   */\n    tag_174:\n        /* \"#utility.yul\":15720:15744   */\n      tag_350\n        /* \"#utility.yul\":15738:15743   */\n      dup2\n        /* \"#utility.yul\":15720:15744   */\n      tag_133\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":15715:15718   */\n      dup3\n        /* \"#utility.yul\":15708:15745   */\n      mstore\n        /* \"#utility.yul\":15633:15751   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15757:16176   */\n    tag_108:\n        /* \"#utility.yul\":15896:15900   */\n      0x00\n        /* \"#utility.yul\":15934:15936   */\n      0x40\n        /* \"#utility.yul\":15923:15932   */\n      dup3\n        /* \"#utility.yul\":15919:15937   */\n      add\n        /* \"#utility.yul\":15911:15937   */\n      swap1\n      pop\n        /* \"#utility.yul\":15947:16018   */\n      tag_352\n        /* \"#utility.yul\":16015:16016   */\n      0x00\n        /* \"#utility.yul\":16004:16013   */\n      dup4\n        /* \"#utility.yul\":16000:16017   */\n      add\n        /* \"#utility.yul\":15991:15997   */\n      dup6\n        /* \"#utility.yul\":15947:16018   */\n      tag_174\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":16065:16074   */\n      dup2\n        /* \"#utility.yul\":16059:16063   */\n      dup2\n        /* \"#utility.yul\":16055:16075   */\n      sub\n        /* \"#utility.yul\":16050:16052   */\n      0x20\n        /* \"#utility.yul\":16039:16048   */\n      dup4\n        /* \"#utility.yul\":16035:16053   */\n      add\n        /* \"#utility.yul\":16028:16076   */\n      mstore\n        /* \"#utility.yul\":16093:16169   */\n      tag_353\n        /* \"#utility.yul\":16164:16168   */\n      dup2\n        /* \"#utility.yul\":16155:16161   */\n      dup5\n        /* \"#utility.yul\":16093:16169   */\n      tag_160\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":16085:16169   */\n      swap1\n      pop\n        /* \"#utility.yul\":15757:16176   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16182:16568   */\n    tag_175:\n        /* \"#utility.yul\":16286:16289   */\n      0x00\n        /* \"#utility.yul\":16314:16352   */\n      tag_355\n        /* \"#utility.yul\":16346:16351   */\n      dup3\n        /* \"#utility.yul\":16314:16352   */\n      tag_157\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":16368:16456   */\n      tag_356\n        /* \"#utility.yul\":16449:16455   */\n      dup2\n        /* \"#utility.yul\":16444:16447   */\n      dup6\n        /* \"#utility.yul\":16368:16456   */\n      tag_169\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":16361:16456   */\n      swap4\n      pop\n        /* \"#utility.yul\":16465:16530   */\n      tag_357\n        /* \"#utility.yul\":16523:16529   */\n      dup2\n        /* \"#utility.yul\":16518:16521   */\n      dup6\n        /* \"#utility.yul\":16511:16515   */\n      0x20\n        /* \"#utility.yul\":16504:16509   */\n      dup7\n        /* \"#utility.yul\":16500:16516   */\n      add\n        /* \"#utility.yul\":16465:16530   */\n      tag_159\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":16555:16561   */\n      dup1\n        /* \"#utility.yul\":16550:16553   */\n      dup5\n        /* \"#utility.yul\":16546:16562   */\n      add\n        /* \"#utility.yul\":16539:16562   */\n      swap2\n      pop\n        /* \"#utility.yul\":16290:16568   */\n      pop\n        /* \"#utility.yul\":16182:16568   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16574:16845   */\n    tag_110:\n        /* \"#utility.yul\":16704:16707   */\n      0x00\n        /* \"#utility.yul\":16726:16819   */\n      tag_359\n        /* \"#utility.yul\":16815:16818   */\n      dup3\n        /* \"#utility.yul\":16806:16812   */\n      dup5\n        /* \"#utility.yul\":16726:16819   */\n      tag_175\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":16719:16819   */\n      swap2\n      pop\n        /* \"#utility.yul\":16836:16839   */\n      dup2\n        /* \"#utility.yul\":16829:16839   */\n      swap1\n      pop\n        /* \"#utility.yul\":16574:16845   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16851:16994   */\n    tag_176:\n        /* \"#utility.yul\":16908:16913   */\n      0x00\n        /* \"#utility.yul\":16939:16945   */\n      dup2\n        /* \"#utility.yul\":16933:16946   */\n      mload\n        /* \"#utility.yul\":16924:16946   */\n      swap1\n      pop\n        /* \"#utility.yul\":16955:16988   */\n      tag_361\n        /* \"#utility.yul\":16982:16987   */\n      dup2\n        /* \"#utility.yul\":16955:16988   */\n      tag_134\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":16851:16994   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17000:17351   */\n    tag_117:\n        /* \"#utility.yul\":17070:17076   */\n      0x00\n        /* \"#utility.yul\":17119:17121   */\n      0x20\n        /* \"#utility.yul\":17107:17116   */\n      dup3\n        /* \"#utility.yul\":17098:17105   */\n      dup5\n        /* \"#utility.yul\":17094:17117   */\n      sub\n        /* \"#utility.yul\":17090:17122   */\n      slt\n        /* \"#utility.yul\":17087:17206   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":17125:17204   */\n      tag_364\n      tag_126\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":17087:17206   */\n    tag_363:\n        /* \"#utility.yul\":17245:17246   */\n      0x00\n        /* \"#utility.yul\":17270:17334   */\n      tag_365\n        /* \"#utility.yul\":17326:17333   */\n      dup5\n        /* \"#utility.yul\":17317:17323   */\n      dup3\n        /* \"#utility.yul\":17306:17315   */\n      dup6\n        /* \"#utility.yul\":17302:17324   */\n      add\n        /* \"#utility.yul\":17270:17334   */\n      tag_176\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":17260:17334   */\n      swap2\n      pop\n        /* \"#utility.yul\":17216:17344   */\n      pop\n        /* \"#utility.yul\":17000:17351   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17357:17443   */\n    tag_177:\n        /* \"#utility.yul\":17392:17399   */\n      0x00\n        /* \"#utility.yul\":17432:17436   */\n      0xff\n        /* \"#utility.yul\":17425:17430   */\n      dup3\n        /* \"#utility.yul\":17421:17437   */\n      and\n        /* \"#utility.yul\":17410:17437   */\n      swap1\n      pop\n        /* \"#utility.yul\":17357:17443   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17449:17561   */\n    tag_178:\n        /* \"#utility.yul\":17532:17554   */\n      tag_368\n        /* \"#utility.yul\":17548:17553   */\n      dup2\n        /* \"#utility.yul\":17532:17554   */\n      tag_177\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":17527:17530   */\n      dup3\n        /* \"#utility.yul\":17520:17555   */\n      mstore\n        /* \"#utility.yul\":17449:17561   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17567:18112   */\n    tag_121:\n        /* \"#utility.yul\":17740:17744   */\n      0x00\n        /* \"#utility.yul\":17778:17781   */\n      0x80\n        /* \"#utility.yul\":17767:17776   */\n      dup3\n        /* \"#utility.yul\":17763:17782   */\n      add\n        /* \"#utility.yul\":17755:17782   */\n      swap1\n      pop\n        /* \"#utility.yul\":17792:17863   */\n      tag_370\n        /* \"#utility.yul\":17860:17861   */\n      0x00\n        /* \"#utility.yul\":17849:17858   */\n      dup4\n        /* \"#utility.yul\":17845:17862   */\n      add\n        /* \"#utility.yul\":17836:17842   */\n      dup8\n        /* \"#utility.yul\":17792:17863   */\n      tag_174\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":17873:17941   */\n      tag_371\n        /* \"#utility.yul\":17937:17939   */\n      0x20\n        /* \"#utility.yul\":17926:17935   */\n      dup4\n        /* \"#utility.yul\":17922:17940   */\n      add\n        /* \"#utility.yul\":17913:17919   */\n      dup7\n        /* \"#utility.yul\":17873:17941   */\n      tag_178\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":17951:18023   */\n      tag_372\n        /* \"#utility.yul\":18019:18021   */\n      0x40\n        /* \"#utility.yul\":18008:18017   */\n      dup4\n        /* \"#utility.yul\":18004:18022   */\n      add\n        /* \"#utility.yul\":17995:18001   */\n      dup6\n        /* \"#utility.yul\":17951:18023   */\n      tag_174\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":18033:18105   */\n      tag_373\n        /* \"#utility.yul\":18101:18103   */\n      0x60\n        /* \"#utility.yul\":18090:18099   */\n      dup4\n        /* \"#utility.yul\":18086:18104   */\n      add\n        /* \"#utility.yul\":18077:18083   */\n      dup5\n        /* \"#utility.yul\":18033:18105   */\n      tag_174\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":17567:18112   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220385e575f109906ee4b0b62289ef1653221a78bab3605625b4d529f421dd503e964736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50611277806100206000396000f3fe6080604052600436106100595760003560e01c806301ffc9a7146100655780631626ba7e146100a25780638da5cb5b146100df5780639e5d4c491461010a578063affed0e01461013a578063fc0c546a1461016557610060565b3661006057005b600080fd5b34801561007157600080fd5b5061008c60048036038101906100879190610926565b610192565b604051610099919061096e565b60405180910390f35b3480156100ae57600080fd5b506100c960048036038101906100c49190610b05565b610264565b6040516100d69190610b70565b60405180910390f35b3480156100eb57600080fd5b506100f461029d565b6040516101019190610bcc565b60405180910390f35b610124600480360381019061011f9190610ca9565b6103ae565b6040516101319190610d9c565b60405180910390f35b34801561014657600080fd5b5061014f610516565b60405161015c9190610dcd565b60405180910390f35b34801561017157600080fd5b5061017a61051c565b60405161018993929190610de8565b60405180910390f35b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061025d57507f400a0398000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60008061027961027261029d565b8585610534565b9050801561029157631626ba7e60e01b915050610297565b60009150505b92915050565b6000806000803073ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156102ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103129190610e49565b92509250925046831461032b57600093505050506103ab565b8173ffffffffffffffffffffffffffffffffffffffff16636352211e826040518263ffffffff1660e01b81526004016103649190610dcd565b602060405180830381865afa158015610381573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a59190610e9c565b93505050505b90565b60606103b861029d565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610425576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041c90610f26565b60405180910390fd5b600080815461043390610f75565b91905081905550838573ffffffffffffffffffffffffffffffffffffffff167f47d99ad340f52da66535aff7e10da1ceb85a32bcbd9fa1c42314d194545e14d28585604051610483929190610fea565b60405180910390a360008573ffffffffffffffffffffffffffffffffffffffff168585856040516104b592919061103e565b60006040518083038185875af1925050503d80600081146104f2576040519150601f19603f3d011682016040523d82523d6000602084013e6104f7565b606091505b5080935081925050508061050d57815160208301fd5b50949350505050565b60005481565b60008060006105296105c3565b925092509250909192565b60008060006105438585610643565b915091506000600481111561055b5761055a611057565b5b81600481111561056e5761056d611057565b5b1480156105a657508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b806105b857506105b7868686610694565b5b925050509392505050565b600080600080606067ffffffffffffffff8111156105e4576105e36109da565b5b6040519080825280601f01601f1916602001820160405280156106165781602001600182028036833780820191505090505b5090506060604d60208301303c8080602001905181019061063791906110c4565b93509350935050909192565b60008060418351036106845760008060006020860151925060408601519150606086015160001a9050610678878285856107d8565b9450945050505061068d565b60006002915091505b9250929050565b60008060008573ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b86866040516024016106cb929190611126565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516107359190611187565b600060405180830381855afa9150503d8060008114610770576040519150601f19603f3d011682016040523d82523d6000602084013e610775565b606091505b509150915081801561078957506020815110155b80156107cd5750631626ba7e60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916818060200190518101906107cb91906111b3565b145b925050509392505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c11156108135760006003915091506108b1565b60006001878787876040516000815260200160405260405161083894939291906111fc565b6020604051602081039080840390855afa15801561085a573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108a8576000600192509250506108b1565b80600092509250505b94509492505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610903816108ce565b811461090e57600080fd5b50565b600081359050610920816108fa565b92915050565b60006020828403121561093c5761093b6108c4565b5b600061094a84828501610911565b91505092915050565b60008115159050919050565b61096881610953565b82525050565b6000602082019050610983600083018461095f565b92915050565b6000819050919050565b61099c81610989565b81146109a757600080fd5b50565b6000813590506109b981610993565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610a12826109c9565b810181811067ffffffffffffffff82111715610a3157610a306109da565b5b80604052505050565b6000610a446108ba565b9050610a508282610a09565b919050565b600067ffffffffffffffff821115610a7057610a6f6109da565b5b610a79826109c9565b9050602081019050919050565b82818337600083830152505050565b6000610aa8610aa384610a55565b610a3a565b905082815260208101848484011115610ac457610ac36109c4565b5b610acf848285610a86565b509392505050565b600082601f830112610aec57610aeb6109bf565b5b8135610afc848260208601610a95565b91505092915050565b60008060408385031215610b1c57610b1b6108c4565b5b6000610b2a858286016109aa565b925050602083013567ffffffffffffffff811115610b4b57610b4a6108c9565b5b610b5785828601610ad7565b9150509250929050565b610b6a816108ce565b82525050565b6000602082019050610b856000830184610b61565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bb682610b8b565b9050919050565b610bc681610bab565b82525050565b6000602082019050610be16000830184610bbd565b92915050565b610bf081610bab565b8114610bfb57600080fd5b50565b600081359050610c0d81610be7565b92915050565b6000819050919050565b610c2681610c13565b8114610c3157600080fd5b50565b600081359050610c4381610c1d565b92915050565b600080fd5b600080fd5b60008083601f840112610c6957610c686109bf565b5b8235905067ffffffffffffffff811115610c8657610c85610c49565b5b602083019150836001820283011115610ca257610ca1610c4e565b5b9250929050565b60008060008060608587031215610cc357610cc26108c4565b5b6000610cd187828801610bfe565b9450506020610ce287828801610c34565b935050604085013567ffffffffffffffff811115610d0357610d026108c9565b5b610d0f87828801610c53565b925092505092959194509250565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d57578082015181840152602081019050610d3c565b60008484015250505050565b6000610d6e82610d1d565b610d788185610d28565b9350610d88818560208601610d39565b610d91816109c9565b840191505092915050565b60006020820190508181036000830152610db68184610d63565b905092915050565b610dc781610c13565b82525050565b6000602082019050610de26000830184610dbe565b92915050565b6000606082019050610dfd6000830186610dbe565b610e0a6020830185610bbd565b610e176040830184610dbe565b949350505050565b600081519050610e2e81610c1d565b92915050565b600081519050610e4381610be7565b92915050565b600080600060608486031215610e6257610e616108c4565b5b6000610e7086828701610e1f565b9350506020610e8186828701610e34565b9250506040610e9286828701610e1f565b9150509250925092565b600060208284031215610eb257610eb16108c4565b5b6000610ec084828501610e34565b91505092915050565b600082825260208201905092915050565b7f4e6f7420746f6b656e206f776e65720000000000000000000000000000000000600082015250565b6000610f10600f83610ec9565b9150610f1b82610eda565b602082019050919050565b60006020820190508181036000830152610f3f81610f03565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f8082610c13565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610fb257610fb1610f46565b5b600182019050919050565b6000610fc98385610d28565b9350610fd6838584610a86565b610fdf836109c9565b840190509392505050565b60006020820190508181036000830152611005818486610fbd565b90509392505050565b600081905092915050565b6000611025838561100e565b9350611032838584610a86565b82840190509392505050565b600061104b828486611019565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600061109182610b8b565b9050919050565b6110a181611086565b81146110ac57600080fd5b50565b6000815190506110be81611098565b92915050565b6000806000606084860312156110dd576110dc6108c4565b5b60006110eb86828701610e1f565b93505060206110fc868287016110af565b925050604061110d86828701610e1f565b9150509250925092565b61112081610989565b82525050565b600060408201905061113b6000830185611117565b818103602083015261114d8184610d63565b90509392505050565b600061116182610d1d565b61116b818561100e565b935061117b818560208601610d39565b80840191505092915050565b60006111938284611156565b915081905092915050565b6000815190506111ad81610993565b92915050565b6000602082840312156111c9576111c86108c4565b5b60006111d78482850161119e565b91505092915050565b600060ff82169050919050565b6111f6816111e0565b82525050565b60006080820190506112116000830187611117565b61121e60208301866111ed565b61122b6040830185611117565b6112386060830184611117565b9594505050505056fea2646970667358221220385e575f109906ee4b0b62289ef1653221a78bab3605625b4d529f421dd503e964736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1277 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x59 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x65 JUMPI DUP1 PUSH4 0x1626BA7E EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x9E5D4C49 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x165 JUMPI PUSH2 0x60 JUMP JUMPDEST CALLDATASIZE PUSH2 0x60 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x87 SWAP2 SWAP1 PUSH2 0x926 JUMP JUMPDEST PUSH2 0x192 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x96E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0xB05 JUMP JUMPDEST PUSH2 0x264 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0xB70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF4 PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xBCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0xCA9 JUMP JUMPDEST PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x516 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x51C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x25D JUMPI POP PUSH32 0x400A039800000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x279 PUSH2 0x272 PUSH2 0x29D JUMP JUMPDEST DUP6 DUP6 PUSH2 0x534 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x291 JUMPI PUSH4 0x1626BA7E PUSH1 0xE0 SHL SWAP2 POP POP PUSH2 0x297 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC0C546A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0xE49 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP CHAINID DUP4 EQ PUSH2 0x32B JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x3AB JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x364 SWAP2 SWAP1 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x381 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0xE9C JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3B8 PUSH2 0x29D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x425 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41C SWAP1 PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP2 SLOAD PUSH2 0x433 SWAP1 PUSH2 0xF75 JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x47D99AD340F52DA66535AFF7E10DA1CEB85A32BCBD9FA1C42314D194545E14D2 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x483 SWAP3 SWAP2 SWAP1 PUSH2 0xFEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x4B5 SWAP3 SWAP2 SWAP1 PUSH2 0x103E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4F7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 SWAP4 POP DUP2 SWAP3 POP POP POP DUP1 PUSH2 0x50D JUMPI DUP2 MLOAD PUSH1 0x20 DUP4 ADD REVERT JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x529 PUSH2 0x5C3 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x543 DUP6 DUP6 PUSH2 0x643 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x55B JUMPI PUSH2 0x55A PUSH2 0x1057 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x56E JUMPI PUSH2 0x56D PUSH2 0x1057 JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0x5A6 JUMPI POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x5B8 JUMPI POP PUSH2 0x5B7 DUP7 DUP7 DUP7 PUSH2 0x694 JUMP JUMPDEST JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5E4 JUMPI PUSH2 0x5E3 PUSH2 0x9DA JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x616 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x60 PUSH1 0x4D PUSH1 0x20 DUP4 ADD ADDRESS EXTCODECOPY DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x637 SWAP2 SWAP1 PUSH2 0x10C4 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x41 DUP4 MLOAD SUB PUSH2 0x684 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x678 DUP8 DUP3 DUP6 DUP6 PUSH2 0x7D8 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x68D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1626BA7E PUSH1 0xE0 SHL DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x6CB SWAP3 SWAP2 SWAP1 PUSH2 0x1126 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x735 SWAP2 SWAP1 PUSH2 0x1187 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x770 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x775 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x789 JUMPI POP PUSH1 0x20 DUP2 MLOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x7CD JUMPI POP PUSH4 0x1626BA7E PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x7CB SWAP2 SWAP1 PUSH2 0x11B3 JUMP JUMPDEST EQ JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x813 JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x8B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x838 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11FC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x85A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8A8 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x8B1 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x903 DUP2 PUSH2 0x8CE JUMP JUMPDEST DUP2 EQ PUSH2 0x90E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x920 DUP2 PUSH2 0x8FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x93C JUMPI PUSH2 0x93B PUSH2 0x8C4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x94A DUP5 DUP3 DUP6 ADD PUSH2 0x911 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x968 DUP2 PUSH2 0x953 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x983 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x95F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x99C DUP2 PUSH2 0x989 JUMP JUMPDEST DUP2 EQ PUSH2 0x9A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9B9 DUP2 PUSH2 0x993 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xA12 DUP3 PUSH2 0x9C9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xA31 JUMPI PUSH2 0xA30 PUSH2 0x9DA JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA44 PUSH2 0x8BA JUMP JUMPDEST SWAP1 POP PUSH2 0xA50 DUP3 DUP3 PUSH2 0xA09 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA70 JUMPI PUSH2 0xA6F PUSH2 0x9DA JUMP JUMPDEST JUMPDEST PUSH2 0xA79 DUP3 PUSH2 0x9C9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA8 PUSH2 0xAA3 DUP5 PUSH2 0xA55 JUMP JUMPDEST PUSH2 0xA3A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xAC4 JUMPI PUSH2 0xAC3 PUSH2 0x9C4 JUMP JUMPDEST JUMPDEST PUSH2 0xACF DUP5 DUP3 DUP6 PUSH2 0xA86 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xAEC JUMPI PUSH2 0xAEB PUSH2 0x9BF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xAFC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xA95 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB1C JUMPI PUSH2 0xB1B PUSH2 0x8C4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB2A DUP6 DUP3 DUP7 ADD PUSH2 0x9AA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB4B JUMPI PUSH2 0xB4A PUSH2 0x8C9 JUMP JUMPDEST JUMPDEST PUSH2 0xB57 DUP6 DUP3 DUP7 ADD PUSH2 0xAD7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6A DUP2 PUSH2 0x8CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB85 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB6 DUP3 PUSH2 0xB8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBC6 DUP2 PUSH2 0xBAB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBE1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBBD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBF0 DUP2 PUSH2 0xBAB JUMP JUMPDEST DUP2 EQ PUSH2 0xBFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC0D DUP2 PUSH2 0xBE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC26 DUP2 PUSH2 0xC13 JUMP JUMPDEST DUP2 EQ PUSH2 0xC31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC43 DUP2 PUSH2 0xC1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xC69 JUMPI PUSH2 0xC68 PUSH2 0x9BF JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC86 JUMPI PUSH2 0xC85 PUSH2 0xC49 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xCA2 JUMPI PUSH2 0xCA1 PUSH2 0xC4E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xCC3 JUMPI PUSH2 0xCC2 PUSH2 0x8C4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCD1 DUP8 DUP3 DUP9 ADD PUSH2 0xBFE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xCE2 DUP8 DUP3 DUP9 ADD PUSH2 0xC34 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD03 JUMPI PUSH2 0xD02 PUSH2 0x8C9 JUMP JUMPDEST JUMPDEST PUSH2 0xD0F DUP8 DUP3 DUP9 ADD PUSH2 0xC53 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD57 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD3C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD6E DUP3 PUSH2 0xD1D JUMP JUMPDEST PUSH2 0xD78 DUP2 DUP6 PUSH2 0xD28 JUMP JUMPDEST SWAP4 POP PUSH2 0xD88 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD39 JUMP JUMPDEST PUSH2 0xD91 DUP2 PUSH2 0x9C9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDB6 DUP2 DUP5 PUSH2 0xD63 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDC7 DUP2 PUSH2 0xC13 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDE2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDBE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xDFD PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xDBE JUMP JUMPDEST PUSH2 0xE0A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBBD JUMP JUMPDEST PUSH2 0xE17 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDBE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xE2E DUP2 PUSH2 0xC1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xE43 DUP2 PUSH2 0xBE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE62 JUMPI PUSH2 0xE61 PUSH2 0x8C4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE70 DUP7 DUP3 DUP8 ADD PUSH2 0xE1F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xE81 DUP7 DUP3 DUP8 ADD PUSH2 0xE34 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xE92 DUP7 DUP3 DUP8 ADD PUSH2 0xE1F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEB2 JUMPI PUSH2 0xEB1 PUSH2 0x8C4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEC0 DUP5 DUP3 DUP6 ADD PUSH2 0xE34 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420746F6B656E206F776E65720000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF10 PUSH1 0xF DUP4 PUSH2 0xEC9 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1B DUP3 PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3F DUP2 PUSH2 0xF03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF80 DUP3 PUSH2 0xC13 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xFB2 JUMPI PUSH2 0xFB1 PUSH2 0xF46 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC9 DUP4 DUP6 PUSH2 0xD28 JUMP JUMPDEST SWAP4 POP PUSH2 0xFD6 DUP4 DUP6 DUP5 PUSH2 0xA86 JUMP JUMPDEST PUSH2 0xFDF DUP4 PUSH2 0x9C9 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1005 DUP2 DUP5 DUP7 PUSH2 0xFBD JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1025 DUP4 DUP6 PUSH2 0x100E JUMP JUMPDEST SWAP4 POP PUSH2 0x1032 DUP4 DUP6 DUP5 PUSH2 0xA86 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104B DUP3 DUP5 DUP7 PUSH2 0x1019 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1091 DUP3 PUSH2 0xB8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10A1 DUP2 PUSH2 0x1086 JUMP JUMPDEST DUP2 EQ PUSH2 0x10AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x10BE DUP2 PUSH2 0x1098 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10DD JUMPI PUSH2 0x10DC PUSH2 0x8C4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10EB DUP7 DUP3 DUP8 ADD PUSH2 0xE1F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x10FC DUP7 DUP3 DUP8 ADD PUSH2 0x10AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x110D DUP7 DUP3 DUP8 ADD PUSH2 0xE1F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1120 DUP2 PUSH2 0x989 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x113B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1117 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x114D DUP2 DUP5 PUSH2 0xD63 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1161 DUP3 PUSH2 0xD1D JUMP JUMPDEST PUSH2 0x116B DUP2 DUP6 PUSH2 0x100E JUMP JUMPDEST SWAP4 POP PUSH2 0x117B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD39 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1193 DUP3 DUP5 PUSH2 0x1156 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x11AD DUP2 PUSH2 0x993 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11C9 JUMPI PUSH2 0x11C8 PUSH2 0x8C4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11D7 DUP5 DUP3 DUP6 ADD PUSH2 0x119E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11F6 DUP2 PUSH2 0x11E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1211 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1117 JUMP JUMPDEST PUSH2 0x121E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x11ED JUMP JUMPDEST PUSH2 0x122B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1117 JUMP JUMPDEST PUSH2 0x1238 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1117 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0x5E JUMPI 0x5F LT SWAP10 MOD 0xEE 0x4B SIGNEXTEND PUSH3 0x289EF1 PUSH6 0x3221A78BAB36 SDIV PUSH3 0x5B4D52 SWAP16 TIMESTAMP SAR 0xD5 SUB 0xE9 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "642:1689:16:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_2184": {
									"entryPoint": null,
									"id": 2184,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@executeCall_2233": {
									"entryPoint": 942,
									"id": 2233,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@isValidERC1271SignatureNow_1152": {
									"entryPoint": 1684,
									"id": 1152,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isValidSignatureNow_1100": {
									"entryPoint": 1332,
									"id": 1100,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isValidSignature_2332": {
									"entryPoint": 612,
									"id": 2332,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@nonce_2180": {
									"entryPoint": 1302,
									"id": 2180,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_2280": {
									"entryPoint": 669,
									"id": 2280,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@supportsInterface_2303": {
									"entryPoint": 402,
									"id": 2303,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@token_2247": {
									"entryPoint": 1308,
									"id": 2247,
									"parameterSlots": 0,
									"returnSlots": 3
								},
								"@token_2459": {
									"entryPoint": 1475,
									"id": 2459,
									"parameterSlots": 0,
									"returnSlots": 3
								},
								"@tryRecover_788": {
									"entryPoint": 1603,
									"id": 788,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@tryRecover_956": {
									"entryPoint": 2008,
									"id": 956,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 2709,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3070,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 3636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable_fromMemory": {
									"entryPoint": 4271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 2474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32_fromMemory": {
									"entryPoint": 4510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 2321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 3155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 2775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3124,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 3740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr": {
									"entryPoint": 3241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 4531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_bytes_memory_ptr": {
									"entryPoint": 2821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address_payablet_uint256_fromMemory": {
									"entryPoint": 4292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_addresst_uint256_fromMemory": {
									"entryPoint": 3657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 4375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 2913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 4029,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4121,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 3427,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4158,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3020,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4390,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": 4604,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 2928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4074,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 3484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3560,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 2234,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 2645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 3357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 3368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 4230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 2441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 2254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 2694,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3385,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 2569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 3957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3910,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 4183,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2522,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 3145,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 2495,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 3150,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 2500,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2249,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2244,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9": {
									"entryPoint": 3802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 4248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 2451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 2298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3101,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:18115:21",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:21",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:21"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:21"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:21",
														"type": ""
													}
												],
												"src": "7:75:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:21"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:21"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:21",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:21",
														"type": ""
													}
												],
												"src": "334:149:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:21"
															},
															"nodeType": "YulIf",
															"src": "541:62:21"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:21",
														"type": ""
													}
												],
												"src": "489:120:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:21"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:21",
														"type": ""
													}
												],
												"src": "615:137:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:21"
															},
															"nodeType": "YulIf",
															"src": "833:119:21"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:21",
														"type": ""
													}
												],
												"src": "758:327:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:21"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:21",
														"type": ""
													}
												],
												"src": "1091:90:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:21"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:21",
														"type": ""
													}
												],
												"src": "1187:109:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:21",
														"type": ""
													}
												],
												"src": "1302:210:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1563:32:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1573:16:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1584:5:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1545:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1555:7:21",
														"type": ""
													}
												],
												"src": "1518:77:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1644:79:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1701:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1703:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1703:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1667:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1692:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "1674:17:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1674:24:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1664:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1664:35:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1657:43:21"
															},
															"nodeType": "YulIf",
															"src": "1654:63:21"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1637:5:21",
														"type": ""
													}
												],
												"src": "1601:122:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1781:87:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1791:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1813:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1800:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1791:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1856:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "1829:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1829:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1829:33:21"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1759:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1767:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1775:5:21",
														"type": ""
													}
												],
												"src": "1729:139:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1963:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1980:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1983:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1973:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1973:12:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1973:12:21"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "1874:117:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2086:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2106:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2096:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2096:12:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2096:12:21"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "1997:117:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2168:54:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2178:38:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2196:5:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2203:2:21",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2192:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2192:14:21"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2212:2:21",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2208:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2208:7:21"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2188:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2188:28:21"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2178:6:21"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2151:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2161:6:21",
														"type": ""
													}
												],
												"src": "2120:102:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2256:152:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2273:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2276:77:21",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2266:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2266:88:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2266:88:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2370:1:21",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2373:4:21",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2363:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2363:15:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2363:15:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2394:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2397:4:21",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2387:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2387:15:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2387:15:21"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2228:180:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2457:238:21",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2467:58:21",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2489:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "2519:4:21"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2497:21:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2497:27:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2485:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2485:40:21"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2471:10:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2636:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2638:16:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2638:18:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2638:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2579:10:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2591:18:21",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2576:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2576:34:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2615:10:21"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2627:6:21"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2612:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2612:22:21"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2573:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2573:62:21"
															},
															"nodeType": "YulIf",
															"src": "2570:88:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2674:2:21",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2678:10:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2667:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2667:22:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2667:22:21"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2443:6:21",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2451:4:21",
														"type": ""
													}
												],
												"src": "2414:281:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2742:88:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2752:30:21",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "2762:18:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2762:20:21"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2752:6:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2811:6:21"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2819:4:21"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2791:19:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2791:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2791:33:21"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2726:4:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2735:6:21",
														"type": ""
													}
												],
												"src": "2701:129:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2902:241:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3007:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3009:16:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3009:18:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3009:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2979:6:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2987:18:21",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2976:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2976:30:21"
															},
															"nodeType": "YulIf",
															"src": "2973:56:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3039:37:21",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3069:6:21"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "3047:21:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3047:29:21"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3039:4:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3113:23:21",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "3125:4:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3131:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3121:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3121:15:21"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3113:4:21"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2886:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2897:4:21",
														"type": ""
													}
												],
												"src": "2836:307:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3213:82:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3236:3:21"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3241:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3246:6:21"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3223:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3223:30:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3223:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3273:3:21"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3278:6:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3269:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3269:16:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3287:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3262:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3262:27:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3262:27:21"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3195:3:21",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3200:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3205:6:21",
														"type": ""
													}
												],
												"src": "3149:146:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3384:340:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3394:74:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3460:6:21"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3419:40:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3419:48:21"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3403:15:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3403:65:21"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3394:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "3484:5:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3491:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3477:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3477:21:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3477:21:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3507:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "3522:5:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3529:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3518:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3518:16:21"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3511:3:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3572:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "3574:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3574:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3574:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3553:3:21"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3558:6:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3549:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3549:16:21"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3567:3:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3546:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3546:25:21"
															},
															"nodeType": "YulIf",
															"src": "3543:112:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3701:3:21"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3706:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3711:6:21"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "3664:36:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3664:54:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3664:54:21"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3357:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3362:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3370:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3378:5:21",
														"type": ""
													}
												],
												"src": "3301:423:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3804:277:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3853:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "3855:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3855:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3855:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3832:6:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3840:4:21",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3828:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3828:17:21"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3847:3:21"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3824:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3824:27:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3817:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3817:35:21"
															},
															"nodeType": "YulIf",
															"src": "3814:122:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3945:34:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3972:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3959:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3959:20:21"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3949:6:21",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3988:87:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4048:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4056:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4044:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4044:17:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4063:6:21"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4071:3:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3997:46:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3997:78:21"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3988:5:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3782:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3790:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3798:5:21",
														"type": ""
													}
												],
												"src": "3743:338:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4179:560:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4225:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4227:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4227:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4227:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4200:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4209:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4196:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4196:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4221:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4192:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4192:32:21"
															},
															"nodeType": "YulIf",
															"src": "4189:119:21"
														},
														{
															"nodeType": "YulBlock",
															"src": "4318:117:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4333:15:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4347:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4337:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4362:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4397:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4408:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4393:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4393:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4417:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "4372:20:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4372:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4362:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4445:287:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4460:46:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4491:9:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4502:2:21",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4487:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4487:18:21"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4474:12:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4474:32:21"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4464:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4553:83:21",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4555:77:21"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4555:79:21"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4555:79:21"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4525:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4533:18:21",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4522:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4522:30:21"
																	},
																	"nodeType": "YulIf",
																	"src": "4519:117:21"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4650:72:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4694:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4705:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4690:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4690:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4714:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4660:29:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4660:62:21"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4650:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4141:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4152:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4164:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4172:6:21",
														"type": ""
													}
												],
												"src": "4087:652:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4808:52:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4825:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4847:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "4830:16:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4830:23:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4818:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4818:36:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4818:36:21"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4796:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4803:3:21",
														"type": ""
													}
												],
												"src": "4745:115:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4962:122:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4972:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4984:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4995:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4980:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4980:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4972:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5050:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5063:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5074:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5059:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5059:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5008:41:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5008:69:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5008:69:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4934:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4946:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4957:4:21",
														"type": ""
													}
												],
												"src": "4866:218:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5135:81:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5145:65:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5160:5:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5167:42:21",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5156:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5156:54:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5145:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5117:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5127:7:21",
														"type": ""
													}
												],
												"src": "5090:126:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5267:51:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5277:35:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5306:5:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5288:17:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5288:24:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5277:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5249:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5259:7:21",
														"type": ""
													}
												],
												"src": "5222:96:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5389:53:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5406:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5429:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5411:17:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5411:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5399:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5399:37:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5399:37:21"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5377:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5384:3:21",
														"type": ""
													}
												],
												"src": "5324:118:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5546:124:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5556:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5568:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5579:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5564:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5564:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5556:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5636:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5649:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5660:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5645:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5645:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5592:43:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5592:71:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5592:71:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5518:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5530:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5541:4:21",
														"type": ""
													}
												],
												"src": "5448:222:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5719:79:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5776:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5785:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5788:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5778:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5778:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5778:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5742:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5767:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "5749:17:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5749:24:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5739:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5739:35:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5732:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5732:43:21"
															},
															"nodeType": "YulIf",
															"src": "5729:63:21"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5712:5:21",
														"type": ""
													}
												],
												"src": "5676:122:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5856:87:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5866:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5888:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5875:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5875:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5866:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5931:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "5904:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5904:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5904:33:21"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5834:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5842:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5850:5:21",
														"type": ""
													}
												],
												"src": "5804:139:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5994:32:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6004:16:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6015:5:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6004:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5976:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5986:7:21",
														"type": ""
													}
												],
												"src": "5949:77:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6075:79:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6132:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6141:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6144:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6134:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6134:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6134:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6098:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6123:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "6105:17:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6105:24:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6095:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6095:35:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6088:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6088:43:21"
															},
															"nodeType": "YulIf",
															"src": "6085:63:21"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6068:5:21",
														"type": ""
													}
												],
												"src": "6032:122:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6212:87:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6222:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6244:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6231:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6231:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6222:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6287:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6260:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6260:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6260:33:21"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6190:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6198:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6206:5:21",
														"type": ""
													}
												],
												"src": "6160:139:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6394:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6411:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6414:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6404:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6404:12:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6404:12:21"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "6305:117:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6517:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6534:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6537:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6527:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6527:12:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6527:12:21"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "6428:117:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6638:478:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6687:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "6689:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6689:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6689:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6666:6:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6674:4:21",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6662:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6662:17:21"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "6681:3:21"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6658:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6658:27:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6651:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6651:35:21"
															},
															"nodeType": "YulIf",
															"src": "6648:122:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6779:30:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6802:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6789:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6789:20:21"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6779:6:21"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6852:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "6854:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6854:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6854:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6824:6:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6832:18:21",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6821:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6821:30:21"
															},
															"nodeType": "YulIf",
															"src": "6818:117:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6944:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6960:6:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6968:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6956:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6956:17:21"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "6944:8:21"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7027:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "7029:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7029:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7029:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "6992:8:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "7006:6:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7014:4:21",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "7002:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7002:17:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6988:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6988:32:21"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7022:3:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6985:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6985:41:21"
															},
															"nodeType": "YulIf",
															"src": "6982:128:21"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6605:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6613:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "6621:8:21",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6631:6:21",
														"type": ""
													}
												],
												"src": "6564:552:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7241:698:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7287:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7289:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7289:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7289:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7262:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7271:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7258:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7258:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7283:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7254:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7254:32:21"
															},
															"nodeType": "YulIf",
															"src": "7251:119:21"
														},
														{
															"nodeType": "YulBlock",
															"src": "7380:117:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7395:15:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7409:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7399:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7424:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7459:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7470:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7455:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7455:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7479:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7434:20:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7434:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7424:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7507:118:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7522:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7536:2:21",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7526:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7552:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7587:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7598:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7583:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7583:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7607:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7562:20:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7562:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7552:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7635:297:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7650:46:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7681:9:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7692:2:21",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7677:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7677:18:21"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7664:12:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7664:32:21"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7654:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7743:83:21",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "7745:77:21"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7745:79:21"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7745:79:21"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7715:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7723:18:21",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7712:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7712:30:21"
																	},
																	"nodeType": "YulIf",
																	"src": "7709:117:21"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7840:82:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7894:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7905:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7890:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7890:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7914:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7858:31:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7858:64:21"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "7840:6:21"
																		},
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "7848:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7187:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7198:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7210:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7218:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7226:6:21",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7234:6:21",
														"type": ""
													}
												],
												"src": "7122:817:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8003:40:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8014:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8030:5:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8024:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8024:12:21"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8014:6:21"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7986:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7996:6:21",
														"type": ""
													}
												],
												"src": "7945:98:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8144:73:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8161:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8166:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8154:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8154:19:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8154:19:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8182:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8201:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8206:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8197:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8197:14:21"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "8182:11:21"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8116:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8121:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "8132:11:21",
														"type": ""
													}
												],
												"src": "8049:168:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8285:184:21",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8295:10:21",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8304:1:21",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "8299:1:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8364:63:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "8389:3:21"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "8394:1:21"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8385:3:21"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8385:11:21"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "8408:3:21"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "8413:1:21"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8404:3:21"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8404:11:21"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "8398:5:21"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8398:18:21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8378:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8378:39:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8378:39:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8325:1:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8328:6:21"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8322:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8322:13:21"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8336:19:21",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8338:15:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "8347:1:21"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8350:2:21",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8343:3:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8343:10:21"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "8338:1:21"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8318:3:21",
																"statements": []
															},
															"src": "8314:113:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8447:3:21"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8452:6:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8443:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8443:16:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8461:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8436:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8436:27:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8436:27:21"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8267:3:21",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8272:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8277:6:21",
														"type": ""
													}
												],
												"src": "8223:246:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8565:283:21",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8575:52:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8621:5:21"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8589:31:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8589:38:21"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8579:6:21",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8636:77:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8701:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8706:6:21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8643:57:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8643:70:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8636:3:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8761:5:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8768:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8757:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8757:16:21"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8775:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8780:6:21"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8722:34:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8722:65:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8722:65:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8796:46:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8807:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8834:6:21"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "8812:21:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8812:29:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8803:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8803:39:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8796:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8546:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8553:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8561:3:21",
														"type": ""
													}
												],
												"src": "8475:373:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8970:193:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8980:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8992:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9003:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8988:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8988:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8980:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9027:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9038:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9023:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9023:17:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9046:4:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9052:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9042:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9042:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9016:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9016:47:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9016:47:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9072:84:21",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9142:6:21"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9151:4:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9080:61:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9080:76:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9072:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8942:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8954:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8965:4:21",
														"type": ""
													}
												],
												"src": "8854:309:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9234:53:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9251:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9274:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9256:17:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9256:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9244:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9244:37:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9244:37:21"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9222:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9229:3:21",
														"type": ""
													}
												],
												"src": "9169:118:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9391:124:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9401:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9413:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9424:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9409:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9409:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9401:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9481:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9494:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9505:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9490:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9490:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9437:43:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9437:71:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9437:71:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9363:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9375:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9386:4:21",
														"type": ""
													}
												],
												"src": "9293:222:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9675:288:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9685:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9697:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9708:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9693:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9693:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9685:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9765:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9778:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9789:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9774:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9774:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9721:43:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9721:71:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9721:71:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9846:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9859:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9870:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9855:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9855:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9802:43:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9802:72:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9802:72:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9928:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9941:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9952:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9937:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9937:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9884:43:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9884:72:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9884:72:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9631:9:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9643:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9651:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9659:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9670:4:21",
														"type": ""
													}
												],
												"src": "9521:442:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10032:80:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10042:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10057:6:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10051:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10051:13:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "10042:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10100:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10073:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10073:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10073:33:21"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10010:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10018:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10026:5:21",
														"type": ""
													}
												],
												"src": "9969:143:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10181:80:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10191:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10206:6:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10200:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10200:13:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "10191:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10249:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "10222:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10222:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10222:33:21"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10159:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10167:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10175:5:21",
														"type": ""
													}
												],
												"src": "10118:143:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10378:552:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10424:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10426:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10426:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10426:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10399:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10408:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10395:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10395:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10420:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10391:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10391:32:21"
															},
															"nodeType": "YulIf",
															"src": "10388:119:21"
														},
														{
															"nodeType": "YulBlock",
															"src": "10517:128:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10532:15:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10546:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10536:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10561:74:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10607:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10618:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10603:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10603:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10627:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "10571:31:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10571:64:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10561:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10655:129:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10670:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10684:2:21",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10674:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10700:74:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10746:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10757:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10742:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10742:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10766:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "10710:31:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10710:64:21"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10700:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10794:129:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10809:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10823:2:21",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10813:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10839:74:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10885:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10896:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10881:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10881:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10905:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "10849:31:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10849:64:21"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "10839:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10332:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10343:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10355:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10363:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10371:6:21",
														"type": ""
													}
												],
												"src": "10267:663:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11013:274:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11059:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11061:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11061:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11061:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11034:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11043:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11030:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11030:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11055:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11026:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11026:32:21"
															},
															"nodeType": "YulIf",
															"src": "11023:119:21"
														},
														{
															"nodeType": "YulBlock",
															"src": "11152:128:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11167:15:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11181:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11171:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11196:74:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11242:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11253:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11238:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11238:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11262:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "11206:31:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11206:64:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11196:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10983:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10994:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11006:6:21",
														"type": ""
													}
												],
												"src": "10936:351:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11389:73:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11406:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11411:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11399:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11399:19:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11399:19:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11427:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11446:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11451:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11442:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11442:14:21"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11427:11:21"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11361:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11366:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11377:11:21",
														"type": ""
													}
												],
												"src": "11293:169:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11574:59:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11596:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11604:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11592:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11592:14:21"
																	},
																	{
																		"hexValue": "4e6f7420746f6b656e206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11608:17:21",
																		"type": "",
																		"value": "Not token owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11585:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11585:41:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11585:41:21"
														}
													]
												},
												"name": "store_literal_in_memory_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11566:6:21",
														"type": ""
													}
												],
												"src": "11468:165:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11785:220:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11795:74:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11861:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11866:2:21",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11802:58:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11802:67:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11795:3:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11967:3:21"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9",
																	"nodeType": "YulIdentifier",
																	"src": "11878:88:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11878:93:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11878:93:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11980:19:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11991:3:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11996:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11987:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11987:12:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11980:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11773:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11781:3:21",
														"type": ""
													}
												],
												"src": "11639:366:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12182:248:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12192:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12204:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12215:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12200:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12200:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12192:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12239:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12250:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12235:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12235:17:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12258:4:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12264:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12254:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12254:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12228:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12228:47:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12228:47:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12284:139:21",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12418:4:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12292:124:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12292:131:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12284:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12162:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12177:4:21",
														"type": ""
													}
												],
												"src": "12011:419:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12464:152:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12481:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12484:77:21",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12474:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12474:88:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12474:88:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12578:1:21",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12581:4:21",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12571:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12571:15:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12571:15:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12602:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12605:4:21",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12595:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12595:15:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12595:15:21"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12436:180:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12665:190:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12675:33:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12702:5:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12684:17:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12684:24:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "12675:5:21"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12798:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12800:16:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12800:18:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12800:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12723:5:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12730:66:21",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12720:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12720:77:21"
															},
															"nodeType": "YulIf",
															"src": "12717:103:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12829:20:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12840:5:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12847:1:21",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12836:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12836:13:21"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "12829:3:21"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12651:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "12661:3:21",
														"type": ""
													}
												],
												"src": "12622:233:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12983:214:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12993:77:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13058:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13063:6:21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13000:57:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13000:70:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12993:3:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "13117:5:21"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13124:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13129:6:21"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "13080:36:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13080:56:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13080:56:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13145:46:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13156:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "13183:6:21"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "13161:21:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13161:29:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13152:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13152:39:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13145:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "12956:5:21",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12963:6:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12971:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12979:3:21",
														"type": ""
													}
												],
												"src": "12883:314:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13329:203:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13339:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13351:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13362:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13347:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13347:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13339:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13386:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13397:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13382:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13382:17:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13405:4:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13411:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13401:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13401:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13375:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13375:47:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13375:47:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13431:94:21",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13503:6:21"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13511:6:21"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13520:4:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13439:63:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13439:86:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13431:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13293:9:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13305:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13313:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13324:4:21",
														"type": ""
													}
												],
												"src": "13203:329:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13651:34:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13661:18:21",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "13676:3:21"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13661:11:21"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13623:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13628:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13639:11:21",
														"type": ""
													}
												],
												"src": "13538:147:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13831:209:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13841:95:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13924:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13929:6:21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13848:75:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13848:88:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13841:3:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "13983:5:21"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13990:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13995:6:21"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "13946:36:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13946:56:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13946:56:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14011:23:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14022:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14027:6:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14018:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14018:16:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14011:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "13804:5:21",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13811:6:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13819:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13827:3:21",
														"type": ""
													}
												],
												"src": "13713:327:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14190:147:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14201:110:21",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14290:6:21"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14298:6:21"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14307:3:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14208:81:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14208:103:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14201:3:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14321:10:21",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "14328:3:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14321:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14161:3:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14167:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14175:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14186:3:21",
														"type": ""
													}
												],
												"src": "14046:291:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14371:152:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14388:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14391:77:21",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14381:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14381:88:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14381:88:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14485:1:21",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14488:4:21",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14478:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14478:15:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14478:15:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14509:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14512:4:21",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14502:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14502:15:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14502:15:21"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "14343:180:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14582:51:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14592:35:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14621:5:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "14603:17:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14603:24:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14592:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14564:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14574:7:21",
														"type": ""
													}
												],
												"src": "14529:104:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14690:87:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14755:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14764:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14767:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14757:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14757:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14757:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14713:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14746:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "14720:25:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14720:32:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14710:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14710:43:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14703:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14703:51:21"
															},
															"nodeType": "YulIf",
															"src": "14700:71:21"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14683:5:21",
														"type": ""
													}
												],
												"src": "14639:138:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14854:88:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14864:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14879:6:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14873:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14873:13:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "14864:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14930:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "14895:34:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14895:41:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14895:41:21"
														}
													]
												},
												"name": "abi_decode_t_address_payable_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "14832:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14840:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14848:5:21",
														"type": ""
													}
												],
												"src": "14783:159:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15067:560:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15113:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "15115:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15115:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15115:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15088:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15097:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15084:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15084:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15109:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15080:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15080:32:21"
															},
															"nodeType": "YulIf",
															"src": "15077:119:21"
														},
														{
															"nodeType": "YulBlock",
															"src": "15206:128:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15221:15:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15235:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15225:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15250:74:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15296:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15307:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15292:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15292:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15316:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "15260:31:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15260:64:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "15250:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "15344:137:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15359:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15373:2:21",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15363:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15389:82:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15443:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15454:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15439:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15439:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15463:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "15399:39:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15399:72:21"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "15389:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "15491:129:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15506:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15520:2:21",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15510:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15536:74:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15582:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15593:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15578:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15578:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15602:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "15546:31:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15546:64:21"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "15536:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address_payablet_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15021:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15032:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15044:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15052:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15060:6:21",
														"type": ""
													}
												],
												"src": "14948:679:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15698:53:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15715:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15738:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "15720:17:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15720:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15708:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15708:37:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15708:37:21"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15686:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15693:3:21",
														"type": ""
													}
												],
												"src": "15633:118:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15901:275:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15911:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15923:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15934:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15919:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15919:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15911:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15991:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16004:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16015:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16000:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16000:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15947:43:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15947:71:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15947:71:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16039:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16050:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16035:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16035:18:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16059:4:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16065:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16055:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16055:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16028:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16028:48:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16028:48:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16085:84:21",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16155:6:21"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16164:4:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16093:61:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16093:76:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16085:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15865:9:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15877:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15885:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15896:4:21",
														"type": ""
													}
												],
												"src": "15757:419:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16290:278:21",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16300:52:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16346:5:21"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "16314:31:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16314:38:21"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16304:6:21",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16361:95:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16444:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16449:6:21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16368:75:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16368:88:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16361:3:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16504:5:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16511:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16500:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16500:16:21"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16518:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16523:6:21"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "16465:34:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16465:65:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16465:65:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16539:23:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16550:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16555:6:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16546:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16546:16:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16539:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16271:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16278:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16286:3:21",
														"type": ""
													}
												],
												"src": "16182:386:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16708:137:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16719:100:21",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16806:6:21"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16815:3:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16726:79:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16726:93:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16719:3:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16829:10:21",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "16836:3:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16829:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16687:3:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16693:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16704:3:21",
														"type": ""
													}
												],
												"src": "16574:271:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16914:80:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16924:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "16939:6:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16933:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16933:13:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "16924:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16982:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "16955:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16955:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16955:33:21"
														}
													]
												},
												"name": "abi_decode_t_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "16892:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16900:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16908:5:21",
														"type": ""
													}
												],
												"src": "16851:143:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17077:274:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17123:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "17125:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17125:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17125:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17098:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17107:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17094:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17094:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17119:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "17090:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17090:32:21"
															},
															"nodeType": "YulIf",
															"src": "17087:119:21"
														},
														{
															"nodeType": "YulBlock",
															"src": "17216:128:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17231:15:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17245:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17235:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "17260:74:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17306:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17317:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17302:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17302:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17326:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "17270:31:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17270:64:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "17260:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17047:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "17058:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17070:6:21",
														"type": ""
													}
												],
												"src": "17000:351:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17400:43:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17410:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17425:5:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17432:4:21",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "17421:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17421:16:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "17410:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17382:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "17392:7:21",
														"type": ""
													}
												],
												"src": "17357:86:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17510:51:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17527:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17548:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "17532:15:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17532:22:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17520:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17520:35:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17520:35:21"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17498:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17505:3:21",
														"type": ""
													}
												],
												"src": "17449:112:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17745:367:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17755:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17767:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17778:3:21",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17763:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17763:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17755:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17836:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17849:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17860:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17845:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17845:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17792:43:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17792:71:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17792:71:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17913:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17926:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17937:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17922:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17922:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17873:39:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17873:68:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17873:68:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "17995:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18008:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18019:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18004:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18004:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17951:43:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17951:72:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17951:72:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "18077:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18090:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18101:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18086:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18086:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18033:43:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18033:72:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18033:72:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17693:9:21",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "17705:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "17713:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17721:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17729:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17740:4:21",
														"type": ""
													}
												],
												"src": "17567:545:21"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not token owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value0, value1,  tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address_payablet_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n",
									"id": 21,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100595760003560e01c806301ffc9a7146100655780631626ba7e146100a25780638da5cb5b146100df5780639e5d4c491461010a578063affed0e01461013a578063fc0c546a1461016557610060565b3661006057005b600080fd5b34801561007157600080fd5b5061008c60048036038101906100879190610926565b610192565b604051610099919061096e565b60405180910390f35b3480156100ae57600080fd5b506100c960048036038101906100c49190610b05565b610264565b6040516100d69190610b70565b60405180910390f35b3480156100eb57600080fd5b506100f461029d565b6040516101019190610bcc565b60405180910390f35b610124600480360381019061011f9190610ca9565b6103ae565b6040516101319190610d9c565b60405180910390f35b34801561014657600080fd5b5061014f610516565b60405161015c9190610dcd565b60405180910390f35b34801561017157600080fd5b5061017a61051c565b60405161018993929190610de8565b60405180910390f35b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061025d57507f400a0398000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60008061027961027261029d565b8585610534565b9050801561029157631626ba7e60e01b915050610297565b60009150505b92915050565b6000806000803073ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156102ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103129190610e49565b92509250925046831461032b57600093505050506103ab565b8173ffffffffffffffffffffffffffffffffffffffff16636352211e826040518263ffffffff1660e01b81526004016103649190610dcd565b602060405180830381865afa158015610381573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a59190610e9c565b93505050505b90565b60606103b861029d565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610425576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041c90610f26565b60405180910390fd5b600080815461043390610f75565b91905081905550838573ffffffffffffffffffffffffffffffffffffffff167f47d99ad340f52da66535aff7e10da1ceb85a32bcbd9fa1c42314d194545e14d28585604051610483929190610fea565b60405180910390a360008573ffffffffffffffffffffffffffffffffffffffff168585856040516104b592919061103e565b60006040518083038185875af1925050503d80600081146104f2576040519150601f19603f3d011682016040523d82523d6000602084013e6104f7565b606091505b5080935081925050508061050d57815160208301fd5b50949350505050565b60005481565b60008060006105296105c3565b925092509250909192565b60008060006105438585610643565b915091506000600481111561055b5761055a611057565b5b81600481111561056e5761056d611057565b5b1480156105a657508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b806105b857506105b7868686610694565b5b925050509392505050565b600080600080606067ffffffffffffffff8111156105e4576105e36109da565b5b6040519080825280601f01601f1916602001820160405280156106165781602001600182028036833780820191505090505b5090506060604d60208301303c8080602001905181019061063791906110c4565b93509350935050909192565b60008060418351036106845760008060006020860151925060408601519150606086015160001a9050610678878285856107d8565b9450945050505061068d565b60006002915091505b9250929050565b60008060008573ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b86866040516024016106cb929190611126565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516107359190611187565b600060405180830381855afa9150503d8060008114610770576040519150601f19603f3d011682016040523d82523d6000602084013e610775565b606091505b509150915081801561078957506020815110155b80156107cd5750631626ba7e60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916818060200190518101906107cb91906111b3565b145b925050509392505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c11156108135760006003915091506108b1565b60006001878787876040516000815260200160405260405161083894939291906111fc565b6020604051602081039080840390855afa15801561085a573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108a8576000600192509250506108b1565b80600092509250505b94509492505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610903816108ce565b811461090e57600080fd5b50565b600081359050610920816108fa565b92915050565b60006020828403121561093c5761093b6108c4565b5b600061094a84828501610911565b91505092915050565b60008115159050919050565b61096881610953565b82525050565b6000602082019050610983600083018461095f565b92915050565b6000819050919050565b61099c81610989565b81146109a757600080fd5b50565b6000813590506109b981610993565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610a12826109c9565b810181811067ffffffffffffffff82111715610a3157610a306109da565b5b80604052505050565b6000610a446108ba565b9050610a508282610a09565b919050565b600067ffffffffffffffff821115610a7057610a6f6109da565b5b610a79826109c9565b9050602081019050919050565b82818337600083830152505050565b6000610aa8610aa384610a55565b610a3a565b905082815260208101848484011115610ac457610ac36109c4565b5b610acf848285610a86565b509392505050565b600082601f830112610aec57610aeb6109bf565b5b8135610afc848260208601610a95565b91505092915050565b60008060408385031215610b1c57610b1b6108c4565b5b6000610b2a858286016109aa565b925050602083013567ffffffffffffffff811115610b4b57610b4a6108c9565b5b610b5785828601610ad7565b9150509250929050565b610b6a816108ce565b82525050565b6000602082019050610b856000830184610b61565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bb682610b8b565b9050919050565b610bc681610bab565b82525050565b6000602082019050610be16000830184610bbd565b92915050565b610bf081610bab565b8114610bfb57600080fd5b50565b600081359050610c0d81610be7565b92915050565b6000819050919050565b610c2681610c13565b8114610c3157600080fd5b50565b600081359050610c4381610c1d565b92915050565b600080fd5b600080fd5b60008083601f840112610c6957610c686109bf565b5b8235905067ffffffffffffffff811115610c8657610c85610c49565b5b602083019150836001820283011115610ca257610ca1610c4e565b5b9250929050565b60008060008060608587031215610cc357610cc26108c4565b5b6000610cd187828801610bfe565b9450506020610ce287828801610c34565b935050604085013567ffffffffffffffff811115610d0357610d026108c9565b5b610d0f87828801610c53565b925092505092959194509250565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d57578082015181840152602081019050610d3c565b60008484015250505050565b6000610d6e82610d1d565b610d788185610d28565b9350610d88818560208601610d39565b610d91816109c9565b840191505092915050565b60006020820190508181036000830152610db68184610d63565b905092915050565b610dc781610c13565b82525050565b6000602082019050610de26000830184610dbe565b92915050565b6000606082019050610dfd6000830186610dbe565b610e0a6020830185610bbd565b610e176040830184610dbe565b949350505050565b600081519050610e2e81610c1d565b92915050565b600081519050610e4381610be7565b92915050565b600080600060608486031215610e6257610e616108c4565b5b6000610e7086828701610e1f565b9350506020610e8186828701610e34565b9250506040610e9286828701610e1f565b9150509250925092565b600060208284031215610eb257610eb16108c4565b5b6000610ec084828501610e34565b91505092915050565b600082825260208201905092915050565b7f4e6f7420746f6b656e206f776e65720000000000000000000000000000000000600082015250565b6000610f10600f83610ec9565b9150610f1b82610eda565b602082019050919050565b60006020820190508181036000830152610f3f81610f03565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f8082610c13565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610fb257610fb1610f46565b5b600182019050919050565b6000610fc98385610d28565b9350610fd6838584610a86565b610fdf836109c9565b840190509392505050565b60006020820190508181036000830152611005818486610fbd565b90509392505050565b600081905092915050565b6000611025838561100e565b9350611032838584610a86565b82840190509392505050565b600061104b828486611019565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600061109182610b8b565b9050919050565b6110a181611086565b81146110ac57600080fd5b50565b6000815190506110be81611098565b92915050565b6000806000606084860312156110dd576110dc6108c4565b5b60006110eb86828701610e1f565b93505060206110fc868287016110af565b925050604061110d86828701610e1f565b9150509250925092565b61112081610989565b82525050565b600060408201905061113b6000830185611117565b818103602083015261114d8184610d63565b90509392505050565b600061116182610d1d565b61116b818561100e565b935061117b818560208601610d39565b80840191505092915050565b60006111938284611156565b915081905092915050565b6000815190506111ad81610993565b92915050565b6000602082840312156111c9576111c86108c4565b5b60006111d78482850161119e565b91505092915050565b600060ff82169050919050565b6111f6816111e0565b82525050565b60006080820190506112116000830187611117565b61121e60208301866111ed565b61122b6040830185611117565b6112386060830184611117565b9594505050505056fea2646970667358221220385e575f109906ee4b0b62289ef1653221a78bab3605625b4d529f421dd503e964736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x59 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x65 JUMPI DUP1 PUSH4 0x1626BA7E EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x9E5D4C49 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x165 JUMPI PUSH2 0x60 JUMP JUMPDEST CALLDATASIZE PUSH2 0x60 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x87 SWAP2 SWAP1 PUSH2 0x926 JUMP JUMPDEST PUSH2 0x192 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x96E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0xB05 JUMP JUMPDEST PUSH2 0x264 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0xB70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF4 PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xBCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0xCA9 JUMP JUMPDEST PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x516 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x51C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x25D JUMPI POP PUSH32 0x400A039800000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x279 PUSH2 0x272 PUSH2 0x29D JUMP JUMPDEST DUP6 DUP6 PUSH2 0x534 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x291 JUMPI PUSH4 0x1626BA7E PUSH1 0xE0 SHL SWAP2 POP POP PUSH2 0x297 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC0C546A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0xE49 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP CHAINID DUP4 EQ PUSH2 0x32B JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x3AB JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x364 SWAP2 SWAP1 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x381 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0xE9C JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3B8 PUSH2 0x29D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x425 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41C SWAP1 PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP2 SLOAD PUSH2 0x433 SWAP1 PUSH2 0xF75 JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x47D99AD340F52DA66535AFF7E10DA1CEB85A32BCBD9FA1C42314D194545E14D2 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x483 SWAP3 SWAP2 SWAP1 PUSH2 0xFEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x4B5 SWAP3 SWAP2 SWAP1 PUSH2 0x103E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4F7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 SWAP4 POP DUP2 SWAP3 POP POP POP DUP1 PUSH2 0x50D JUMPI DUP2 MLOAD PUSH1 0x20 DUP4 ADD REVERT JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x529 PUSH2 0x5C3 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x543 DUP6 DUP6 PUSH2 0x643 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x55B JUMPI PUSH2 0x55A PUSH2 0x1057 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x56E JUMPI PUSH2 0x56D PUSH2 0x1057 JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0x5A6 JUMPI POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x5B8 JUMPI POP PUSH2 0x5B7 DUP7 DUP7 DUP7 PUSH2 0x694 JUMP JUMPDEST JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5E4 JUMPI PUSH2 0x5E3 PUSH2 0x9DA JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x616 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x60 PUSH1 0x4D PUSH1 0x20 DUP4 ADD ADDRESS EXTCODECOPY DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x637 SWAP2 SWAP1 PUSH2 0x10C4 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x41 DUP4 MLOAD SUB PUSH2 0x684 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x678 DUP8 DUP3 DUP6 DUP6 PUSH2 0x7D8 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x68D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1626BA7E PUSH1 0xE0 SHL DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x6CB SWAP3 SWAP2 SWAP1 PUSH2 0x1126 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x735 SWAP2 SWAP1 PUSH2 0x1187 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x770 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x775 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x789 JUMPI POP PUSH1 0x20 DUP2 MLOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x7CD JUMPI POP PUSH4 0x1626BA7E PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x7CB SWAP2 SWAP1 PUSH2 0x11B3 JUMP JUMPDEST EQ JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x813 JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x8B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x838 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11FC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x85A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8A8 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x8B1 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x903 DUP2 PUSH2 0x8CE JUMP JUMPDEST DUP2 EQ PUSH2 0x90E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x920 DUP2 PUSH2 0x8FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x93C JUMPI PUSH2 0x93B PUSH2 0x8C4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x94A DUP5 DUP3 DUP6 ADD PUSH2 0x911 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x968 DUP2 PUSH2 0x953 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x983 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x95F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x99C DUP2 PUSH2 0x989 JUMP JUMPDEST DUP2 EQ PUSH2 0x9A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9B9 DUP2 PUSH2 0x993 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xA12 DUP3 PUSH2 0x9C9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xA31 JUMPI PUSH2 0xA30 PUSH2 0x9DA JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA44 PUSH2 0x8BA JUMP JUMPDEST SWAP1 POP PUSH2 0xA50 DUP3 DUP3 PUSH2 0xA09 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA70 JUMPI PUSH2 0xA6F PUSH2 0x9DA JUMP JUMPDEST JUMPDEST PUSH2 0xA79 DUP3 PUSH2 0x9C9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA8 PUSH2 0xAA3 DUP5 PUSH2 0xA55 JUMP JUMPDEST PUSH2 0xA3A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xAC4 JUMPI PUSH2 0xAC3 PUSH2 0x9C4 JUMP JUMPDEST JUMPDEST PUSH2 0xACF DUP5 DUP3 DUP6 PUSH2 0xA86 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xAEC JUMPI PUSH2 0xAEB PUSH2 0x9BF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xAFC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xA95 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB1C JUMPI PUSH2 0xB1B PUSH2 0x8C4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB2A DUP6 DUP3 DUP7 ADD PUSH2 0x9AA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB4B JUMPI PUSH2 0xB4A PUSH2 0x8C9 JUMP JUMPDEST JUMPDEST PUSH2 0xB57 DUP6 DUP3 DUP7 ADD PUSH2 0xAD7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6A DUP2 PUSH2 0x8CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB85 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB6 DUP3 PUSH2 0xB8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBC6 DUP2 PUSH2 0xBAB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBE1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBBD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBF0 DUP2 PUSH2 0xBAB JUMP JUMPDEST DUP2 EQ PUSH2 0xBFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC0D DUP2 PUSH2 0xBE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC26 DUP2 PUSH2 0xC13 JUMP JUMPDEST DUP2 EQ PUSH2 0xC31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC43 DUP2 PUSH2 0xC1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xC69 JUMPI PUSH2 0xC68 PUSH2 0x9BF JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC86 JUMPI PUSH2 0xC85 PUSH2 0xC49 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xCA2 JUMPI PUSH2 0xCA1 PUSH2 0xC4E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xCC3 JUMPI PUSH2 0xCC2 PUSH2 0x8C4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCD1 DUP8 DUP3 DUP9 ADD PUSH2 0xBFE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xCE2 DUP8 DUP3 DUP9 ADD PUSH2 0xC34 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD03 JUMPI PUSH2 0xD02 PUSH2 0x8C9 JUMP JUMPDEST JUMPDEST PUSH2 0xD0F DUP8 DUP3 DUP9 ADD PUSH2 0xC53 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD57 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD3C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD6E DUP3 PUSH2 0xD1D JUMP JUMPDEST PUSH2 0xD78 DUP2 DUP6 PUSH2 0xD28 JUMP JUMPDEST SWAP4 POP PUSH2 0xD88 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD39 JUMP JUMPDEST PUSH2 0xD91 DUP2 PUSH2 0x9C9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDB6 DUP2 DUP5 PUSH2 0xD63 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDC7 DUP2 PUSH2 0xC13 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDE2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDBE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xDFD PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xDBE JUMP JUMPDEST PUSH2 0xE0A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBBD JUMP JUMPDEST PUSH2 0xE17 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDBE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xE2E DUP2 PUSH2 0xC1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xE43 DUP2 PUSH2 0xBE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE62 JUMPI PUSH2 0xE61 PUSH2 0x8C4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE70 DUP7 DUP3 DUP8 ADD PUSH2 0xE1F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xE81 DUP7 DUP3 DUP8 ADD PUSH2 0xE34 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xE92 DUP7 DUP3 DUP8 ADD PUSH2 0xE1F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEB2 JUMPI PUSH2 0xEB1 PUSH2 0x8C4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEC0 DUP5 DUP3 DUP6 ADD PUSH2 0xE34 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420746F6B656E206F776E65720000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF10 PUSH1 0xF DUP4 PUSH2 0xEC9 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1B DUP3 PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3F DUP2 PUSH2 0xF03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF80 DUP3 PUSH2 0xC13 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xFB2 JUMPI PUSH2 0xFB1 PUSH2 0xF46 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC9 DUP4 DUP6 PUSH2 0xD28 JUMP JUMPDEST SWAP4 POP PUSH2 0xFD6 DUP4 DUP6 DUP5 PUSH2 0xA86 JUMP JUMPDEST PUSH2 0xFDF DUP4 PUSH2 0x9C9 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1005 DUP2 DUP5 DUP7 PUSH2 0xFBD JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1025 DUP4 DUP6 PUSH2 0x100E JUMP JUMPDEST SWAP4 POP PUSH2 0x1032 DUP4 DUP6 DUP5 PUSH2 0xA86 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104B DUP3 DUP5 DUP7 PUSH2 0x1019 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1091 DUP3 PUSH2 0xB8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10A1 DUP2 PUSH2 0x1086 JUMP JUMPDEST DUP2 EQ PUSH2 0x10AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x10BE DUP2 PUSH2 0x1098 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10DD JUMPI PUSH2 0x10DC PUSH2 0x8C4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10EB DUP7 DUP3 DUP8 ADD PUSH2 0xE1F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x10FC DUP7 DUP3 DUP8 ADD PUSH2 0x10AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x110D DUP7 DUP3 DUP8 ADD PUSH2 0xE1F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1120 DUP2 PUSH2 0x989 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x113B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1117 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x114D DUP2 DUP5 PUSH2 0xD63 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1161 DUP3 PUSH2 0xD1D JUMP JUMPDEST PUSH2 0x116B DUP2 DUP6 PUSH2 0x100E JUMP JUMPDEST SWAP4 POP PUSH2 0x117B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD39 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1193 DUP3 DUP5 PUSH2 0x1156 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x11AD DUP2 PUSH2 0x993 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11C9 JUMPI PUSH2 0x11C8 PUSH2 0x8C4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11D7 DUP5 DUP3 DUP6 ADD PUSH2 0x119E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11F6 DUP2 PUSH2 0x11E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1211 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1117 JUMP JUMPDEST PUSH2 0x121E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x11ED JUMP JUMPDEST PUSH2 0x122B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1117 JUMP JUMPDEST PUSH2 0x1238 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1117 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0x5E JUMPI 0x5F LT SWAP10 MOD 0xEE 0x4B SIGNEXTEND PUSH3 0x289EF1 PUSH6 0x3221A78BAB36 SDIV PUSH3 0x5B4D52 SWAP16 TIMESTAMP SAR 0xD5 SUB 0xE9 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "642:1689:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1764:207;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1979:349;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1501:255;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;777:508;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;711:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1293:200;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1764:207;1832:4;1872:25;1857:40;;;:11;:40;;;;:105;;;;1929:33;1914:48;;;:11;:48;;;;1857:105;1849:114;;1764:207;;;:::o;1979:349::-;2093:17;2128:12;2143:62;2180:7;:5;:7::i;:::-;2189:4;2195:9;2143:36;:62::i;:::-;2128:77;;2222:7;2218:81;;;2253:34;;;2246:41;;;;;2218:81;2311:9;;;;1979:349;;;;;:::o;1501:255::-;1539:7;1560:15;1577:21;1600:15;1619:4;:10;;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1559:72;;;;;;1657:13;1646:7;:24;1642:47;;1687:1;1672:17;;;;;;;1642:47;1717:13;1709:30;;;1740:7;1709:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1702:46;;;;;1501:255;;:::o;777:508::-;906:19;960:7;:5;:7::i;:::-;946:21;;:10;:21;;;938:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;1002:5;;1000:7;;;;;:::i;:::-;;;;;;;;1049:5;1045:2;1025:36;;;1056:4;;1025:36;;;;;;;:::i;:::-;;;;;;;;1074:12;1117:2;:7;;1132:5;1139:4;;1117:27;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1097:47;;;;;;;;1162:7;1157:121;;1244:6;1238:13;1233:2;1225:6;1221:15;1214:38;1157:121;927:358;777:508;;;;;;:::o;711:20::-;;;;:::o;1293:200::-;1374:7;1396;1418;1460:25;:23;:25::i;:::-;1453:32;;;;;;1293:200;;;:::o;1014:366:11:-;1120:4;1137:17;1156:24;1184:33;1201:4;1207:9;1184:16;:33::i;:::-;1136:81;;;;1256:26;1247:35;;;;;;;;:::i;:::-;;:5;:35;;;;;;;;:::i;:::-;;;:58;;;;;1299:6;1286:19;;:9;:19;;;1247:58;1246:127;;;;1322:51;1349:6;1357:4;1363:9;1322:26;:51::i;:::-;1246:127;1227:146;;;;1014:366;;;;;:::o;772:423:18:-;853:7;875;897;932:19;964:4;954:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;932:37;;1105:4;1099;1092;1084:6;1080:17;1069:9;1057:53;1151:6;1140:47;;;;;;;;;;;;:::i;:::-;1133:54;;;;;;;772:423;;;:::o;2145:730:10:-;2226:7;2235:12;2283:2;2263:9;:16;:22;2259:610;;2301:9;2324;2347:7;2599:4;2588:9;2584:20;2578:27;2573:32;;2648:4;2637:9;2633:20;2627:27;2622:32;;2705:4;2694:9;2690:20;2684:27;2681:1;2676:36;2671:41;;2746:25;2757:4;2763:1;2766;2769;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;2818:1;2822:35;2802:56;;;;2145:730;;;;;;:::o;1786:473:11:-;1929:4;1946:12;1960:19;1983:6;:17;;2037:34;;;2073:4;2079:9;2014:75;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1983:116;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1945:154;;;;2117:7;:42;;;;;2157:2;2140:6;:13;:19;;2117:42;:134;;;;;2216:34;;;2208:43;;;2186:6;2175:29;;;;;;;;;;;;:::i;:::-;:76;2117:134;2109:143;;;;1786:473;;;;;:::o;5009:1456:10:-;5097:7;5106:12;6021:66;6016:1;6008:10;;:79;6004:161;;;6119:1;6123:30;6103:51;;;;;;6004:161;6259:14;6276:24;6286:4;6292:1;6295;6298;6276:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6259:41;;6332:1;6314:20;;:6;:20;;;6310:101;;6366:1;6370:29;6350:50;;;;;;;6310:101;6429:6;6437:20;6421:37;;;;;5009:1456;;;;;;;;:::o;7:75:21:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:117::-;1983:1;1980;1973:12;1997:117;2106:1;2103;2096:12;2120:102;2161:6;2212:2;2208:7;2203:2;2196:5;2192:14;2188:28;2178:38;;2120:102;;;:::o;2228:180::-;2276:77;2273:1;2266:88;2373:4;2370:1;2363:15;2397:4;2394:1;2387:15;2414:281;2497:27;2519:4;2497:27;:::i;:::-;2489:6;2485:40;2627:6;2615:10;2612:22;2591:18;2579:10;2576:34;2573:62;2570:88;;;2638:18;;:::i;:::-;2570:88;2678:10;2674:2;2667:22;2457:238;2414:281;;:::o;2701:129::-;2735:6;2762:20;;:::i;:::-;2752:30;;2791:33;2819:4;2811:6;2791:33;:::i;:::-;2701:129;;;:::o;2836:307::-;2897:4;2987:18;2979:6;2976:30;2973:56;;;3009:18;;:::i;:::-;2973:56;3047:29;3069:6;3047:29;:::i;:::-;3039:37;;3131:4;3125;3121:15;3113:23;;2836:307;;;:::o;3149:146::-;3246:6;3241:3;3236;3223:30;3287:1;3278:6;3273:3;3269:16;3262:27;3149:146;;;:::o;3301:423::-;3378:5;3403:65;3419:48;3460:6;3419:48;:::i;:::-;3403:65;:::i;:::-;3394:74;;3491:6;3484:5;3477:21;3529:4;3522:5;3518:16;3567:3;3558:6;3553:3;3549:16;3546:25;3543:112;;;3574:79;;:::i;:::-;3543:112;3664:54;3711:6;3706:3;3701;3664:54;:::i;:::-;3384:340;3301:423;;;;;:::o;3743:338::-;3798:5;3847:3;3840:4;3832:6;3828:17;3824:27;3814:122;;3855:79;;:::i;:::-;3814:122;3972:6;3959:20;3997:78;4071:3;4063:6;4056:4;4048:6;4044:17;3997:78;:::i;:::-;3988:87;;3804:277;3743:338;;;;:::o;4087:652::-;4164:6;4172;4221:2;4209:9;4200:7;4196:23;4192:32;4189:119;;;4227:79;;:::i;:::-;4189:119;4347:1;4372:53;4417:7;4408:6;4397:9;4393:22;4372:53;:::i;:::-;4362:63;;4318:117;4502:2;4491:9;4487:18;4474:32;4533:18;4525:6;4522:30;4519:117;;;4555:79;;:::i;:::-;4519:117;4660:62;4714:7;4705:6;4694:9;4690:22;4660:62;:::i;:::-;4650:72;;4445:287;4087:652;;;;;:::o;4745:115::-;4830:23;4847:5;4830:23;:::i;:::-;4825:3;4818:36;4745:115;;:::o;4866:218::-;4957:4;4995:2;4984:9;4980:18;4972:26;;5008:69;5074:1;5063:9;5059:17;5050:6;5008:69;:::i;:::-;4866:218;;;;:::o;5090:126::-;5127:7;5167:42;5160:5;5156:54;5145:65;;5090:126;;;:::o;5222:96::-;5259:7;5288:24;5306:5;5288:24;:::i;:::-;5277:35;;5222:96;;;:::o;5324:118::-;5411:24;5429:5;5411:24;:::i;:::-;5406:3;5399:37;5324:118;;:::o;5448:222::-;5541:4;5579:2;5568:9;5564:18;5556:26;;5592:71;5660:1;5649:9;5645:17;5636:6;5592:71;:::i;:::-;5448:222;;;;:::o;5676:122::-;5749:24;5767:5;5749:24;:::i;:::-;5742:5;5739:35;5729:63;;5788:1;5785;5778:12;5729:63;5676:122;:::o;5804:139::-;5850:5;5888:6;5875:20;5866:29;;5904:33;5931:5;5904:33;:::i;:::-;5804:139;;;;:::o;5949:77::-;5986:7;6015:5;6004:16;;5949:77;;;:::o;6032:122::-;6105:24;6123:5;6105:24;:::i;:::-;6098:5;6095:35;6085:63;;6144:1;6141;6134:12;6085:63;6032:122;:::o;6160:139::-;6206:5;6244:6;6231:20;6222:29;;6260:33;6287:5;6260:33;:::i;:::-;6160:139;;;;:::o;6305:117::-;6414:1;6411;6404:12;6428:117;6537:1;6534;6527:12;6564:552;6621:8;6631:6;6681:3;6674:4;6666:6;6662:17;6658:27;6648:122;;6689:79;;:::i;:::-;6648:122;6802:6;6789:20;6779:30;;6832:18;6824:6;6821:30;6818:117;;;6854:79;;:::i;:::-;6818:117;6968:4;6960:6;6956:17;6944:29;;7022:3;7014:4;7006:6;7002:17;6992:8;6988:32;6985:41;6982:128;;;7029:79;;:::i;:::-;6982:128;6564:552;;;;;:::o;7122:817::-;7210:6;7218;7226;7234;7283:2;7271:9;7262:7;7258:23;7254:32;7251:119;;;7289:79;;:::i;:::-;7251:119;7409:1;7434:53;7479:7;7470:6;7459:9;7455:22;7434:53;:::i;:::-;7424:63;;7380:117;7536:2;7562:53;7607:7;7598:6;7587:9;7583:22;7562:53;:::i;:::-;7552:63;;7507:118;7692:2;7681:9;7677:18;7664:32;7723:18;7715:6;7712:30;7709:117;;;7745:79;;:::i;:::-;7709:117;7858:64;7914:7;7905:6;7894:9;7890:22;7858:64;:::i;:::-;7840:82;;;;7635:297;7122:817;;;;;;;:::o;7945:98::-;7996:6;8030:5;8024:12;8014:22;;7945:98;;;:::o;8049:168::-;8132:11;8166:6;8161:3;8154:19;8206:4;8201:3;8197:14;8182:29;;8049:168;;;;:::o;8223:246::-;8304:1;8314:113;8328:6;8325:1;8322:13;8314:113;;;8413:1;8408:3;8404:11;8398:18;8394:1;8389:3;8385:11;8378:39;8350:2;8347:1;8343:10;8338:15;;8314:113;;;8461:1;8452:6;8447:3;8443:16;8436:27;8285:184;8223:246;;;:::o;8475:373::-;8561:3;8589:38;8621:5;8589:38;:::i;:::-;8643:70;8706:6;8701:3;8643:70;:::i;:::-;8636:77;;8722:65;8780:6;8775:3;8768:4;8761:5;8757:16;8722:65;:::i;:::-;8812:29;8834:6;8812:29;:::i;:::-;8807:3;8803:39;8796:46;;8565:283;8475:373;;;;:::o;8854:309::-;8965:4;9003:2;8992:9;8988:18;8980:26;;9052:9;9046:4;9042:20;9038:1;9027:9;9023:17;9016:47;9080:76;9151:4;9142:6;9080:76;:::i;:::-;9072:84;;8854:309;;;;:::o;9169:118::-;9256:24;9274:5;9256:24;:::i;:::-;9251:3;9244:37;9169:118;;:::o;9293:222::-;9386:4;9424:2;9413:9;9409:18;9401:26;;9437:71;9505:1;9494:9;9490:17;9481:6;9437:71;:::i;:::-;9293:222;;;;:::o;9521:442::-;9670:4;9708:2;9697:9;9693:18;9685:26;;9721:71;9789:1;9778:9;9774:17;9765:6;9721:71;:::i;:::-;9802:72;9870:2;9859:9;9855:18;9846:6;9802:72;:::i;:::-;9884;9952:2;9941:9;9937:18;9928:6;9884:72;:::i;:::-;9521:442;;;;;;:::o;9969:143::-;10026:5;10057:6;10051:13;10042:22;;10073:33;10100:5;10073:33;:::i;:::-;9969:143;;;;:::o;10118:::-;10175:5;10206:6;10200:13;10191:22;;10222:33;10249:5;10222:33;:::i;:::-;10118:143;;;;:::o;10267:663::-;10355:6;10363;10371;10420:2;10408:9;10399:7;10395:23;10391:32;10388:119;;;10426:79;;:::i;:::-;10388:119;10546:1;10571:64;10627:7;10618:6;10607:9;10603:22;10571:64;:::i;:::-;10561:74;;10517:128;10684:2;10710:64;10766:7;10757:6;10746:9;10742:22;10710:64;:::i;:::-;10700:74;;10655:129;10823:2;10849:64;10905:7;10896:6;10885:9;10881:22;10849:64;:::i;:::-;10839:74;;10794:129;10267:663;;;;;:::o;10936:351::-;11006:6;11055:2;11043:9;11034:7;11030:23;11026:32;11023:119;;;11061:79;;:::i;:::-;11023:119;11181:1;11206:64;11262:7;11253:6;11242:9;11238:22;11206:64;:::i;:::-;11196:74;;11152:128;10936:351;;;;:::o;11293:169::-;11377:11;11411:6;11406:3;11399:19;11451:4;11446:3;11442:14;11427:29;;11293:169;;;;:::o;11468:165::-;11608:17;11604:1;11596:6;11592:14;11585:41;11468:165;:::o;11639:366::-;11781:3;11802:67;11866:2;11861:3;11802:67;:::i;:::-;11795:74;;11878:93;11967:3;11878:93;:::i;:::-;11996:2;11991:3;11987:12;11980:19;;11639:366;;;:::o;12011:419::-;12177:4;12215:2;12204:9;12200:18;12192:26;;12264:9;12258:4;12254:20;12250:1;12239:9;12235:17;12228:47;12292:131;12418:4;12292:131;:::i;:::-;12284:139;;12011:419;;;:::o;12436:180::-;12484:77;12481:1;12474:88;12581:4;12578:1;12571:15;12605:4;12602:1;12595:15;12622:233;12661:3;12684:24;12702:5;12684:24;:::i;:::-;12675:33;;12730:66;12723:5;12720:77;12717:103;;12800:18;;:::i;:::-;12717:103;12847:1;12840:5;12836:13;12829:20;;12622:233;;;:::o;12883:314::-;12979:3;13000:70;13063:6;13058:3;13000:70;:::i;:::-;12993:77;;13080:56;13129:6;13124:3;13117:5;13080:56;:::i;:::-;13161:29;13183:6;13161:29;:::i;:::-;13156:3;13152:39;13145:46;;12883:314;;;;;:::o;13203:329::-;13324:4;13362:2;13351:9;13347:18;13339:26;;13411:9;13405:4;13401:20;13397:1;13386:9;13382:17;13375:47;13439:86;13520:4;13511:6;13503;13439:86;:::i;:::-;13431:94;;13203:329;;;;;:::o;13538:147::-;13639:11;13676:3;13661:18;;13538:147;;;;:::o;13713:327::-;13827:3;13848:88;13929:6;13924:3;13848:88;:::i;:::-;13841:95;;13946:56;13995:6;13990:3;13983:5;13946:56;:::i;:::-;14027:6;14022:3;14018:16;14011:23;;13713:327;;;;;:::o;14046:291::-;14186:3;14208:103;14307:3;14298:6;14290;14208:103;:::i;:::-;14201:110;;14328:3;14321:10;;14046:291;;;;;:::o;14343:180::-;14391:77;14388:1;14381:88;14488:4;14485:1;14478:15;14512:4;14509:1;14502:15;14529:104;14574:7;14603:24;14621:5;14603:24;:::i;:::-;14592:35;;14529:104;;;:::o;14639:138::-;14720:32;14746:5;14720:32;:::i;:::-;14713:5;14710:43;14700:71;;14767:1;14764;14757:12;14700:71;14639:138;:::o;14783:159::-;14848:5;14879:6;14873:13;14864:22;;14895:41;14930:5;14895:41;:::i;:::-;14783:159;;;;:::o;14948:679::-;15044:6;15052;15060;15109:2;15097:9;15088:7;15084:23;15080:32;15077:119;;;15115:79;;:::i;:::-;15077:119;15235:1;15260:64;15316:7;15307:6;15296:9;15292:22;15260:64;:::i;:::-;15250:74;;15206:128;15373:2;15399:72;15463:7;15454:6;15443:9;15439:22;15399:72;:::i;:::-;15389:82;;15344:137;15520:2;15546:64;15602:7;15593:6;15582:9;15578:22;15546:64;:::i;:::-;15536:74;;15491:129;14948:679;;;;;:::o;15633:118::-;15720:24;15738:5;15720:24;:::i;:::-;15715:3;15708:37;15633:118;;:::o;15757:419::-;15896:4;15934:2;15923:9;15919:18;15911:26;;15947:71;16015:1;16004:9;16000:17;15991:6;15947:71;:::i;:::-;16065:9;16059:4;16055:20;16050:2;16039:9;16035:18;16028:48;16093:76;16164:4;16155:6;16093:76;:::i;:::-;16085:84;;15757:419;;;;;:::o;16182:386::-;16286:3;16314:38;16346:5;16314:38;:::i;:::-;16368:88;16449:6;16444:3;16368:88;:::i;:::-;16361:95;;16465:65;16523:6;16518:3;16511:4;16504:5;16500:16;16465:65;:::i;:::-;16555:6;16550:3;16546:16;16539:23;;16290:278;16182:386;;;;:::o;16574:271::-;16704:3;16726:93;16815:3;16806:6;16726:93;:::i;:::-;16719:100;;16836:3;16829:10;;16574:271;;;;:::o;16851:143::-;16908:5;16939:6;16933:13;16924:22;;16955:33;16982:5;16955:33;:::i;:::-;16851:143;;;;:::o;17000:351::-;17070:6;17119:2;17107:9;17098:7;17094:23;17090:32;17087:119;;;17125:79;;:::i;:::-;17087:119;17245:1;17270:64;17326:7;17317:6;17306:9;17302:22;17270:64;:::i;:::-;17260:74;;17216:128;17000:351;;;;:::o;17357:86::-;17392:7;17432:4;17425:5;17421:16;17410:27;;17357:86;;;:::o;17449:112::-;17532:22;17548:5;17532:22;:::i;:::-;17527:3;17520:35;17449:112;;:::o;17567:545::-;17740:4;17778:3;17767:9;17763:19;17755:27;;17792:71;17860:1;17849:9;17845:17;17836:6;17792:71;:::i;:::-;17873:68;17937:2;17926:9;17922:18;17913:6;17873:68;:::i;:::-;17951:72;18019:2;18008:9;18004:18;17995:6;17951:72;:::i;:::-;18033;18101:2;18090:9;18086:18;18077:6;18033:72;:::i;:::-;17567:545;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "945400",
								"executionCost": "981",
								"totalCost": "946381"
							},
							"external": {
								"executeCall(address,uint256,bytes)": "infinite",
								"isValidSignature(bytes32,bytes)": "infinite",
								"nonce()": "2495",
								"owner()": "infinite",
								"supportsInterface(bytes4)": "662",
								"token()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 642,
									"end": 2331,
									"name": "PUSH",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 642,
									"end": 2331,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 642,
									"end": 2331,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 642,
									"end": 2331,
									"name": "CALLVALUE",
									"source": 16
								},
								{
									"begin": 642,
									"end": 2331,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 642,
									"end": 2331,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 642,
									"end": 2331,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 642,
									"end": 2331,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 642,
									"end": 2331,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 642,
									"end": 2331,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 642,
									"end": 2331,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 642,
									"end": 2331,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 642,
									"end": 2331,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 642,
									"end": 2331,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 642,
									"end": 2331,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 642,
									"end": 2331,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 642,
									"end": 2331,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 642,
									"end": 2331,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 642,
									"end": 2331,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 642,
									"end": 2331,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 642,
									"end": 2331,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220385e575f109906ee4b0b62289ef1653221a78bab3605625b4d529f421dd503e964736f6c63430008120033",
									".code": [
										{
											"begin": 642,
											"end": 2331,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "PUSH",
											"source": 16,
											"value": "1FFC9A7"
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "PUSH",
											"source": 16,
											"value": "1626BA7E"
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "PUSH",
											"source": 16,
											"value": "8DA5CB5B"
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "PUSH",
											"source": 16,
											"value": "9E5D4C49"
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "PUSH",
											"source": 16,
											"value": "AFFED0E0"
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "PUSH",
											"source": 16,
											"value": "FC0C546A"
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "tag",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "tag",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 642,
											"end": 2331,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "tag",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "tag",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "13"
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "14"
										},
										{
											"begin": 1764,
											"end": 1971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "tag",
											"source": 16,
											"value": "13"
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "15"
										},
										{
											"begin": 1764,
											"end": 1971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "tag",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "16"
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 1764,
											"end": 1971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "tag",
											"source": 16,
											"value": "16"
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "tag",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "18"
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "tag",
											"source": 16,
											"value": "18"
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 1979,
											"end": 2328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "tag",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 1979,
											"end": 2328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "tag",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 1979,
											"end": 2328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "tag",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "tag",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "25"
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "tag",
											"source": 16,
											"value": "25"
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "27"
										},
										{
											"begin": 1501,
											"end": 1756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "tag",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "28"
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "29"
										},
										{
											"begin": 1501,
											"end": 1756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "tag",
											"source": 16,
											"value": "28"
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "tag",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "31"
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 777,
											"end": 1285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "tag",
											"source": 16,
											"value": "31"
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "33"
										},
										{
											"begin": 777,
											"end": 1285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "tag",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "34"
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "35"
										},
										{
											"begin": 777,
											"end": 1285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "tag",
											"source": 16,
											"value": "34"
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 711,
											"end": 731,
											"name": "tag",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 711,
											"end": 731,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 711,
											"end": 731,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 711,
											"end": 731,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "36"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 711,
											"end": 731,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 711,
											"end": 731,
											"name": "tag",
											"source": 16,
											"value": "36"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 711,
											"end": 731,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "37"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "38"
										},
										{
											"begin": 711,
											"end": 731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 711,
											"end": 731,
											"name": "tag",
											"source": 16,
											"value": "37"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "39"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 711,
											"end": 731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 711,
											"end": 731,
											"name": "tag",
											"source": 16,
											"value": "39"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 711,
											"end": 731,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 711,
											"end": 731,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "tag",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "tag",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "42"
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "43"
										},
										{
											"begin": 1293,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "tag",
											"source": 16,
											"value": "42"
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "45"
										},
										{
											"begin": 1293,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "tag",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "tag",
											"source": 16,
											"value": "15"
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1832,
											"end": 1836,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1897,
											"name": "PUSH",
											"source": 16,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1857,
											"end": 1897,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1857,
											"end": 1897,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 1857,
											"end": 1897,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1857,
											"end": 1868,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1857,
											"end": 1897,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1857,
											"end": 1897,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 1857,
											"end": 1897,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1857,
											"end": 1897,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1857,
											"end": 1962,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1857,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "47"
										},
										{
											"begin": 1857,
											"end": 1962,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1857,
											"end": 1962,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1929,
											"end": 1962,
											"name": "PUSH",
											"source": 16,
											"value": "400A039800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1914,
											"end": 1962,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1914,
											"end": 1962,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 1914,
											"end": 1962,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1914,
											"end": 1925,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1914,
											"end": 1962,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1914,
											"end": 1962,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 1914,
											"end": 1962,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1914,
											"end": 1962,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1857,
											"end": 1962,
											"name": "tag",
											"source": 16,
											"value": "47"
										},
										{
											"begin": 1857,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1764,
											"end": 1971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "tag",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2128,
											"end": 2140,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2143,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "49"
										},
										{
											"begin": 2180,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "50"
										},
										{
											"begin": 2180,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "27"
										},
										{
											"begin": 2180,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2180,
											"end": 2187,
											"name": "tag",
											"source": 16,
											"value": "50"
										},
										{
											"begin": 2180,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2189,
											"end": 2193,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2195,
											"end": 2204,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2143,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "51"
										},
										{
											"begin": 2143,
											"end": 2205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2143,
											"end": 2205,
											"name": "tag",
											"source": 16,
											"value": "49"
										},
										{
											"begin": 2143,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2128,
											"end": 2205,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2128,
											"end": 2205,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2222,
											"end": 2229,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2218,
											"end": 2299,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2218,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "52"
										},
										{
											"begin": 2218,
											"end": 2299,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2253,
											"end": 2287,
											"name": "PUSH",
											"source": 16,
											"value": "1626BA7E"
										},
										{
											"begin": 2253,
											"end": 2287,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 2253,
											"end": 2287,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "48"
										},
										{
											"begin": 2246,
											"end": 2287,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2218,
											"end": 2299,
											"name": "tag",
											"source": 16,
											"value": "52"
										},
										{
											"begin": 2218,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2311,
											"end": 2320,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2311,
											"end": 2320,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2311,
											"end": 2320,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2311,
											"end": 2320,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "tag",
											"source": 16,
											"value": "48"
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 2328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "tag",
											"source": 16,
											"value": "27"
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1539,
											"end": 1546,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1560,
											"end": 1575,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1577,
											"end": 1598,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1600,
											"end": 1615,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1623,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1629,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1619,
											"end": 1629,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1629,
											"name": "PUSH",
											"source": 16,
											"value": "FC0C546A"
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "STATICCALL",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "55"
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "tag",
											"source": 16,
											"value": "55"
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "56"
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "57"
										},
										{
											"begin": 1619,
											"end": 1631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "tag",
											"source": 16,
											"value": "56"
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1559,
											"end": 1631,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1559,
											"end": 1631,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1559,
											"end": 1631,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1559,
											"end": 1631,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1559,
											"end": 1631,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1559,
											"end": 1631,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1657,
											"end": 1670,
											"name": "CHAINID",
											"source": 16
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1646,
											"end": 1670,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "58"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1687,
											"end": 1688,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1672,
											"end": 1689,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 1672,
											"end": 1689,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1672,
											"end": 1689,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1672,
											"end": 1689,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1672,
											"end": 1689,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1672,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "53"
										},
										{
											"begin": 1672,
											"end": 1689,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "tag",
											"source": 16,
											"value": "58"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1717,
											"end": 1730,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1739,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1709,
											"end": 1739,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1739,
											"name": "PUSH",
											"source": 16,
											"value": "6352211E"
										},
										{
											"begin": 1740,
											"end": 1747,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "59"
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1709,
											"end": 1748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "tag",
											"source": 16,
											"value": "59"
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "STATICCALL",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "61"
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "tag",
											"source": 16,
											"value": "61"
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "62"
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "63"
										},
										{
											"begin": 1709,
											"end": 1748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "tag",
											"source": 16,
											"value": "62"
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1702,
											"end": 1748,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 1702,
											"end": 1748,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1702,
											"end": 1748,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1702,
											"end": 1748,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1702,
											"end": 1748,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "tag",
											"source": 16,
											"value": "53"
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1501,
											"end": 1756,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1501,
											"end": 1756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "tag",
											"source": 16,
											"value": "33"
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 906,
											"end": 925,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 960,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "65"
										},
										{
											"begin": 960,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "27"
										},
										{
											"begin": 960,
											"end": 967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 960,
											"end": 967,
											"name": "tag",
											"source": 16,
											"value": "65"
										},
										{
											"begin": 960,
											"end": 967,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 946,
											"end": 967,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 946,
											"end": 967,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 946,
											"end": 956,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 946,
											"end": 967,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 946,
											"end": 967,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 946,
											"end": 967,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 938,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "66"
										},
										{
											"begin": 938,
											"end": 987,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 938,
											"end": 987,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 938,
											"end": 987,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 938,
											"end": 987,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 938,
											"end": 987,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 938,
											"end": 987,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 938,
											"end": 987,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 938,
											"end": 987,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 938,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "67"
										},
										{
											"begin": 938,
											"end": 987,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 938,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "68"
										},
										{
											"begin": 938,
											"end": 987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 938,
											"end": 987,
											"name": "tag",
											"source": 16,
											"value": "67"
										},
										{
											"begin": 938,
											"end": 987,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 938,
											"end": 987,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 938,
											"end": 987,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 938,
											"end": 987,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 938,
											"end": 987,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 938,
											"end": 987,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 938,
											"end": 987,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 938,
											"end": 987,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 938,
											"end": 987,
											"name": "tag",
											"source": 16,
											"value": "66"
										},
										{
											"begin": 938,
											"end": 987,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1002,
											"end": 1007,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1002,
											"end": 1007,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1000,
											"end": 1007,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1000,
											"end": 1007,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1000,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "69"
										},
										{
											"begin": 1000,
											"end": 1007,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1000,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "70"
										},
										{
											"begin": 1000,
											"end": 1007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1000,
											"end": 1007,
											"name": "tag",
											"source": 16,
											"value": "69"
										},
										{
											"begin": 1000,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1000,
											"end": 1007,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1000,
											"end": 1007,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1000,
											"end": 1007,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1000,
											"end": 1007,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1000,
											"end": 1007,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1000,
											"end": 1007,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 1000,
											"end": 1007,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1049,
											"end": 1054,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1045,
											"end": 1047,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "PUSH",
											"source": 16,
											"value": "47D99AD340F52DA66535AFF7E10DA1CEB85A32BCBD9FA1C42314D194545E14D2"
										},
										{
											"begin": 1056,
											"end": 1060,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1056,
											"end": 1060,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "71"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "72"
										},
										{
											"begin": 1025,
											"end": 1061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "tag",
											"source": 16,
											"value": "71"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1025,
											"end": 1061,
											"name": "LOG3",
											"source": 16
										},
										{
											"begin": 1074,
											"end": 1086,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1117,
											"end": 1119,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1132,
											"end": 1137,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1139,
											"end": 1143,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1139,
											"end": 1143,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "73"
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "74"
										},
										{
											"begin": 1117,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "tag",
											"source": 16,
											"value": "73"
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "77"
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "PUSH",
											"source": 16,
											"value": "3F"
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "76"
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "tag",
											"source": 16,
											"value": "77"
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "tag",
											"source": 16,
											"value": "76"
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1144,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1097,
											"end": 1144,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1097,
											"end": 1144,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 1097,
											"end": 1144,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1097,
											"end": 1144,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1097,
											"end": 1144,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1097,
											"end": 1144,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1097,
											"end": 1144,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1097,
											"end": 1144,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1162,
											"end": 1169,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1157,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "78"
										},
										{
											"begin": 1157,
											"end": 1278,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1238,
											"end": 1251,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1233,
											"end": 1235,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1225,
											"end": 1231,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1236,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1214,
											"end": 1252,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1157,
											"end": 1278,
											"name": "tag",
											"source": 16,
											"value": "78"
										},
										{
											"begin": 1157,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 927,
											"end": 1285,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 777,
											"end": 1285,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 777,
											"end": 1285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 711,
											"end": 731,
											"name": "tag",
											"source": 16,
											"value": "38"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 711,
											"end": 731,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 711,
											"end": 731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "tag",
											"source": 16,
											"value": "43"
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1374,
											"end": 1381,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1403,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1418,
											"end": 1425,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 1460,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "81"
										},
										{
											"begin": 1460,
											"end": 1485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1460,
											"end": 1485,
											"name": "tag",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 1460,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1453,
											"end": 1485,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1453,
											"end": 1485,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1453,
											"end": 1485,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1453,
											"end": 1485,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1453,
											"end": 1485,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1453,
											"end": 1485,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1293,
											"end": 1493,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1293,
											"end": 1493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1014,
											"end": 1380,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 1014,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1124,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1137,
											"end": 1154,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1156,
											"end": 1180,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 1201,
											"end": 1205,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1207,
											"end": 1216,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1184,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 1184,
											"end": 1217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1184,
											"end": 1217,
											"name": "tag",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 1184,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1217,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1217,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1217,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1217,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1256,
											"end": 1282,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 1247,
											"end": 1282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "tag",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1252,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 1247,
											"end": 1282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1282,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1305,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1305,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 1247,
											"end": 1305,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1305,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1299,
											"end": 1305,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1286,
											"end": 1305,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1286,
											"end": 1305,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1286,
											"end": 1295,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1286,
											"end": 1305,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1286,
											"end": 1305,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1286,
											"end": 1305,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1247,
											"end": 1305,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 1247,
											"end": 1305,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1246,
											"end": 1373,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1246,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 1246,
											"end": 1373,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1246,
											"end": 1373,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1322,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 1349,
											"end": 1355,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1357,
											"end": 1361,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1363,
											"end": 1372,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1322,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 1322,
											"end": 1373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1322,
											"end": 1373,
											"name": "tag",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 1322,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1246,
											"end": 1373,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 1246,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1373,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1373,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1373,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1373,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1014,
											"end": 1380,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1014,
											"end": 1380,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1014,
											"end": 1380,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1014,
											"end": 1380,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1014,
											"end": 1380,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1014,
											"end": 1380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 772,
											"end": 1195,
											"name": "tag",
											"source": 18,
											"value": "81"
										},
										{
											"begin": 772,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 853,
											"end": 860,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 875,
											"end": 882,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 897,
											"end": 904,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 932,
											"end": 951,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 964,
											"end": 968,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 954,
											"end": 969,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 954,
											"end": 969,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "95"
										},
										{
											"begin": 954,
											"end": 969,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "96"
										},
										{
											"begin": 954,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "97"
										},
										{
											"begin": 954,
											"end": 969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "tag",
											"source": 18,
											"value": "96"
										},
										{
											"begin": 954,
											"end": 969,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "tag",
											"source": 18,
											"value": "95"
										},
										{
											"begin": 954,
											"end": 969,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 954,
											"end": 969,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 954,
											"end": 969,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 954,
											"end": 969,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 954,
											"end": 969,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 954,
											"end": 969,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "98"
										},
										{
											"begin": 954,
											"end": 969,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 954,
											"end": 969,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 954,
											"end": 969,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "CALLDATACOPY",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "tag",
											"source": 18,
											"value": "98"
										},
										{
											"begin": 954,
											"end": 969,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 954,
											"end": 969,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 932,
											"end": 969,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 932,
											"end": 969,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1105,
											"end": 1109,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 1099,
											"end": 1103,
											"name": "PUSH",
											"source": 18,
											"value": "4D"
										},
										{
											"begin": 1092,
											"end": 1096,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1084,
											"end": 1090,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1080,
											"end": 1097,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1069,
											"end": 1078,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 1057,
											"end": 1110,
											"name": "EXTCODECOPY",
											"source": 18
										},
										{
											"begin": 1151,
											"end": 1157,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1140,
											"end": 1187,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1140,
											"end": 1187,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1140,
											"end": 1187,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1140,
											"end": 1187,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1140,
											"end": 1187,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1140,
											"end": 1187,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1140,
											"end": 1187,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1140,
											"end": 1187,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1140,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "99"
										},
										{
											"begin": 1140,
											"end": 1187,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1140,
											"end": 1187,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1140,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1140,
											"end": 1187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1140,
											"end": 1187,
											"name": "tag",
											"source": 18,
											"value": "99"
										},
										{
											"begin": 1140,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1133,
											"end": 1187,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 1133,
											"end": 1187,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1133,
											"end": 1187,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 1133,
											"end": 1187,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1133,
											"end": 1187,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 1133,
											"end": 1187,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1133,
											"end": 1187,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 772,
											"end": 1195,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 772,
											"end": 1195,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 772,
											"end": 1195,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 772,
											"end": 1195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2233,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2283,
											"end": 2285,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 2263,
											"end": 2272,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2263,
											"end": 2279,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2263,
											"end": 2285,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2259,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 2259,
											"end": 2869,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2301,
											"end": 2310,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2324,
											"end": 2333,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2347,
											"end": 2354,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2599,
											"end": 2603,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2588,
											"end": 2597,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2584,
											"end": 2604,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2605,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2573,
											"end": 2605,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2573,
											"end": 2605,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2648,
											"end": 2652,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2637,
											"end": 2646,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2633,
											"end": 2653,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2627,
											"end": 2654,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2622,
											"end": 2654,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2622,
											"end": 2654,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2705,
											"end": 2709,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2694,
											"end": 2703,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2690,
											"end": 2710,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2684,
											"end": 2711,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2681,
											"end": 2682,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 2712,
											"name": "BYTE",
											"source": 10
										},
										{
											"begin": 2671,
											"end": 2712,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2671,
											"end": 2712,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 2757,
											"end": 2761,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2764,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2766,
											"end": 2767,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2769,
											"end": 2770,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 2746,
											"end": 2771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2259,
											"end": 2869,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 2259,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2818,
											"end": 2819,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2822,
											"end": 2857,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2802,
											"end": 2858,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2802,
											"end": 2858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2802,
											"end": 2858,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2802,
											"end": 2858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2145,
											"end": 2875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1786,
											"end": 2259,
											"name": "tag",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 1786,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1929,
											"end": 1933,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1946,
											"end": 1958,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 1979,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1983,
											"end": 1989,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2000,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1983,
											"end": 2000,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2037,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "1626BA7E"
										},
										{
											"begin": 2037,
											"end": 2071,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 2037,
											"end": 2071,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2073,
											"end": 2077,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2079,
											"end": 2088,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 2014,
											"end": 2089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "tag",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2089,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 1983,
											"end": 2099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "PUSH",
											"source": 11,
											"value": "3F"
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "tag",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 2099,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2099,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2099,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2099,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1945,
											"end": 2099,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2117,
											"end": 2124,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2117,
											"end": 2159,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2117,
											"end": 2159,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2117,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 2117,
											"end": 2159,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2117,
											"end": 2159,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2157,
											"end": 2159,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2140,
											"end": 2146,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2140,
											"end": 2153,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2140,
											"end": 2159,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2140,
											"end": 2159,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2117,
											"end": 2159,
											"name": "tag",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 2117,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2117,
											"end": 2251,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2117,
											"end": 2251,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2117,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 2117,
											"end": 2251,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2117,
											"end": 2251,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2250,
											"name": "PUSH",
											"source": 11,
											"value": "1626BA7E"
										},
										{
											"begin": 2216,
											"end": 2250,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 2216,
											"end": 2250,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2208,
											"end": 2251,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2208,
											"end": 2251,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2208,
											"end": 2251,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2186,
											"end": 2192,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2175,
											"end": 2204,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2175,
											"end": 2204,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2175,
											"end": 2204,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2175,
											"end": 2204,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2175,
											"end": 2204,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2175,
											"end": 2204,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2175,
											"end": 2204,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2175,
											"end": 2204,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2175,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 2175,
											"end": 2204,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2175,
											"end": 2204,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2175,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 2175,
											"end": 2204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2175,
											"end": 2204,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 2175,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2175,
											"end": 2251,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2117,
											"end": 2251,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 2117,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2109,
											"end": 2252,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2109,
											"end": 2252,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2109,
											"end": 2252,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2109,
											"end": 2252,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1786,
											"end": 2259,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1786,
											"end": 2259,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1786,
											"end": 2259,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1786,
											"end": 2259,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1786,
											"end": 2259,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1786,
											"end": 2259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5097,
											"end": 5104,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5106,
											"end": 5118,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6021,
											"end": 6087,
											"name": "PUSH",
											"source": 10,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 6016,
											"end": 6017,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6008,
											"end": 6018,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6008,
											"end": 6018,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 6008,
											"end": 6087,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6004,
											"end": 6165,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6004,
											"end": 6165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 6004,
											"end": 6165,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6119,
											"end": 6120,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6123,
											"end": 6153,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 6103,
											"end": 6154,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6154,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6154,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6154,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6154,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 6103,
											"end": 6154,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6004,
											"end": 6165,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 6004,
											"end": 6165,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6259,
											"end": 6273,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6286,
											"end": 6290,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6292,
											"end": 6293,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6295,
											"end": 6296,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6298,
											"end": 6299,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 6276,
											"end": 6300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6259,
											"end": 6300,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6259,
											"end": 6300,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6332,
											"end": 6333,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6314,
											"end": 6334,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6314,
											"end": 6334,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6314,
											"end": 6320,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6314,
											"end": 6334,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6314,
											"end": 6334,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6314,
											"end": 6334,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6310,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 6310,
											"end": 6411,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6366,
											"end": 6367,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6370,
											"end": 6399,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 6350,
											"end": 6400,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6310,
											"end": 6411,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 6310,
											"end": 6411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6429,
											"end": 6435,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6437,
											"end": 6457,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6421,
											"end": 6458,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6421,
											"end": 6458,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6421,
											"end": 6458,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6421,
											"end": 6458,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6421,
											"end": 6458,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5009,
											"end": 6465,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5009,
											"end": 6465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 21,
											"value": "125"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 21,
											"value": "126"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 21,
											"value": "127"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 21,
											"value": "128"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 21,
											"value": "129"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "185"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "128"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 21,
											"value": "185"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "186"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 21,
											"value": "186"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 21,
											"value": "130"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "188"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "129"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 21,
											"value": "188"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 21,
											"value": "14"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "190"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "191"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "126"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 21,
											"value": "191"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 21,
											"value": "190"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "192"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "130"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 21,
											"value": "192"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 21,
											"value": "131"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 21,
											"value": "132"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "195"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "131"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 21,
											"value": "195"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 21,
											"value": "17"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "197"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "132"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 21,
											"value": "197"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 21,
											"value": "133"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "tag",
											"source": 21,
											"value": "134"
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "200"
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "133"
										},
										{
											"begin": 1674,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "tag",
											"source": 21,
											"value": "200"
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1664,
											"end": 1699,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "201"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1703,
											"end": 1715,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "tag",
											"source": 21,
											"value": "201"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1601,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "tag",
											"source": 21,
											"value": "135"
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1800,
											"end": 1820,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "203"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "134"
										},
										{
											"begin": 1829,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "tag",
											"source": 21,
											"value": "203"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1729,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1874,
											"end": 1991,
											"name": "tag",
											"source": 21,
											"value": "136"
										},
										{
											"begin": 1874,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1983,
											"end": 1984,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1980,
											"end": 1981,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1973,
											"end": 1985,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 1997,
											"end": 2114,
											"name": "tag",
											"source": 21,
											"value": "137"
										},
										{
											"begin": 1997,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2106,
											"end": 2107,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2104,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2096,
											"end": 2108,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 2120,
											"end": 2222,
											"name": "tag",
											"source": 21,
											"value": "138"
										},
										{
											"begin": 2120,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2161,
											"end": 2167,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2214,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 2208,
											"end": 2215,
											"name": "NOT",
											"source": 21
										},
										{
											"begin": 2203,
											"end": 2205,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 2196,
											"end": 2201,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 2192,
											"end": 2206,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2188,
											"end": 2216,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 2178,
											"end": 2216,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2178,
											"end": 2216,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2120,
											"end": 2222,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2120,
											"end": 2222,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2120,
											"end": 2222,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2120,
											"end": 2222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2228,
											"end": 2408,
											"name": "tag",
											"source": 21,
											"value": "97"
										},
										{
											"begin": 2228,
											"end": 2408,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2276,
											"end": 2353,
											"name": "PUSH",
											"source": 21,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2273,
											"end": 2274,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2266,
											"end": 2354,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2373,
											"end": 2377,
											"name": "PUSH",
											"source": 21,
											"value": "41"
										},
										{
											"begin": 2370,
											"end": 2371,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 2363,
											"end": 2378,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2397,
											"end": 2401,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 2394,
											"end": 2395,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2387,
											"end": 2402,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 2414,
											"end": 2695,
											"name": "tag",
											"source": 21,
											"value": "139"
										},
										{
											"begin": 2414,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2497,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "209"
										},
										{
											"begin": 2519,
											"end": 2523,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2497,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "138"
										},
										{
											"begin": 2497,
											"end": 2524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2497,
											"end": 2524,
											"name": "tag",
											"source": 21,
											"value": "209"
										},
										{
											"begin": 2497,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2489,
											"end": 2495,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2485,
											"end": 2525,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2627,
											"end": 2633,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2615,
											"end": 2625,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2612,
											"end": 2634,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 2591,
											"end": 2609,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2579,
											"end": 2589,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2576,
											"end": 2610,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 2573,
											"end": 2635,
											"name": "OR",
											"source": 21
										},
										{
											"begin": 2570,
											"end": 2658,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 2570,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "210"
										},
										{
											"begin": 2570,
											"end": 2658,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 2638,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "211"
										},
										{
											"begin": 2638,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "97"
										},
										{
											"begin": 2638,
											"end": 2656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2638,
											"end": 2656,
											"name": "tag",
											"source": 21,
											"value": "211"
										},
										{
											"begin": 2638,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2570,
											"end": 2658,
											"name": "tag",
											"source": 21,
											"value": "210"
										},
										{
											"begin": 2570,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2678,
											"end": 2688,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2674,
											"end": 2676,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 2667,
											"end": 2689,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2457,
											"end": 2695,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2414,
											"end": 2695,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2414,
											"end": 2695,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2414,
											"end": 2695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2701,
											"end": 2830,
											"name": "tag",
											"source": 21,
											"value": "140"
										},
										{
											"begin": 2701,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2735,
											"end": 2741,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2762,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "213"
										},
										{
											"begin": 2762,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "125"
										},
										{
											"begin": 2762,
											"end": 2782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2762,
											"end": 2782,
											"name": "tag",
											"source": 21,
											"value": "213"
										},
										{
											"begin": 2762,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2752,
											"end": 2782,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2752,
											"end": 2782,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2791,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "214"
										},
										{
											"begin": 2819,
											"end": 2823,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2811,
											"end": 2817,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2791,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "139"
										},
										{
											"begin": 2791,
											"end": 2824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2791,
											"end": 2824,
											"name": "tag",
											"source": 21,
											"value": "214"
										},
										{
											"begin": 2791,
											"end": 2824,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2701,
											"end": 2830,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2701,
											"end": 2830,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2701,
											"end": 2830,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2701,
											"end": 2830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2836,
											"end": 3143,
											"name": "tag",
											"source": 21,
											"value": "141"
										},
										{
											"begin": 2836,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2897,
											"end": 2901,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2987,
											"end": 3005,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2976,
											"end": 3006,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 2973,
											"end": 3029,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 2973,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "216"
										},
										{
											"begin": 2973,
											"end": 3029,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3009,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "217"
										},
										{
											"begin": 3009,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "97"
										},
										{
											"begin": 3009,
											"end": 3027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3009,
											"end": 3027,
											"name": "tag",
											"source": 21,
											"value": "217"
										},
										{
											"begin": 3009,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2973,
											"end": 3029,
											"name": "tag",
											"source": 21,
											"value": "216"
										},
										{
											"begin": 2973,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3047,
											"end": 3076,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "218"
										},
										{
											"begin": 3069,
											"end": 3075,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3047,
											"end": 3076,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "138"
										},
										{
											"begin": 3047,
											"end": 3076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3047,
											"end": 3076,
											"name": "tag",
											"source": 21,
											"value": "218"
										},
										{
											"begin": 3047,
											"end": 3076,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3039,
											"end": 3076,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3039,
											"end": 3076,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3131,
											"end": 3135,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3125,
											"end": 3129,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3121,
											"end": 3136,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3113,
											"end": 3136,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3113,
											"end": 3136,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2836,
											"end": 3143,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2836,
											"end": 3143,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2836,
											"end": 3143,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2836,
											"end": 3143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3149,
											"end": 3295,
											"name": "tag",
											"source": 21,
											"value": "142"
										},
										{
											"begin": 3149,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3246,
											"end": 3252,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3241,
											"end": 3244,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3236,
											"end": 3239,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3223,
											"end": 3253,
											"name": "CALLDATACOPY",
											"source": 21
										},
										{
											"begin": 3287,
											"end": 3288,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3284,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3273,
											"end": 3276,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3269,
											"end": 3285,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3262,
											"end": 3289,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3149,
											"end": 3295,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3149,
											"end": 3295,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3149,
											"end": 3295,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3149,
											"end": 3295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3301,
											"end": 3724,
											"name": "tag",
											"source": 21,
											"value": "143"
										},
										{
											"begin": 3301,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3378,
											"end": 3383,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3403,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "221"
										},
										{
											"begin": 3419,
											"end": 3467,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "222"
										},
										{
											"begin": 3460,
											"end": 3466,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 3419,
											"end": 3467,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "141"
										},
										{
											"begin": 3419,
											"end": 3467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3419,
											"end": 3467,
											"name": "tag",
											"source": 21,
											"value": "222"
										},
										{
											"begin": 3419,
											"end": 3467,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3403,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "140"
										},
										{
											"begin": 3403,
											"end": 3468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3403,
											"end": 3468,
											"name": "tag",
											"source": 21,
											"value": "221"
										},
										{
											"begin": 3403,
											"end": 3468,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3394,
											"end": 3468,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3394,
											"end": 3468,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3491,
											"end": 3497,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3484,
											"end": 3489,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3477,
											"end": 3498,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3529,
											"end": 3533,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3522,
											"end": 3527,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3518,
											"end": 3534,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3567,
											"end": 3570,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 3558,
											"end": 3564,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 3553,
											"end": 3556,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 3549,
											"end": 3565,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3546,
											"end": 3571,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 3543,
											"end": 3655,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 3543,
											"end": 3655,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "223"
										},
										{
											"begin": 3543,
											"end": 3655,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3574,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "224"
										},
										{
											"begin": 3574,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "137"
										},
										{
											"begin": 3574,
											"end": 3653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3574,
											"end": 3653,
											"name": "tag",
											"source": 21,
											"value": "224"
										},
										{
											"begin": 3574,
											"end": 3653,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3543,
											"end": 3655,
											"name": "tag",
											"source": 21,
											"value": "223"
										},
										{
											"begin": 3543,
											"end": 3655,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3664,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "225"
										},
										{
											"begin": 3711,
											"end": 3717,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 3706,
											"end": 3709,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3701,
											"end": 3704,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 3664,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "142"
										},
										{
											"begin": 3664,
											"end": 3718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3664,
											"end": 3718,
											"name": "tag",
											"source": 21,
											"value": "225"
										},
										{
											"begin": 3664,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3384,
											"end": 3724,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3301,
											"end": 3724,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 3301,
											"end": 3724,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 3301,
											"end": 3724,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3301,
											"end": 3724,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3301,
											"end": 3724,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3301,
											"end": 3724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3743,
											"end": 4081,
											"name": "tag",
											"source": 21,
											"value": "144"
										},
										{
											"begin": 3743,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3798,
											"end": 3803,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 3850,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3840,
											"end": 3844,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 3832,
											"end": 3838,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3828,
											"end": 3845,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3824,
											"end": 3851,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 3814,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "227"
										},
										{
											"begin": 3814,
											"end": 3936,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3855,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "228"
										},
										{
											"begin": 3855,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "136"
										},
										{
											"begin": 3855,
											"end": 3934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3855,
											"end": 3934,
											"name": "tag",
											"source": 21,
											"value": "228"
										},
										{
											"begin": 3855,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3814,
											"end": 3936,
											"name": "tag",
											"source": 21,
											"value": "227"
										},
										{
											"begin": 3814,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3972,
											"end": 3978,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3959,
											"end": 3979,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "229"
										},
										{
											"begin": 4071,
											"end": 4074,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4063,
											"end": 4069,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4056,
											"end": 4060,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4048,
											"end": 4054,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 4044,
											"end": 4061,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "143"
										},
										{
											"begin": 3997,
											"end": 4075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "tag",
											"source": 21,
											"value": "229"
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3988,
											"end": 4075,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3988,
											"end": 4075,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3804,
											"end": 4081,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3743,
											"end": 4081,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 3743,
											"end": 4081,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3743,
											"end": 4081,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3743,
											"end": 4081,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3743,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4087,
											"end": 4739,
											"name": "tag",
											"source": 21,
											"value": "21"
										},
										{
											"begin": 4087,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4164,
											"end": 4170,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4172,
											"end": 4178,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4221,
											"end": 4223,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 4209,
											"end": 4218,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 4200,
											"end": 4207,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 4196,
											"end": 4219,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 4192,
											"end": 4224,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 4189,
											"end": 4308,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 4189,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "231"
										},
										{
											"begin": 4189,
											"end": 4308,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4227,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "232"
										},
										{
											"begin": 4227,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "126"
										},
										{
											"begin": 4227,
											"end": 4306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4227,
											"end": 4306,
											"name": "tag",
											"source": 21,
											"value": "232"
										},
										{
											"begin": 4227,
											"end": 4306,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4189,
											"end": 4308,
											"name": "tag",
											"source": 21,
											"value": "231"
										},
										{
											"begin": 4189,
											"end": 4308,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4347,
											"end": 4348,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4372,
											"end": 4425,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "233"
										},
										{
											"begin": 4417,
											"end": 4424,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 4408,
											"end": 4414,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4397,
											"end": 4406,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 4393,
											"end": 4415,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4372,
											"end": 4425,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "135"
										},
										{
											"begin": 4372,
											"end": 4425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4372,
											"end": 4425,
											"name": "tag",
											"source": 21,
											"value": "233"
										},
										{
											"begin": 4372,
											"end": 4425,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4362,
											"end": 4425,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4362,
											"end": 4425,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4318,
											"end": 4435,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4502,
											"end": 4504,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4491,
											"end": 4500,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 4487,
											"end": 4505,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4474,
											"end": 4506,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 4533,
											"end": 4551,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4525,
											"end": 4531,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4522,
											"end": 4552,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 4519,
											"end": 4636,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 4519,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "234"
										},
										{
											"begin": 4519,
											"end": 4636,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4555,
											"end": 4634,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "235"
										},
										{
											"begin": 4555,
											"end": 4634,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "127"
										},
										{
											"begin": 4555,
											"end": 4634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4555,
											"end": 4634,
											"name": "tag",
											"source": 21,
											"value": "235"
										},
										{
											"begin": 4555,
											"end": 4634,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4519,
											"end": 4636,
											"name": "tag",
											"source": 21,
											"value": "234"
										},
										{
											"begin": 4519,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4660,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "236"
										},
										{
											"begin": 4714,
											"end": 4721,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 4705,
											"end": 4711,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4694,
											"end": 4703,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 4690,
											"end": 4712,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4660,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "144"
										},
										{
											"begin": 4660,
											"end": 4722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4660,
											"end": 4722,
											"name": "tag",
											"source": 21,
											"value": "236"
										},
										{
											"begin": 4660,
											"end": 4722,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4650,
											"end": 4722,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4650,
											"end": 4722,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4445,
											"end": 4732,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4087,
											"end": 4739,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4087,
											"end": 4739,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4087,
											"end": 4739,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4087,
											"end": 4739,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4087,
											"end": 4739,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4087,
											"end": 4739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4745,
											"end": 4860,
											"name": "tag",
											"source": 21,
											"value": "145"
										},
										{
											"begin": 4745,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4830,
											"end": 4853,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "238"
										},
										{
											"begin": 4847,
											"end": 4852,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4830,
											"end": 4853,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "128"
										},
										{
											"begin": 4830,
											"end": 4853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4830,
											"end": 4853,
											"name": "tag",
											"source": 21,
											"value": "238"
										},
										{
											"begin": 4830,
											"end": 4853,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4825,
											"end": 4828,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4818,
											"end": 4854,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4745,
											"end": 4860,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4745,
											"end": 4860,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4745,
											"end": 4860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4866,
											"end": 5084,
											"name": "tag",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 4866,
											"end": 5084,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4995,
											"end": 4997,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4984,
											"end": 4993,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4980,
											"end": 4998,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4972,
											"end": 4998,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4972,
											"end": 4998,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5008,
											"end": 5077,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "240"
										},
										{
											"begin": 5074,
											"end": 5075,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5063,
											"end": 5072,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 5059,
											"end": 5076,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5050,
											"end": 5056,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 5008,
											"end": 5077,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "145"
										},
										{
											"begin": 5008,
											"end": 5077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5008,
											"end": 5077,
											"name": "tag",
											"source": 21,
											"value": "240"
										},
										{
											"begin": 5008,
											"end": 5077,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4866,
											"end": 5084,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4866,
											"end": 5084,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4866,
											"end": 5084,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4866,
											"end": 5084,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4866,
											"end": 5084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5090,
											"end": 5216,
											"name": "tag",
											"source": 21,
											"value": "146"
										},
										{
											"begin": 5090,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5127,
											"end": 5134,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5167,
											"end": 5209,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5160,
											"end": 5165,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5156,
											"end": 5210,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 5145,
											"end": 5210,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5145,
											"end": 5210,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5090,
											"end": 5216,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5090,
											"end": 5216,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5090,
											"end": 5216,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5090,
											"end": 5216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5222,
											"end": 5318,
											"name": "tag",
											"source": 21,
											"value": "147"
										},
										{
											"begin": 5222,
											"end": 5318,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5259,
											"end": 5266,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5288,
											"end": 5312,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "243"
										},
										{
											"begin": 5306,
											"end": 5311,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5288,
											"end": 5312,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "146"
										},
										{
											"begin": 5288,
											"end": 5312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5288,
											"end": 5312,
											"name": "tag",
											"source": 21,
											"value": "243"
										},
										{
											"begin": 5288,
											"end": 5312,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5277,
											"end": 5312,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5277,
											"end": 5312,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5222,
											"end": 5318,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5222,
											"end": 5318,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5222,
											"end": 5318,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5222,
											"end": 5318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5324,
											"end": 5442,
											"name": "tag",
											"source": 21,
											"value": "148"
										},
										{
											"begin": 5324,
											"end": 5442,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5411,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "245"
										},
										{
											"begin": 5429,
											"end": 5434,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5411,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "147"
										},
										{
											"begin": 5411,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5411,
											"end": 5435,
											"name": "tag",
											"source": 21,
											"value": "245"
										},
										{
											"begin": 5411,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5406,
											"end": 5409,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5399,
											"end": 5436,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5324,
											"end": 5442,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5324,
											"end": 5442,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5324,
											"end": 5442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5448,
											"end": 5670,
											"name": "tag",
											"source": 21,
											"value": "29"
										},
										{
											"begin": 5448,
											"end": 5670,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5579,
											"end": 5581,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 5568,
											"end": 5577,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5564,
											"end": 5582,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5556,
											"end": 5582,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5556,
											"end": 5582,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5592,
											"end": 5663,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "247"
										},
										{
											"begin": 5660,
											"end": 5661,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5649,
											"end": 5658,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 5645,
											"end": 5662,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5636,
											"end": 5642,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 5592,
											"end": 5663,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "148"
										},
										{
											"begin": 5592,
											"end": 5663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5592,
											"end": 5663,
											"name": "tag",
											"source": 21,
											"value": "247"
										},
										{
											"begin": 5592,
											"end": 5663,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5448,
											"end": 5670,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 5448,
											"end": 5670,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5448,
											"end": 5670,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5448,
											"end": 5670,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5448,
											"end": 5670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5676,
											"end": 5798,
											"name": "tag",
											"source": 21,
											"value": "149"
										},
										{
											"begin": 5676,
											"end": 5798,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5749,
											"end": 5773,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "249"
										},
										{
											"begin": 5767,
											"end": 5772,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5749,
											"end": 5773,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "147"
										},
										{
											"begin": 5749,
											"end": 5773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5749,
											"end": 5773,
											"name": "tag",
											"source": 21,
											"value": "249"
										},
										{
											"begin": 5749,
											"end": 5773,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5742,
											"end": 5747,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5739,
											"end": 5774,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 5729,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "250"
										},
										{
											"begin": 5729,
											"end": 5792,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5788,
											"end": 5789,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5785,
											"end": 5786,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5778,
											"end": 5790,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 5729,
											"end": 5792,
											"name": "tag",
											"source": 21,
											"value": "250"
										},
										{
											"begin": 5729,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5676,
											"end": 5798,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5676,
											"end": 5798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5804,
											"end": 5943,
											"name": "tag",
											"source": 21,
											"value": "150"
										},
										{
											"begin": 5804,
											"end": 5943,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5850,
											"end": 5855,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5888,
											"end": 5894,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5875,
											"end": 5895,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 5866,
											"end": 5895,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5866,
											"end": 5895,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5904,
											"end": 5937,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "252"
										},
										{
											"begin": 5931,
											"end": 5936,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5904,
											"end": 5937,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "149"
										},
										{
											"begin": 5904,
											"end": 5937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5904,
											"end": 5937,
											"name": "tag",
											"source": 21,
											"value": "252"
										},
										{
											"begin": 5904,
											"end": 5937,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5804,
											"end": 5943,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 5804,
											"end": 5943,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5804,
											"end": 5943,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5804,
											"end": 5943,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5804,
											"end": 5943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5949,
											"end": 6026,
											"name": "tag",
											"source": 21,
											"value": "151"
										},
										{
											"begin": 5949,
											"end": 6026,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5986,
											"end": 5993,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6015,
											"end": 6020,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6004,
											"end": 6020,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6004,
											"end": 6020,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5949,
											"end": 6026,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5949,
											"end": 6026,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5949,
											"end": 6026,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5949,
											"end": 6026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6032,
											"end": 6154,
											"name": "tag",
											"source": 21,
											"value": "152"
										},
										{
											"begin": 6032,
											"end": 6154,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6105,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "255"
										},
										{
											"begin": 6123,
											"end": 6128,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6105,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "151"
										},
										{
											"begin": 6105,
											"end": 6129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6105,
											"end": 6129,
											"name": "tag",
											"source": 21,
											"value": "255"
										},
										{
											"begin": 6105,
											"end": 6129,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6098,
											"end": 6103,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6095,
											"end": 6130,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 6085,
											"end": 6148,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "256"
										},
										{
											"begin": 6085,
											"end": 6148,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 6144,
											"end": 6145,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6141,
											"end": 6142,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6134,
											"end": 6146,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 6085,
											"end": 6148,
											"name": "tag",
											"source": 21,
											"value": "256"
										},
										{
											"begin": 6085,
											"end": 6148,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6032,
											"end": 6154,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6032,
											"end": 6154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6160,
											"end": 6299,
											"name": "tag",
											"source": 21,
											"value": "153"
										},
										{
											"begin": 6160,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6206,
											"end": 6211,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6244,
											"end": 6250,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6231,
											"end": 6251,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 6222,
											"end": 6251,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6222,
											"end": 6251,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6260,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "258"
										},
										{
											"begin": 6287,
											"end": 6292,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6260,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "152"
										},
										{
											"begin": 6260,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6260,
											"end": 6293,
											"name": "tag",
											"source": 21,
											"value": "258"
										},
										{
											"begin": 6260,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6160,
											"end": 6299,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6160,
											"end": 6299,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 6160,
											"end": 6299,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6160,
											"end": 6299,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6160,
											"end": 6299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6305,
											"end": 6422,
											"name": "tag",
											"source": 21,
											"value": "154"
										},
										{
											"begin": 6305,
											"end": 6422,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6414,
											"end": 6415,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6411,
											"end": 6412,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6404,
											"end": 6416,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 6428,
											"end": 6545,
											"name": "tag",
											"source": 21,
											"value": "155"
										},
										{
											"begin": 6428,
											"end": 6545,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6537,
											"end": 6538,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6534,
											"end": 6535,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6527,
											"end": 6539,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 6564,
											"end": 7116,
											"name": "tag",
											"source": 21,
											"value": "156"
										},
										{
											"begin": 6564,
											"end": 7116,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6621,
											"end": 6629,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6631,
											"end": 6637,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6681,
											"end": 6684,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 6666,
											"end": 6672,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 6662,
											"end": 6679,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6658,
											"end": 6685,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 6648,
											"end": 6770,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "262"
										},
										{
											"begin": 6648,
											"end": 6770,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 6689,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "263"
										},
										{
											"begin": 6689,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "136"
										},
										{
											"begin": 6689,
											"end": 6768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6689,
											"end": 6768,
											"name": "tag",
											"source": 21,
											"value": "263"
										},
										{
											"begin": 6689,
											"end": 6768,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6648,
											"end": 6770,
											"name": "tag",
											"source": 21,
											"value": "262"
										},
										{
											"begin": 6648,
											"end": 6770,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6802,
											"end": 6808,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6789,
											"end": 6809,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 6779,
											"end": 6809,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6779,
											"end": 6809,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6832,
											"end": 6850,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6821,
											"end": 6851,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 6818,
											"end": 6935,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 6818,
											"end": 6935,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "264"
										},
										{
											"begin": 6818,
											"end": 6935,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 6854,
											"end": 6933,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "265"
										},
										{
											"begin": 6854,
											"end": 6933,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "154"
										},
										{
											"begin": 6854,
											"end": 6933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6854,
											"end": 6933,
											"name": "tag",
											"source": 21,
											"value": "265"
										},
										{
											"begin": 6854,
											"end": 6933,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6818,
											"end": 6935,
											"name": "tag",
											"source": 21,
											"value": "264"
										},
										{
											"begin": 6818,
											"end": 6935,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6968,
											"end": 6972,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6960,
											"end": 6966,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 6956,
											"end": 6973,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6944,
											"end": 6973,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 6944,
											"end": 6973,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7022,
											"end": 7025,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 7014,
											"end": 7018,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 7006,
											"end": 7012,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7002,
											"end": 7019,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 6992,
											"end": 7000,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 6988,
											"end": 7020,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6985,
											"end": 7026,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 6982,
											"end": 7110,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 6982,
											"end": 7110,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "266"
										},
										{
											"begin": 6982,
											"end": 7110,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 7029,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "267"
										},
										{
											"begin": 7029,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "155"
										},
										{
											"begin": 7029,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7029,
											"end": 7108,
											"name": "tag",
											"source": 21,
											"value": "267"
										},
										{
											"begin": 7029,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6982,
											"end": 7110,
											"name": "tag",
											"source": 21,
											"value": "266"
										},
										{
											"begin": 6982,
											"end": 7110,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6564,
											"end": 7116,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6564,
											"end": 7116,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6564,
											"end": 7116,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6564,
											"end": 7116,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6564,
											"end": 7116,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6564,
											"end": 7116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7122,
											"end": 7939,
											"name": "tag",
											"source": 21,
											"value": "32"
										},
										{
											"begin": 7122,
											"end": 7939,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7210,
											"end": 7216,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7218,
											"end": 7224,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 7226,
											"end": 7232,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7234,
											"end": 7240,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 7283,
											"end": 7285,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 7271,
											"end": 7280,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 7262,
											"end": 7269,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 7258,
											"end": 7281,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 7254,
											"end": 7286,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 7251,
											"end": 7370,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 7251,
											"end": 7370,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "269"
										},
										{
											"begin": 7251,
											"end": 7370,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 7289,
											"end": 7368,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "270"
										},
										{
											"begin": 7289,
											"end": 7368,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "126"
										},
										{
											"begin": 7289,
											"end": 7368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7289,
											"end": 7368,
											"name": "tag",
											"source": 21,
											"value": "270"
										},
										{
											"begin": 7289,
											"end": 7368,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7251,
											"end": 7370,
											"name": "tag",
											"source": 21,
											"value": "269"
										},
										{
											"begin": 7251,
											"end": 7370,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7409,
											"end": 7410,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7434,
											"end": 7487,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "271"
										},
										{
											"begin": 7479,
											"end": 7486,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 7470,
											"end": 7476,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7459,
											"end": 7468,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 7455,
											"end": 7477,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7434,
											"end": 7487,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "150"
										},
										{
											"begin": 7434,
											"end": 7487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7434,
											"end": 7487,
											"name": "tag",
											"source": 21,
											"value": "271"
										},
										{
											"begin": 7434,
											"end": 7487,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7424,
											"end": 7487,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 7424,
											"end": 7487,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7380,
											"end": 7497,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7536,
											"end": 7538,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 7562,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "272"
										},
										{
											"begin": 7607,
											"end": 7614,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 7598,
											"end": 7604,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7587,
											"end": 7596,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 7583,
											"end": 7605,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7562,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "153"
										},
										{
											"begin": 7562,
											"end": 7615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7562,
											"end": 7615,
											"name": "tag",
											"source": 21,
											"value": "272"
										},
										{
											"begin": 7562,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7552,
											"end": 7615,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 7552,
											"end": 7615,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7507,
											"end": 7625,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7692,
											"end": 7694,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 7681,
											"end": 7690,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 7677,
											"end": 7695,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7664,
											"end": 7696,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 7723,
											"end": 7741,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7715,
											"end": 7721,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7712,
											"end": 7742,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 7709,
											"end": 7826,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 7709,
											"end": 7826,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "273"
										},
										{
											"begin": 7709,
											"end": 7826,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 7745,
											"end": 7824,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "274"
										},
										{
											"begin": 7745,
											"end": 7824,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "127"
										},
										{
											"begin": 7745,
											"end": 7824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7745,
											"end": 7824,
											"name": "tag",
											"source": 21,
											"value": "274"
										},
										{
											"begin": 7745,
											"end": 7824,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7709,
											"end": 7826,
											"name": "tag",
											"source": 21,
											"value": "273"
										},
										{
											"begin": 7709,
											"end": 7826,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7858,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "275"
										},
										{
											"begin": 7914,
											"end": 7921,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 7905,
											"end": 7911,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7894,
											"end": 7903,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 7890,
											"end": 7912,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7858,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "156"
										},
										{
											"begin": 7858,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7858,
											"end": 7922,
											"name": "tag",
											"source": 21,
											"value": "275"
										},
										{
											"begin": 7858,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7840,
											"end": 7922,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 7840,
											"end": 7922,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7840,
											"end": 7922,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 7840,
											"end": 7922,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7635,
											"end": 7932,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7122,
											"end": 7939,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 7122,
											"end": 7939,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 7122,
											"end": 7939,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7122,
											"end": 7939,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 7122,
											"end": 7939,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7122,
											"end": 7939,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 7122,
											"end": 7939,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7122,
											"end": 7939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7945,
											"end": 8043,
											"name": "tag",
											"source": 21,
											"value": "157"
										},
										{
											"begin": 7945,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7996,
											"end": 8002,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8030,
											"end": 8035,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8024,
											"end": 8036,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 8014,
											"end": 8036,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8014,
											"end": 8036,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7945,
											"end": 8043,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7945,
											"end": 8043,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7945,
											"end": 8043,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7945,
											"end": 8043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8049,
											"end": 8217,
											"name": "tag",
											"source": 21,
											"value": "158"
										},
										{
											"begin": 8049,
											"end": 8217,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8132,
											"end": 8143,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8166,
											"end": 8172,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8161,
											"end": 8164,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8154,
											"end": 8173,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8206,
											"end": 8210,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 8201,
											"end": 8204,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8197,
											"end": 8211,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8182,
											"end": 8211,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8182,
											"end": 8211,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8049,
											"end": 8217,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 8049,
											"end": 8217,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 8049,
											"end": 8217,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8049,
											"end": 8217,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8049,
											"end": 8217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8223,
											"end": 8469,
											"name": "tag",
											"source": 21,
											"value": "159"
										},
										{
											"begin": 8223,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8304,
											"end": 8305,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8314,
											"end": 8427,
											"name": "tag",
											"source": 21,
											"value": "279"
										},
										{
											"begin": 8314,
											"end": 8427,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8328,
											"end": 8334,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 8325,
											"end": 8326,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8322,
											"end": 8335,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 8314,
											"end": 8427,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 8314,
											"end": 8427,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "281"
										},
										{
											"begin": 8314,
											"end": 8427,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 8413,
											"end": 8414,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 8408,
											"end": 8411,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8404,
											"end": 8415,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8398,
											"end": 8416,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 8394,
											"end": 8395,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8389,
											"end": 8392,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 8385,
											"end": 8396,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8378,
											"end": 8417,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8350,
											"end": 8352,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 8347,
											"end": 8348,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8343,
											"end": 8353,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8338,
											"end": 8353,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8338,
											"end": 8353,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8314,
											"end": 8427,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "279"
										},
										{
											"begin": 8314,
											"end": 8427,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8314,
											"end": 8427,
											"name": "tag",
											"source": 21,
											"value": "281"
										},
										{
											"begin": 8314,
											"end": 8427,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8461,
											"end": 8462,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8452,
											"end": 8458,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 8447,
											"end": 8450,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 8443,
											"end": 8459,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8436,
											"end": 8463,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8285,
											"end": 8469,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8223,
											"end": 8469,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8223,
											"end": 8469,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8223,
											"end": 8469,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8223,
											"end": 8469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8475,
											"end": 8848,
											"name": "tag",
											"source": 21,
											"value": "160"
										},
										{
											"begin": 8475,
											"end": 8848,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8561,
											"end": 8564,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8589,
											"end": 8627,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "283"
										},
										{
											"begin": 8621,
											"end": 8626,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8589,
											"end": 8627,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "157"
										},
										{
											"begin": 8589,
											"end": 8627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8589,
											"end": 8627,
											"name": "tag",
											"source": 21,
											"value": "283"
										},
										{
											"begin": 8589,
											"end": 8627,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8643,
											"end": 8713,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "284"
										},
										{
											"begin": 8706,
											"end": 8712,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8701,
											"end": 8704,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 8643,
											"end": 8713,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "158"
										},
										{
											"begin": 8643,
											"end": 8713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8643,
											"end": 8713,
											"name": "tag",
											"source": 21,
											"value": "284"
										},
										{
											"begin": 8643,
											"end": 8713,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8636,
											"end": 8713,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 8636,
											"end": 8713,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8722,
											"end": 8787,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "285"
										},
										{
											"begin": 8780,
											"end": 8786,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8775,
											"end": 8778,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 8768,
											"end": 8772,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 8761,
											"end": 8766,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 8757,
											"end": 8773,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8722,
											"end": 8787,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "159"
										},
										{
											"begin": 8722,
											"end": 8787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8722,
											"end": 8787,
											"name": "tag",
											"source": 21,
											"value": "285"
										},
										{
											"begin": 8722,
											"end": 8787,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8812,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "286"
										},
										{
											"begin": 8834,
											"end": 8840,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8812,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "138"
										},
										{
											"begin": 8812,
											"end": 8841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8812,
											"end": 8841,
											"name": "tag",
											"source": 21,
											"value": "286"
										},
										{
											"begin": 8812,
											"end": 8841,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8807,
											"end": 8810,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 8803,
											"end": 8842,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8796,
											"end": 8842,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 8796,
											"end": 8842,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8565,
											"end": 8848,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8475,
											"end": 8848,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 8475,
											"end": 8848,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 8475,
											"end": 8848,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8475,
											"end": 8848,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8475,
											"end": 8848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8854,
											"end": 9163,
											"name": "tag",
											"source": 21,
											"value": "35"
										},
										{
											"begin": 8854,
											"end": 9163,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8965,
											"end": 8969,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9003,
											"end": 9005,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 8992,
											"end": 9001,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8988,
											"end": 9006,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8980,
											"end": 9006,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8980,
											"end": 9006,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9052,
											"end": 9061,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 9046,
											"end": 9050,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 9042,
											"end": 9062,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 9038,
											"end": 9039,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9027,
											"end": 9036,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 9023,
											"end": 9040,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9016,
											"end": 9063,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 9080,
											"end": 9156,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "288"
										},
										{
											"begin": 9151,
											"end": 9155,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 9142,
											"end": 9148,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 9080,
											"end": 9156,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "160"
										},
										{
											"begin": 9080,
											"end": 9156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9080,
											"end": 9156,
											"name": "tag",
											"source": 21,
											"value": "288"
										},
										{
											"begin": 9080,
											"end": 9156,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9072,
											"end": 9156,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 9072,
											"end": 9156,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8854,
											"end": 9163,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 8854,
											"end": 9163,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 8854,
											"end": 9163,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8854,
											"end": 9163,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8854,
											"end": 9163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9169,
											"end": 9287,
											"name": "tag",
											"source": 21,
											"value": "161"
										},
										{
											"begin": 9169,
											"end": 9287,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9256,
											"end": 9280,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "290"
										},
										{
											"begin": 9274,
											"end": 9279,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 9256,
											"end": 9280,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "151"
										},
										{
											"begin": 9256,
											"end": 9280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9256,
											"end": 9280,
											"name": "tag",
											"source": 21,
											"value": "290"
										},
										{
											"begin": 9256,
											"end": 9280,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9251,
											"end": 9254,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9244,
											"end": 9281,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 9169,
											"end": 9287,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9169,
											"end": 9287,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9169,
											"end": 9287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9293,
											"end": 9515,
											"name": "tag",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 9293,
											"end": 9515,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9386,
											"end": 9390,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9424,
											"end": 9426,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 9413,
											"end": 9422,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9409,
											"end": 9427,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9401,
											"end": 9427,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 9401,
											"end": 9427,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9437,
											"end": 9508,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "292"
										},
										{
											"begin": 9505,
											"end": 9506,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9494,
											"end": 9503,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 9490,
											"end": 9507,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9481,
											"end": 9487,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 9437,
											"end": 9508,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "161"
										},
										{
											"begin": 9437,
											"end": 9508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9437,
											"end": 9508,
											"name": "tag",
											"source": 21,
											"value": "292"
										},
										{
											"begin": 9437,
											"end": 9508,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9293,
											"end": 9515,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 9293,
											"end": 9515,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 9293,
											"end": 9515,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9293,
											"end": 9515,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9293,
											"end": 9515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9521,
											"end": 9963,
											"name": "tag",
											"source": 21,
											"value": "45"
										},
										{
											"begin": 9521,
											"end": 9963,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9670,
											"end": 9674,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9708,
											"end": 9710,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 9697,
											"end": 9706,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9693,
											"end": 9711,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9685,
											"end": 9711,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 9685,
											"end": 9711,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9721,
											"end": 9792,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "294"
										},
										{
											"begin": 9789,
											"end": 9790,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9778,
											"end": 9787,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 9774,
											"end": 9791,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9765,
											"end": 9771,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 9721,
											"end": 9792,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "161"
										},
										{
											"begin": 9721,
											"end": 9792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9721,
											"end": 9792,
											"name": "tag",
											"source": 21,
											"value": "294"
										},
										{
											"begin": 9721,
											"end": 9792,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9802,
											"end": 9874,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "295"
										},
										{
											"begin": 9870,
											"end": 9872,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 9859,
											"end": 9868,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 9855,
											"end": 9873,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9846,
											"end": 9852,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 9802,
											"end": 9874,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "148"
										},
										{
											"begin": 9802,
											"end": 9874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9802,
											"end": 9874,
											"name": "tag",
											"source": 21,
											"value": "295"
										},
										{
											"begin": 9802,
											"end": 9874,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9884,
											"end": 9956,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "296"
										},
										{
											"begin": 9952,
											"end": 9954,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 9941,
											"end": 9950,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 9937,
											"end": 9955,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9928,
											"end": 9934,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 9884,
											"end": 9956,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "161"
										},
										{
											"begin": 9884,
											"end": 9956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9884,
											"end": 9956,
											"name": "tag",
											"source": 21,
											"value": "296"
										},
										{
											"begin": 9884,
											"end": 9956,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9521,
											"end": 9963,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 9521,
											"end": 9963,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 9521,
											"end": 9963,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9521,
											"end": 9963,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9521,
											"end": 9963,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9521,
											"end": 9963,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9521,
											"end": 9963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9969,
											"end": 10112,
											"name": "tag",
											"source": 21,
											"value": "162"
										},
										{
											"begin": 9969,
											"end": 10112,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10026,
											"end": 10031,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 10057,
											"end": 10063,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 10051,
											"end": 10064,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 10042,
											"end": 10064,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 10042,
											"end": 10064,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10073,
											"end": 10106,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "298"
										},
										{
											"begin": 10100,
											"end": 10105,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 10073,
											"end": 10106,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "152"
										},
										{
											"begin": 10073,
											"end": 10106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10073,
											"end": 10106,
											"name": "tag",
											"source": 21,
											"value": "298"
										},
										{
											"begin": 10073,
											"end": 10106,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9969,
											"end": 10112,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 9969,
											"end": 10112,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 9969,
											"end": 10112,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9969,
											"end": 10112,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9969,
											"end": 10112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10118,
											"end": 10261,
											"name": "tag",
											"source": 21,
											"value": "163"
										},
										{
											"begin": 10118,
											"end": 10261,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10175,
											"end": 10180,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 10206,
											"end": 10212,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 10200,
											"end": 10213,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 10191,
											"end": 10213,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 10191,
											"end": 10213,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10222,
											"end": 10255,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "300"
										},
										{
											"begin": 10249,
											"end": 10254,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 10222,
											"end": 10255,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "149"
										},
										{
											"begin": 10222,
											"end": 10255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10222,
											"end": 10255,
											"name": "tag",
											"source": 21,
											"value": "300"
										},
										{
											"begin": 10222,
											"end": 10255,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10118,
											"end": 10261,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 10118,
											"end": 10261,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 10118,
											"end": 10261,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10118,
											"end": 10261,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10118,
											"end": 10261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10267,
											"end": 10930,
											"name": "tag",
											"source": 21,
											"value": "57"
										},
										{
											"begin": 10267,
											"end": 10930,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10355,
											"end": 10361,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 10363,
											"end": 10369,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 10371,
											"end": 10377,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 10420,
											"end": 10422,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 10408,
											"end": 10417,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 10399,
											"end": 10406,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 10395,
											"end": 10418,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 10391,
											"end": 10423,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 10388,
											"end": 10507,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 10388,
											"end": 10507,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "302"
										},
										{
											"begin": 10388,
											"end": 10507,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 10426,
											"end": 10505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "303"
										},
										{
											"begin": 10426,
											"end": 10505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "126"
										},
										{
											"begin": 10426,
											"end": 10505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10426,
											"end": 10505,
											"name": "tag",
											"source": 21,
											"value": "303"
										},
										{
											"begin": 10426,
											"end": 10505,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10388,
											"end": 10507,
											"name": "tag",
											"source": 21,
											"value": "302"
										},
										{
											"begin": 10388,
											"end": 10507,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10546,
											"end": 10547,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 10571,
											"end": 10635,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "304"
										},
										{
											"begin": 10627,
											"end": 10634,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 10618,
											"end": 10624,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10607,
											"end": 10616,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 10603,
											"end": 10625,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10571,
											"end": 10635,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "162"
										},
										{
											"begin": 10571,
											"end": 10635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10571,
											"end": 10635,
											"name": "tag",
											"source": 21,
											"value": "304"
										},
										{
											"begin": 10571,
											"end": 10635,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10561,
											"end": 10635,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 10561,
											"end": 10635,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10517,
											"end": 10645,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10684,
											"end": 10686,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 10710,
											"end": 10774,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "305"
										},
										{
											"begin": 10766,
											"end": 10773,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 10757,
											"end": 10763,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10746,
											"end": 10755,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 10742,
											"end": 10764,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10710,
											"end": 10774,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "163"
										},
										{
											"begin": 10710,
											"end": 10774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10710,
											"end": 10774,
											"name": "tag",
											"source": 21,
											"value": "305"
										},
										{
											"begin": 10710,
											"end": 10774,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10700,
											"end": 10774,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 10700,
											"end": 10774,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10655,
											"end": 10784,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10823,
											"end": 10825,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 10849,
											"end": 10913,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "306"
										},
										{
											"begin": 10905,
											"end": 10912,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 10896,
											"end": 10902,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10885,
											"end": 10894,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 10881,
											"end": 10903,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10849,
											"end": 10913,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "162"
										},
										{
											"begin": 10849,
											"end": 10913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10849,
											"end": 10913,
											"name": "tag",
											"source": 21,
											"value": "306"
										},
										{
											"begin": 10849,
											"end": 10913,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10839,
											"end": 10913,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 10839,
											"end": 10913,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10794,
											"end": 10923,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10267,
											"end": 10930,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 10267,
											"end": 10930,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10267,
											"end": 10930,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 10267,
											"end": 10930,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10267,
											"end": 10930,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 10267,
											"end": 10930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10936,
											"end": 11287,
											"name": "tag",
											"source": 21,
											"value": "63"
										},
										{
											"begin": 10936,
											"end": 11287,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11006,
											"end": 11012,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 11055,
											"end": 11057,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 11043,
											"end": 11052,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11034,
											"end": 11041,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 11030,
											"end": 11053,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 11026,
											"end": 11058,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 11023,
											"end": 11142,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 11023,
											"end": 11142,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "308"
										},
										{
											"begin": 11023,
											"end": 11142,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 11061,
											"end": 11140,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "309"
										},
										{
											"begin": 11061,
											"end": 11140,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "126"
										},
										{
											"begin": 11061,
											"end": 11140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11061,
											"end": 11140,
											"name": "tag",
											"source": 21,
											"value": "309"
										},
										{
											"begin": 11061,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11023,
											"end": 11142,
											"name": "tag",
											"source": 21,
											"value": "308"
										},
										{
											"begin": 11023,
											"end": 11142,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11181,
											"end": 11182,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 11206,
											"end": 11270,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "310"
										},
										{
											"begin": 11262,
											"end": 11269,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 11253,
											"end": 11259,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11242,
											"end": 11251,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11206,
											"end": 11270,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "163"
										},
										{
											"begin": 11206,
											"end": 11270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11206,
											"end": 11270,
											"name": "tag",
											"source": 21,
											"value": "310"
										},
										{
											"begin": 11206,
											"end": 11270,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11196,
											"end": 11270,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 11196,
											"end": 11270,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11152,
											"end": 11280,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10936,
											"end": 11287,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 10936,
											"end": 11287,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 10936,
											"end": 11287,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10936,
											"end": 11287,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10936,
											"end": 11287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11293,
											"end": 11462,
											"name": "tag",
											"source": 21,
											"value": "164"
										},
										{
											"begin": 11293,
											"end": 11462,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11377,
											"end": 11388,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 11411,
											"end": 11417,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11406,
											"end": 11409,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11399,
											"end": 11418,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11451,
											"end": 11455,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 11446,
											"end": 11449,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11442,
											"end": 11456,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11427,
											"end": 11456,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 11427,
											"end": 11456,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11293,
											"end": 11462,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 11293,
											"end": 11462,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 11293,
											"end": 11462,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11293,
											"end": 11462,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11293,
											"end": 11462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11468,
											"end": 11633,
											"name": "tag",
											"source": 21,
											"value": "165"
										},
										{
											"begin": 11468,
											"end": 11633,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11608,
											"end": 11625,
											"name": "PUSH",
											"source": 21,
											"value": "4E6F7420746F6B656E206F776E65720000000000000000000000000000000000"
										},
										{
											"begin": 11604,
											"end": 11605,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 11596,
											"end": 11602,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11592,
											"end": 11606,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11585,
											"end": 11626,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11468,
											"end": 11633,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11468,
											"end": 11633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11639,
											"end": 12005,
											"name": "tag",
											"source": 21,
											"value": "166"
										},
										{
											"begin": 11639,
											"end": 12005,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11781,
											"end": 11784,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 11802,
											"end": 11869,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "314"
										},
										{
											"begin": 11866,
											"end": 11868,
											"name": "PUSH",
											"source": 21,
											"value": "F"
										},
										{
											"begin": 11861,
											"end": 11864,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 11802,
											"end": 11869,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "164"
										},
										{
											"begin": 11802,
											"end": 11869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11802,
											"end": 11869,
											"name": "tag",
											"source": 21,
											"value": "314"
										},
										{
											"begin": 11802,
											"end": 11869,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11795,
											"end": 11869,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 11795,
											"end": 11869,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11878,
											"end": 11971,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "315"
										},
										{
											"begin": 11967,
											"end": 11970,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11878,
											"end": 11971,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "165"
										},
										{
											"begin": 11878,
											"end": 11971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11878,
											"end": 11971,
											"name": "tag",
											"source": 21,
											"value": "315"
										},
										{
											"begin": 11878,
											"end": 11971,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11996,
											"end": 11998,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 11991,
											"end": 11994,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11987,
											"end": 11999,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11980,
											"end": 11999,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 11980,
											"end": 11999,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11639,
											"end": 12005,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 11639,
											"end": 12005,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 11639,
											"end": 12005,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11639,
											"end": 12005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12011,
											"end": 12430,
											"name": "tag",
											"source": 21,
											"value": "68"
										},
										{
											"begin": 12011,
											"end": 12430,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12177,
											"end": 12181,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 12215,
											"end": 12217,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 12204,
											"end": 12213,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12200,
											"end": 12218,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12192,
											"end": 12218,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12192,
											"end": 12218,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12264,
											"end": 12273,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12258,
											"end": 12262,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12254,
											"end": 12274,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 12250,
											"end": 12251,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 12239,
											"end": 12248,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 12235,
											"end": 12252,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12228,
											"end": 12275,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12292,
											"end": 12423,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "317"
										},
										{
											"begin": 12418,
											"end": 12422,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12292,
											"end": 12423,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "166"
										},
										{
											"begin": 12292,
											"end": 12423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12292,
											"end": 12423,
											"name": "tag",
											"source": 21,
											"value": "317"
										},
										{
											"begin": 12292,
											"end": 12423,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12284,
											"end": 12423,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12284,
											"end": 12423,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12011,
											"end": 12430,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 12011,
											"end": 12430,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12011,
											"end": 12430,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12011,
											"end": 12430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12436,
											"end": 12616,
											"name": "tag",
											"source": 21,
											"value": "167"
										},
										{
											"begin": 12436,
											"end": 12616,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12484,
											"end": 12561,
											"name": "PUSH",
											"source": 21,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12481,
											"end": 12482,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 12474,
											"end": 12562,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12581,
											"end": 12585,
											"name": "PUSH",
											"source": 21,
											"value": "11"
										},
										{
											"begin": 12578,
											"end": 12579,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 12571,
											"end": 12586,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12605,
											"end": 12609,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 12602,
											"end": 12603,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 12595,
											"end": 12610,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 12622,
											"end": 12855,
											"name": "tag",
											"source": 21,
											"value": "70"
										},
										{
											"begin": 12622,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12661,
											"end": 12664,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 12684,
											"end": 12708,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "320"
										},
										{
											"begin": 12702,
											"end": 12707,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12684,
											"end": 12708,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "151"
										},
										{
											"begin": 12684,
											"end": 12708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12684,
											"end": 12708,
											"name": "tag",
											"source": 21,
											"value": "320"
										},
										{
											"begin": 12684,
											"end": 12708,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12675,
											"end": 12708,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 12675,
											"end": 12708,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12730,
											"end": 12796,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12723,
											"end": 12728,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12720,
											"end": 12797,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 12717,
											"end": 12820,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "321"
										},
										{
											"begin": 12717,
											"end": 12820,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 12800,
											"end": 12818,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "322"
										},
										{
											"begin": 12800,
											"end": 12818,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "167"
										},
										{
											"begin": 12800,
											"end": 12818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12800,
											"end": 12818,
											"name": "tag",
											"source": 21,
											"value": "322"
										},
										{
											"begin": 12800,
											"end": 12818,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12717,
											"end": 12820,
											"name": "tag",
											"source": 21,
											"value": "321"
										},
										{
											"begin": 12717,
											"end": 12820,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12847,
											"end": 12848,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 12840,
											"end": 12845,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12836,
											"end": 12849,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12829,
											"end": 12849,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12829,
											"end": 12849,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12622,
											"end": 12855,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 12622,
											"end": 12855,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12622,
											"end": 12855,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12622,
											"end": 12855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12883,
											"end": 13197,
											"name": "tag",
											"source": 21,
											"value": "168"
										},
										{
											"begin": 12883,
											"end": 13197,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12979,
											"end": 12982,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13000,
											"end": 13070,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "324"
										},
										{
											"begin": 13063,
											"end": 13069,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 13058,
											"end": 13061,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 13000,
											"end": 13070,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "158"
										},
										{
											"begin": 13000,
											"end": 13070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13000,
											"end": 13070,
											"name": "tag",
											"source": 21,
											"value": "324"
										},
										{
											"begin": 13000,
											"end": 13070,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12993,
											"end": 13070,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 12993,
											"end": 13070,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13080,
											"end": 13136,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "325"
										},
										{
											"begin": 13129,
											"end": 13135,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 13124,
											"end": 13127,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 13117,
											"end": 13122,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 13080,
											"end": 13136,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "142"
										},
										{
											"begin": 13080,
											"end": 13136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13080,
											"end": 13136,
											"name": "tag",
											"source": 21,
											"value": "325"
										},
										{
											"begin": 13080,
											"end": 13136,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13161,
											"end": 13190,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "326"
										},
										{
											"begin": 13183,
											"end": 13189,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 13161,
											"end": 13190,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "138"
										},
										{
											"begin": 13161,
											"end": 13190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13161,
											"end": 13190,
											"name": "tag",
											"source": 21,
											"value": "326"
										},
										{
											"begin": 13161,
											"end": 13190,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13156,
											"end": 13159,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 13152,
											"end": 13191,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13145,
											"end": 13191,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 13145,
											"end": 13191,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12883,
											"end": 13197,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 12883,
											"end": 13197,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 12883,
											"end": 13197,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12883,
											"end": 13197,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12883,
											"end": 13197,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12883,
											"end": 13197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13203,
											"end": 13532,
											"name": "tag",
											"source": 21,
											"value": "72"
										},
										{
											"begin": 13203,
											"end": 13532,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13324,
											"end": 13328,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13362,
											"end": 13364,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 13351,
											"end": 13360,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 13347,
											"end": 13365,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13339,
											"end": 13365,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 13339,
											"end": 13365,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13411,
											"end": 13420,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 13405,
											"end": 13409,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 13401,
											"end": 13421,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 13397,
											"end": 13398,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13386,
											"end": 13395,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 13382,
											"end": 13399,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13375,
											"end": 13422,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 13439,
											"end": 13525,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "328"
										},
										{
											"begin": 13520,
											"end": 13524,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 13511,
											"end": 13517,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 13503,
											"end": 13509,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 13439,
											"end": 13525,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "168"
										},
										{
											"begin": 13439,
											"end": 13525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13439,
											"end": 13525,
											"name": "tag",
											"source": 21,
											"value": "328"
										},
										{
											"begin": 13439,
											"end": 13525,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13431,
											"end": 13525,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 13431,
											"end": 13525,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13203,
											"end": 13532,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 13203,
											"end": 13532,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 13203,
											"end": 13532,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13203,
											"end": 13532,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13203,
											"end": 13532,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13203,
											"end": 13532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13538,
											"end": 13685,
											"name": "tag",
											"source": 21,
											"value": "169"
										},
										{
											"begin": 13538,
											"end": 13685,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13639,
											"end": 13650,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13676,
											"end": 13679,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 13661,
											"end": 13679,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 13661,
											"end": 13679,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13538,
											"end": 13685,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 13538,
											"end": 13685,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 13538,
											"end": 13685,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13538,
											"end": 13685,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13538,
											"end": 13685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13713,
											"end": 14040,
											"name": "tag",
											"source": 21,
											"value": "170"
										},
										{
											"begin": 13713,
											"end": 14040,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13827,
											"end": 13830,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13848,
											"end": 13936,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "331"
										},
										{
											"begin": 13929,
											"end": 13935,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 13924,
											"end": 13927,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 13848,
											"end": 13936,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "169"
										},
										{
											"begin": 13848,
											"end": 13936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13848,
											"end": 13936,
											"name": "tag",
											"source": 21,
											"value": "331"
										},
										{
											"begin": 13848,
											"end": 13936,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13841,
											"end": 13936,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 13841,
											"end": 13936,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13946,
											"end": 14002,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "332"
										},
										{
											"begin": 13995,
											"end": 14001,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 13990,
											"end": 13993,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 13983,
											"end": 13988,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 13946,
											"end": 14002,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "142"
										},
										{
											"begin": 13946,
											"end": 14002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13946,
											"end": 14002,
											"name": "tag",
											"source": 21,
											"value": "332"
										},
										{
											"begin": 13946,
											"end": 14002,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14027,
											"end": 14033,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14022,
											"end": 14025,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 14018,
											"end": 14034,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14011,
											"end": 14034,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 14011,
											"end": 14034,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13713,
											"end": 14040,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 13713,
											"end": 14040,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 13713,
											"end": 14040,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13713,
											"end": 14040,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13713,
											"end": 14040,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13713,
											"end": 14040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14046,
											"end": 14337,
											"name": "tag",
											"source": 21,
											"value": "74"
										},
										{
											"begin": 14046,
											"end": 14337,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14186,
											"end": 14189,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 14208,
											"end": 14311,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "334"
										},
										{
											"begin": 14307,
											"end": 14310,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14298,
											"end": 14304,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 14290,
											"end": 14296,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 14208,
											"end": 14311,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "170"
										},
										{
											"begin": 14208,
											"end": 14311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14208,
											"end": 14311,
											"name": "tag",
											"source": 21,
											"value": "334"
										},
										{
											"begin": 14208,
											"end": 14311,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14201,
											"end": 14311,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 14201,
											"end": 14311,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14328,
											"end": 14331,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 14321,
											"end": 14331,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 14321,
											"end": 14331,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14046,
											"end": 14337,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 14046,
											"end": 14337,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 14046,
											"end": 14337,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14046,
											"end": 14337,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14046,
											"end": 14337,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14046,
											"end": 14337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14343,
											"end": 14523,
											"name": "tag",
											"source": 21,
											"value": "87"
										},
										{
											"begin": 14343,
											"end": 14523,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14391,
											"end": 14468,
											"name": "PUSH",
											"source": 21,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14388,
											"end": 14389,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 14381,
											"end": 14469,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 14488,
											"end": 14492,
											"name": "PUSH",
											"source": 21,
											"value": "21"
										},
										{
											"begin": 14485,
											"end": 14486,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 14478,
											"end": 14493,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 14512,
											"end": 14516,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 14509,
											"end": 14510,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 14502,
											"end": 14517,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 14529,
											"end": 14633,
											"name": "tag",
											"source": 21,
											"value": "171"
										},
										{
											"begin": 14529,
											"end": 14633,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14574,
											"end": 14581,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 14603,
											"end": 14627,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "337"
										},
										{
											"begin": 14621,
											"end": 14626,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14603,
											"end": 14627,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "146"
										},
										{
											"begin": 14603,
											"end": 14627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14603,
											"end": 14627,
											"name": "tag",
											"source": 21,
											"value": "337"
										},
										{
											"begin": 14603,
											"end": 14627,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14592,
											"end": 14627,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 14592,
											"end": 14627,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14529,
											"end": 14633,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 14529,
											"end": 14633,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 14529,
											"end": 14633,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14529,
											"end": 14633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14639,
											"end": 14777,
											"name": "tag",
											"source": 21,
											"value": "172"
										},
										{
											"begin": 14639,
											"end": 14777,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14720,
											"end": 14752,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "339"
										},
										{
											"begin": 14746,
											"end": 14751,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 14720,
											"end": 14752,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "171"
										},
										{
											"begin": 14720,
											"end": 14752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14720,
											"end": 14752,
											"name": "tag",
											"source": 21,
											"value": "339"
										},
										{
											"begin": 14720,
											"end": 14752,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14713,
											"end": 14718,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 14710,
											"end": 14753,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 14700,
											"end": 14771,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "340"
										},
										{
											"begin": 14700,
											"end": 14771,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 14767,
											"end": 14768,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 14764,
											"end": 14765,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 14757,
											"end": 14769,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 14700,
											"end": 14771,
											"name": "tag",
											"source": 21,
											"value": "340"
										},
										{
											"begin": 14700,
											"end": 14771,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14639,
											"end": 14777,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14639,
											"end": 14777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14783,
											"end": 14942,
											"name": "tag",
											"source": 21,
											"value": "173"
										},
										{
											"begin": 14783,
											"end": 14942,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14848,
											"end": 14853,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 14879,
											"end": 14885,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 14873,
											"end": 14886,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 14864,
											"end": 14886,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 14864,
											"end": 14886,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14895,
											"end": 14936,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "342"
										},
										{
											"begin": 14930,
											"end": 14935,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 14895,
											"end": 14936,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "172"
										},
										{
											"begin": 14895,
											"end": 14936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14895,
											"end": 14936,
											"name": "tag",
											"source": 21,
											"value": "342"
										},
										{
											"begin": 14895,
											"end": 14936,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14783,
											"end": 14942,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 14783,
											"end": 14942,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 14783,
											"end": 14942,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14783,
											"end": 14942,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14783,
											"end": 14942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14948,
											"end": 15627,
											"name": "tag",
											"source": 21,
											"value": "100"
										},
										{
											"begin": 14948,
											"end": 15627,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15044,
											"end": 15050,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 15052,
											"end": 15058,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 15060,
											"end": 15066,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 15109,
											"end": 15111,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 15097,
											"end": 15106,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 15088,
											"end": 15095,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 15084,
											"end": 15107,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 15080,
											"end": 15112,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 15077,
											"end": 15196,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 15077,
											"end": 15196,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "344"
										},
										{
											"begin": 15077,
											"end": 15196,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 15115,
											"end": 15194,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "345"
										},
										{
											"begin": 15115,
											"end": 15194,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "126"
										},
										{
											"begin": 15115,
											"end": 15194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 15115,
											"end": 15194,
											"name": "tag",
											"source": 21,
											"value": "345"
										},
										{
											"begin": 15115,
											"end": 15194,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15077,
											"end": 15196,
											"name": "tag",
											"source": 21,
											"value": "344"
										},
										{
											"begin": 15077,
											"end": 15196,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15235,
											"end": 15236,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 15260,
											"end": 15324,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "346"
										},
										{
											"begin": 15316,
											"end": 15323,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 15307,
											"end": 15313,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 15296,
											"end": 15305,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 15292,
											"end": 15314,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15260,
											"end": 15324,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "162"
										},
										{
											"begin": 15260,
											"end": 15324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 15260,
											"end": 15324,
											"name": "tag",
											"source": 21,
											"value": "346"
										},
										{
											"begin": 15260,
											"end": 15324,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15250,
											"end": 15324,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 15250,
											"end": 15324,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 15206,
											"end": 15334,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 15373,
											"end": 15375,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 15399,
											"end": 15471,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "347"
										},
										{
											"begin": 15463,
											"end": 15470,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 15454,
											"end": 15460,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 15443,
											"end": 15452,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 15439,
											"end": 15461,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15399,
											"end": 15471,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "173"
										},
										{
											"begin": 15399,
											"end": 15471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 15399,
											"end": 15471,
											"name": "tag",
											"source": 21,
											"value": "347"
										},
										{
											"begin": 15399,
											"end": 15471,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15389,
											"end": 15471,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 15389,
											"end": 15471,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 15344,
											"end": 15481,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 15520,
											"end": 15522,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 15546,
											"end": 15610,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "348"
										},
										{
											"begin": 15602,
											"end": 15609,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 15593,
											"end": 15599,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 15582,
											"end": 15591,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 15578,
											"end": 15600,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15546,
											"end": 15610,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "162"
										},
										{
											"begin": 15546,
											"end": 15610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 15546,
											"end": 15610,
											"name": "tag",
											"source": 21,
											"value": "348"
										},
										{
											"begin": 15546,
											"end": 15610,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15536,
											"end": 15610,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 15536,
											"end": 15610,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 15491,
											"end": 15620,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14948,
											"end": 15627,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 14948,
											"end": 15627,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14948,
											"end": 15627,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 14948,
											"end": 15627,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14948,
											"end": 15627,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 14948,
											"end": 15627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 15633,
											"end": 15751,
											"name": "tag",
											"source": 21,
											"value": "174"
										},
										{
											"begin": 15633,
											"end": 15751,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15720,
											"end": 15744,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "350"
										},
										{
											"begin": 15738,
											"end": 15743,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 15720,
											"end": 15744,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "133"
										},
										{
											"begin": 15720,
											"end": 15744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 15720,
											"end": 15744,
											"name": "tag",
											"source": 21,
											"value": "350"
										},
										{
											"begin": 15720,
											"end": 15744,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15715,
											"end": 15718,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 15708,
											"end": 15745,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 15633,
											"end": 15751,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 15633,
											"end": 15751,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 15633,
											"end": 15751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 15757,
											"end": 16176,
											"name": "tag",
											"source": 21,
											"value": "108"
										},
										{
											"begin": 15757,
											"end": 16176,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15896,
											"end": 15900,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 15934,
											"end": 15936,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 15923,
											"end": 15932,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 15919,
											"end": 15937,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15911,
											"end": 15937,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 15911,
											"end": 15937,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 15947,
											"end": 16018,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "352"
										},
										{
											"begin": 16015,
											"end": 16016,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 16004,
											"end": 16013,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 16000,
											"end": 16017,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15991,
											"end": 15997,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 15947,
											"end": 16018,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "174"
										},
										{
											"begin": 15947,
											"end": 16018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 15947,
											"end": 16018,
											"name": "tag",
											"source": 21,
											"value": "352"
										},
										{
											"begin": 15947,
											"end": 16018,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16065,
											"end": 16074,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 16059,
											"end": 16063,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 16055,
											"end": 16075,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 16050,
											"end": 16052,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 16039,
											"end": 16048,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 16035,
											"end": 16053,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16028,
											"end": 16076,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 16093,
											"end": 16169,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "353"
										},
										{
											"begin": 16164,
											"end": 16168,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 16155,
											"end": 16161,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 16093,
											"end": 16169,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "160"
										},
										{
											"begin": 16093,
											"end": 16169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 16093,
											"end": 16169,
											"name": "tag",
											"source": 21,
											"value": "353"
										},
										{
											"begin": 16093,
											"end": 16169,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16085,
											"end": 16169,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 16085,
											"end": 16169,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 15757,
											"end": 16176,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 15757,
											"end": 16176,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 15757,
											"end": 16176,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 15757,
											"end": 16176,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 15757,
											"end": 16176,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 15757,
											"end": 16176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 16182,
											"end": 16568,
											"name": "tag",
											"source": 21,
											"value": "175"
										},
										{
											"begin": 16182,
											"end": 16568,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16286,
											"end": 16289,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 16314,
											"end": 16352,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "355"
										},
										{
											"begin": 16346,
											"end": 16351,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 16314,
											"end": 16352,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "157"
										},
										{
											"begin": 16314,
											"end": 16352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 16314,
											"end": 16352,
											"name": "tag",
											"source": 21,
											"value": "355"
										},
										{
											"begin": 16314,
											"end": 16352,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16368,
											"end": 16456,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "356"
										},
										{
											"begin": 16449,
											"end": 16455,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 16444,
											"end": 16447,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 16368,
											"end": 16456,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "169"
										},
										{
											"begin": 16368,
											"end": 16456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 16368,
											"end": 16456,
											"name": "tag",
											"source": 21,
											"value": "356"
										},
										{
											"begin": 16368,
											"end": 16456,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16361,
											"end": 16456,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 16361,
											"end": 16456,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16465,
											"end": 16530,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "357"
										},
										{
											"begin": 16523,
											"end": 16529,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 16518,
											"end": 16521,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 16511,
											"end": 16515,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 16504,
											"end": 16509,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 16500,
											"end": 16516,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16465,
											"end": 16530,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "159"
										},
										{
											"begin": 16465,
											"end": 16530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 16465,
											"end": 16530,
											"name": "tag",
											"source": 21,
											"value": "357"
										},
										{
											"begin": 16465,
											"end": 16530,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16555,
											"end": 16561,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 16550,
											"end": 16553,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 16546,
											"end": 16562,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16539,
											"end": 16562,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 16539,
											"end": 16562,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16290,
											"end": 16568,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16182,
											"end": 16568,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 16182,
											"end": 16568,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 16182,
											"end": 16568,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16182,
											"end": 16568,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16182,
											"end": 16568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 16574,
											"end": 16845,
											"name": "tag",
											"source": 21,
											"value": "110"
										},
										{
											"begin": 16574,
											"end": 16845,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16704,
											"end": 16707,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 16726,
											"end": 16819,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "359"
										},
										{
											"begin": 16815,
											"end": 16818,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 16806,
											"end": 16812,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 16726,
											"end": 16819,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "175"
										},
										{
											"begin": 16726,
											"end": 16819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 16726,
											"end": 16819,
											"name": "tag",
											"source": 21,
											"value": "359"
										},
										{
											"begin": 16726,
											"end": 16819,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16719,
											"end": 16819,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 16719,
											"end": 16819,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16836,
											"end": 16839,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 16829,
											"end": 16839,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 16829,
											"end": 16839,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16574,
											"end": 16845,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 16574,
											"end": 16845,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 16574,
											"end": 16845,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16574,
											"end": 16845,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16574,
											"end": 16845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 16851,
											"end": 16994,
											"name": "tag",
											"source": 21,
											"value": "176"
										},
										{
											"begin": 16851,
											"end": 16994,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16908,
											"end": 16913,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 16939,
											"end": 16945,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 16933,
											"end": 16946,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 16924,
											"end": 16946,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 16924,
											"end": 16946,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16955,
											"end": 16988,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "361"
										},
										{
											"begin": 16982,
											"end": 16987,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 16955,
											"end": 16988,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "134"
										},
										{
											"begin": 16955,
											"end": 16988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 16955,
											"end": 16988,
											"name": "tag",
											"source": 21,
											"value": "361"
										},
										{
											"begin": 16955,
											"end": 16988,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16851,
											"end": 16994,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 16851,
											"end": 16994,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 16851,
											"end": 16994,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16851,
											"end": 16994,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 16851,
											"end": 16994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 17000,
											"end": 17351,
											"name": "tag",
											"source": 21,
											"value": "117"
										},
										{
											"begin": 17000,
											"end": 17351,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17070,
											"end": 17076,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 17119,
											"end": 17121,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 17107,
											"end": 17116,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17098,
											"end": 17105,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 17094,
											"end": 17117,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 17090,
											"end": 17122,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 17087,
											"end": 17206,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 17087,
											"end": 17206,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "363"
										},
										{
											"begin": 17087,
											"end": 17206,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 17125,
											"end": 17204,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "364"
										},
										{
											"begin": 17125,
											"end": 17204,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "126"
										},
										{
											"begin": 17125,
											"end": 17204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 17125,
											"end": 17204,
											"name": "tag",
											"source": 21,
											"value": "364"
										},
										{
											"begin": 17125,
											"end": 17204,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17087,
											"end": 17206,
											"name": "tag",
											"source": 21,
											"value": "363"
										},
										{
											"begin": 17087,
											"end": 17206,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17245,
											"end": 17246,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 17270,
											"end": 17334,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "365"
										},
										{
											"begin": 17326,
											"end": 17333,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 17317,
											"end": 17323,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17306,
											"end": 17315,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 17302,
											"end": 17324,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17270,
											"end": 17334,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "176"
										},
										{
											"begin": 17270,
											"end": 17334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 17270,
											"end": 17334,
											"name": "tag",
											"source": 21,
											"value": "365"
										},
										{
											"begin": 17270,
											"end": 17334,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17260,
											"end": 17334,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 17260,
											"end": 17334,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17216,
											"end": 17344,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17000,
											"end": 17351,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 17000,
											"end": 17351,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 17000,
											"end": 17351,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17000,
											"end": 17351,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17000,
											"end": 17351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 17357,
											"end": 17443,
											"name": "tag",
											"source": 21,
											"value": "177"
										},
										{
											"begin": 17357,
											"end": 17443,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17392,
											"end": 17399,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 17432,
											"end": 17436,
											"name": "PUSH",
											"source": 21,
											"value": "FF"
										},
										{
											"begin": 17425,
											"end": 17430,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17421,
											"end": 17437,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 17410,
											"end": 17437,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 17410,
											"end": 17437,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17357,
											"end": 17443,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 17357,
											"end": 17443,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 17357,
											"end": 17443,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17357,
											"end": 17443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 17449,
											"end": 17561,
											"name": "tag",
											"source": 21,
											"value": "178"
										},
										{
											"begin": 17449,
											"end": 17561,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17532,
											"end": 17554,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "368"
										},
										{
											"begin": 17548,
											"end": 17553,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 17532,
											"end": 17554,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "177"
										},
										{
											"begin": 17532,
											"end": 17554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 17532,
											"end": 17554,
											"name": "tag",
											"source": 21,
											"value": "368"
										},
										{
											"begin": 17532,
											"end": 17554,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17527,
											"end": 17530,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17520,
											"end": 17555,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 17449,
											"end": 17561,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17449,
											"end": 17561,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17449,
											"end": 17561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 17567,
											"end": 18112,
											"name": "tag",
											"source": 21,
											"value": "121"
										},
										{
											"begin": 17567,
											"end": 18112,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17740,
											"end": 17744,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 17778,
											"end": 17781,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 17767,
											"end": 17776,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17763,
											"end": 17782,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17755,
											"end": 17782,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 17755,
											"end": 17782,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17792,
											"end": 17863,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "370"
										},
										{
											"begin": 17860,
											"end": 17861,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 17849,
											"end": 17858,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 17845,
											"end": 17862,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17836,
											"end": 17842,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 17792,
											"end": 17863,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "174"
										},
										{
											"begin": 17792,
											"end": 17863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 17792,
											"end": 17863,
											"name": "tag",
											"source": 21,
											"value": "370"
										},
										{
											"begin": 17792,
											"end": 17863,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17873,
											"end": 17941,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "371"
										},
										{
											"begin": 17937,
											"end": 17939,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 17926,
											"end": 17935,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 17922,
											"end": 17940,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17913,
											"end": 17919,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 17873,
											"end": 17941,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "178"
										},
										{
											"begin": 17873,
											"end": 17941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 17873,
											"end": 17941,
											"name": "tag",
											"source": 21,
											"value": "371"
										},
										{
											"begin": 17873,
											"end": 17941,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17951,
											"end": 18023,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "372"
										},
										{
											"begin": 18019,
											"end": 18021,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 18008,
											"end": 18017,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 18004,
											"end": 18022,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17995,
											"end": 18001,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 17951,
											"end": 18023,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "174"
										},
										{
											"begin": 17951,
											"end": 18023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 17951,
											"end": 18023,
											"name": "tag",
											"source": 21,
											"value": "372"
										},
										{
											"begin": 17951,
											"end": 18023,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 18033,
											"end": 18105,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "373"
										},
										{
											"begin": 18101,
											"end": 18103,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 18090,
											"end": 18099,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 18086,
											"end": 18104,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18077,
											"end": 18083,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 18033,
											"end": 18105,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "174"
										},
										{
											"begin": 18033,
											"end": 18105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 18033,
											"end": 18105,
											"name": "tag",
											"source": 21,
											"value": "373"
										},
										{
											"begin": 18033,
											"end": 18105,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17567,
											"end": 18112,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 17567,
											"end": 18112,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 17567,
											"end": 18112,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17567,
											"end": 18112,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17567,
											"end": 18112,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17567,
											"end": 18112,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17567,
											"end": 18112,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 17567,
											"end": 18112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"TokenBound/ERC6551Account.sol",
								"TokenBound/interfaces/IERC6551Account.sol",
								"TokenBound/lib/ERC6551AccountLib.sol",
								"TokenBound/lib/ERC6551BytecodeLib.sol",
								"TokenBound/lib/MinimalReceiver.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"executeCall(address,uint256,bytes)": "9e5d4c49",
							"isValidSignature(bytes32,bytes)": "1626ba7e",
							"nonce()": "affed0e0",
							"owner()": "8da5cb5b",
							"supportsInterface(bytes4)": "01ffc9a7",
							"token()": "fc0c546a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"TransactionExecuted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"executeCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"hash\":\"Hash of the data to be signed\",\"signature\":\"Signature byte array associated with _data\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TokenBound/ERC6551Account.sol\":\"ERC6551Account\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519\",\"dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x67ef46fef257faae47adb630aad49694dda0334e5f7a7c5fb386243b974886b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c63284cf05ff845109190961e72ca27bd6a7b997f053d2ce21db83e9e285085c\",\"dweb:/ipfs/QmQBQVYJRzscToP6YaTRDvwYeLmr4V7kD1PjoG9mRpUYzU\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0x6e00f269073ffc4350e56b7e8153c9092d5f70bfba423299990514183101ef89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc5ff5c204604be7594ce2fa9100a0638f22b5aada6ebec1e165b0f50a48447\",\"dweb:/ipfs/QmfH7uWphPrq8jqwGvyh4pFnLEgEPmLwyGV2Bvx1Acjggh\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0x3af3ca86df39aac39a0514c84459d691434a108d2151c8ce9d69f32e315cab80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77d1f1cf302cd5e1dfbbb4ce3b281b28e8c52942d4319fce43df2e1b6f02a52d\",\"dweb:/ipfs/QmT6ZXStmK3Knhh9BokeVHQ9HXTBZNgL3Eb1ar1cYg1hWy\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"TokenBound/ERC6551Account.sol\":{\"keccak256\":\"0x84f8109ddbe8e43d05b6849dd61c8c50ec2bb8c42f59c21c450807941805ae5c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6800d2e905b2cc546b234aa91802201fe354a1083f66f6ffb3513c3f92ee1c93\",\"dweb:/ipfs/QmXxsvTCW1MxFjZUjHpCeWKhH3gmpLxug7JsmMDtx4N9CP\"]},\"TokenBound/interfaces/IERC6551Account.sol\":{\"keccak256\":\"0x86d3718f1824ff252d1ba1308be3ed58716afd4d40275e9491c45b96950fb6b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb9137041d345e57dc3bb8002955f0ba89f834c4364afc3ababb827dd6ac632\",\"dweb:/ipfs/Qmbrfy85yaWaxjbtJKG5uHkwNNjkcySzuRzhzSevcYv9DJ\"]},\"TokenBound/lib/ERC6551AccountLib.sol\":{\"keccak256\":\"0x0dd87f3fe9ae82f4051fffd449e5f34a20875356849372ab69a9e5fd57a89caa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0beb3da6886516b2d34b9ad0cef5af12c95c6f0618ff4fce7d41663d3ee48907\",\"dweb:/ipfs/QmSqUe2Rx26raW61oxRqW5FdLMSqde4CZtEK8h7XgeiEMc\"]},\"TokenBound/lib/ERC6551BytecodeLib.sol\":{\"keccak256\":\"0x393ad3961dbb112cc15dd3bc51c1327048ff5e1238149e2d4095bccd3bdfcd3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d0d8025b718e3b06c26d96fe003d6c51ed06fdbee7b4e5f245f976fc2d0c668\",\"dweb:/ipfs/QmSJgaACP2HWuv9T3yu99dgGo7bJcAFDG34Jgq1tCUo7Zz\"]},\"TokenBound/lib/MinimalReceiver.sol\":{\"keccak256\":\"0x5e16dbc5f3ec4deb17ed17c5faf258ed2134e90337ed6fbd9286c4b45fe0009c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8a327f879c901eccc2bccd67fd744239bae48cb15c786a070a1a5c7f52fc9551\",\"dweb:/ipfs/QmY2jkYZN2vuLUU62X38tPnAaKYkAMkojLHWogEgmHwYaj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2180,
								"contract": "TokenBound/ERC6551Account.sol:ERC6551Account",
								"label": "nonce",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TokenBound/interfaces/IERC6551Account.sol": {
				"IERC6551Account": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "TransactionExecuted",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "executeCall",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "tokenContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "the ERC-165 identifier for this interface is `0xeff4d378`",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"executeCall(address,uint256,bytes)": "9e5d4c49",
							"nonce()": "affed0e0",
							"owner()": "8da5cb5b",
							"token()": "fc0c546a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"TransactionExecuted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"executeCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"the ERC-165 identifier for this interface is `0xeff4d378`\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TokenBound/interfaces/IERC6551Account.sol\":\"IERC6551Account\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"TokenBound/interfaces/IERC6551Account.sol\":{\"keccak256\":\"0x86d3718f1824ff252d1ba1308be3ed58716afd4d40275e9491c45b96950fb6b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb9137041d345e57dc3bb8002955f0ba89f834c4364afc3ababb827dd6ac632\",\"dweb:/ipfs/Qmbrfy85yaWaxjbtJKG5uHkwNNjkcySzuRzhzSevcYv9DJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC6551AccountProxy": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TokenBound/interfaces/IERC6551Account.sol\":\"IERC6551AccountProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"TokenBound/interfaces/IERC6551Account.sol\":{\"keccak256\":\"0x86d3718f1824ff252d1ba1308be3ed58716afd4d40275e9491c45b96950fb6b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb9137041d345e57dc3bb8002955f0ba89f834c4364afc3ababb827dd6ac632\",\"dweb:/ipfs/Qmbrfy85yaWaxjbtJKG5uHkwNNjkcySzuRzhzSevcYv9DJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TokenBound/lib/ERC6551AccountLib.sol": {
				"ERC6551AccountLib": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TokenBound/lib/ERC6551AccountLib.sol\":151:1516  library ERC6551AccountLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"TokenBound/lib/ERC6551AccountLib.sol\":151:1516  library ERC6551AccountLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209d883656e076af0d63d471d99cb1d339621c562861a8f82ab4aa1cfa9e19239d64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209d883656e076af0d63d471d99cb1d339621c562861a8f82ab4aa1cfa9e19239d64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 DUP9 CALLDATASIZE JUMP 0xE0 PUSH23 0xAF0D63D471D99CB1D339621C562861A8F82AB4AA1CFA9E NOT 0x23 SWAP14 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "151:1365:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209d883656e076af0d63d471d99cb1d339621c562861a8f82ab4aa1cfa9e19239d64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 DUP9 CALLDATASIZE JUMP 0xE0 PUSH23 0xAF0D63D471D99CB1D339621C562861A8F82AB4AA1CFA9E NOT 0x23 SWAP14 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "151:1365:18:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"computeAddress(address,address,uint256,address,uint256,uint256)": "infinite",
								"salt()": "infinite",
								"token()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 151,
									"end": 1516,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 151,
									"end": 1516,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 151,
									"end": 1516,
									"name": "PUSH",
									"source": 18,
									"value": "B"
								},
								{
									"begin": 151,
									"end": 1516,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 151,
									"end": 1516,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 151,
									"end": 1516,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 151,
									"end": 1516,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 151,
									"end": 1516,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 151,
									"end": 1516,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 151,
									"end": 1516,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 151,
									"end": 1516,
									"name": "BYTE",
									"source": 18
								},
								{
									"begin": 151,
									"end": 1516,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 151,
									"end": 1516,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 151,
									"end": 1516,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 151,
									"end": 1516,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 151,
									"end": 1516,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 151,
									"end": 1516,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 151,
									"end": 1516,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 151,
									"end": 1516,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 151,
									"end": 1516,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 151,
									"end": 1516,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 151,
									"end": 1516,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 151,
									"end": 1516,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 151,
									"end": 1516,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 151,
									"end": 1516,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 151,
									"end": 1516,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 151,
									"end": 1516,
									"name": "ADDRESS",
									"source": 18
								},
								{
									"begin": 151,
									"end": 1516,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 151,
									"end": 1516,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 151,
									"end": 1516,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 151,
									"end": 1516,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 151,
									"end": 1516,
									"name": "MSTORE8",
									"source": 18
								},
								{
									"begin": 151,
									"end": 1516,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 151,
									"end": 1516,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 151,
									"end": 1516,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209d883656e076af0d63d471d99cb1d339621c562861a8f82ab4aa1cfa9e19239d64736f6c63430008120033",
									".code": [
										{
											"begin": 151,
											"end": 1516,
											"name": "PUSHDEPLOYADDRESS",
											"source": 18
										},
										{
											"begin": 151,
											"end": 1516,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 151,
											"end": 1516,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 151,
											"end": 1516,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 151,
											"end": 1516,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 151,
											"end": 1516,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 151,
											"end": 1516,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 151,
											"end": 1516,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 151,
											"end": 1516,
											"name": "REVERT",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"TokenBound/ERC6551Account.sol",
								"TokenBound/interfaces/IERC6551Account.sol",
								"TokenBound/lib/ERC6551AccountLib.sol",
								"TokenBound/lib/ERC6551BytecodeLib.sol",
								"TokenBound/lib/MinimalReceiver.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TokenBound/lib/ERC6551AccountLib.sol\":\"ERC6551AccountLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0x6e00f269073ffc4350e56b7e8153c9092d5f70bfba423299990514183101ef89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc5ff5c204604be7594ce2fa9100a0638f22b5aada6ebec1e165b0f50a48447\",\"dweb:/ipfs/QmfH7uWphPrq8jqwGvyh4pFnLEgEPmLwyGV2Bvx1Acjggh\"]},\"TokenBound/lib/ERC6551AccountLib.sol\":{\"keccak256\":\"0x0dd87f3fe9ae82f4051fffd449e5f34a20875356849372ab69a9e5fd57a89caa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0beb3da6886516b2d34b9ad0cef5af12c95c6f0618ff4fce7d41663d3ee48907\",\"dweb:/ipfs/QmSqUe2Rx26raW61oxRqW5FdLMSqde4CZtEK8h7XgeiEMc\"]},\"TokenBound/lib/ERC6551BytecodeLib.sol\":{\"keccak256\":\"0x393ad3961dbb112cc15dd3bc51c1327048ff5e1238149e2d4095bccd3bdfcd3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d0d8025b718e3b06c26d96fe003d6c51ed06fdbee7b4e5f245f976fc2d0c668\",\"dweb:/ipfs/QmSJgaACP2HWuv9T3yu99dgGo7bJcAFDG34Jgq1tCUo7Zz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TokenBound/lib/ERC6551BytecodeLib.sol": {
				"ERC6551BytecodeLib": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TokenBound/lib/ERC6551BytecodeLib.sol\":60:605  library ERC6551BytecodeLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"TokenBound/lib/ERC6551BytecodeLib.sol\":60:605  library ERC6551BytecodeLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fc68330830cf10f6e570c3bf7c66fb966898dd07e09c0b8eedaf8569fcb98dbb64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc68330830cf10f6e570c3bf7c66fb966898dd07e09c0b8eedaf8569fcb98dbb64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC PUSH9 0x330830CF10F6E570C3 0xBF PUSH29 0x66FB966898DD07E09C0B8EEDAF8569FCB98DBB64736F6C634300081200 CALLER ",
							"sourceMap": "60:545:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fc68330830cf10f6e570c3bf7c66fb966898dd07e09c0b8eedaf8569fcb98dbb64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC PUSH9 0x330830CF10F6E570C3 0xBF PUSH29 0x66FB966898DD07E09C0B8EEDAF8569FCB98DBB64736F6C634300081200 CALLER ",
							"sourceMap": "60:545:19:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"getCreationCode(address,uint256,address,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 605,
									"name": "PUSH #[$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 605,
									"name": "PUSH [$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 605,
									"name": "PUSH",
									"source": 19,
									"value": "B"
								},
								{
									"begin": 60,
									"end": 605,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 60,
									"end": 605,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 60,
									"end": 605,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 60,
									"end": 605,
									"name": "CODECOPY",
									"source": 19
								},
								{
									"begin": 60,
									"end": 605,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 60,
									"end": 605,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 60,
									"end": 605,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 605,
									"name": "BYTE",
									"source": 19
								},
								{
									"begin": 60,
									"end": 605,
									"name": "PUSH",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 60,
									"end": 605,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 60,
									"end": 605,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 605,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 60,
									"end": 605,
									"name": "PUSH",
									"source": 19,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 605,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 605,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 60,
									"end": 605,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 605,
									"name": "PUSH",
									"source": 19,
									"value": "4"
								},
								{
									"begin": 60,
									"end": 605,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 60,
									"end": 605,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 60,
									"end": 605,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 605,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 60,
									"end": 605,
									"name": "tag",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 605,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 60,
									"end": 605,
									"name": "ADDRESS",
									"source": 19
								},
								{
									"begin": 60,
									"end": 605,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 605,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 60,
									"end": 605,
									"name": "PUSH",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 60,
									"end": 605,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 60,
									"end": 605,
									"name": "MSTORE8",
									"source": 19
								},
								{
									"begin": 60,
									"end": 605,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 60,
									"end": 605,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 60,
									"end": 605,
									"name": "RETURN",
									"source": 19
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fc68330830cf10f6e570c3bf7c66fb966898dd07e09c0b8eedaf8569fcb98dbb64736f6c63430008120033",
									".code": [
										{
											"begin": 60,
											"end": 605,
											"name": "PUSHDEPLOYADDRESS",
											"source": 19
										},
										{
											"begin": 60,
											"end": 605,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 60,
											"end": 605,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 60,
											"end": 605,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 605,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 605,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 60,
											"end": 605,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 605,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 60,
											"end": 605,
											"name": "REVERT",
											"source": 19
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"TokenBound/ERC6551Account.sol",
								"TokenBound/interfaces/IERC6551Account.sol",
								"TokenBound/lib/ERC6551AccountLib.sol",
								"TokenBound/lib/ERC6551BytecodeLib.sol",
								"TokenBound/lib/MinimalReceiver.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TokenBound/lib/ERC6551BytecodeLib.sol\":\"ERC6551BytecodeLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"TokenBound/lib/ERC6551BytecodeLib.sol\":{\"keccak256\":\"0x393ad3961dbb112cc15dd3bc51c1327048ff5e1238149e2d4095bccd3bdfcd3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d0d8025b718e3b06c26d96fe003d6c51ed06fdbee7b4e5f245f976fc2d0c668\",\"dweb:/ipfs/QmSJgaACP2HWuv9T3yu99dgGo7bJcAFDG34Jgq1tCUo7Zz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TokenBound/lib/MinimalReceiver.sol": {
				"MinimalReceiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TokenBound/lib/MinimalReceiver.sol\":213:374  contract MinimalReceiver is ERC721Holder, ERC1155Holder {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"TokenBound/lib/MinimalReceiver.sol\":213:374  contract MinimalReceiver is ERC721Holder, ERC1155Holder {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x150b7a02\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xbc197c81\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf23a6e61\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n      pop\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      tag_13\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":603:765  function onERC721Received(address, address, uint256, bytes memory) public virtual override returns (bytes4) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_13:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":489:493  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":527:561  type(IERC1155Receiver).interfaceId */\n      0x4e2312e000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:561  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:523  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:561  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:601  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_36\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:601  super.supportsInterface(interfaceId) */\n      tag_37\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":589:600  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:588  super.supportsInterface */\n      tag_38\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:601  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:601  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":505:601  return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":603:765  function onERC721Received(address, address, uint256, bytes memory) public virtual override returns (bytes4) {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":703:709  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":728:758  this.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":721:758  return this.onERC721Received.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":603:765  function onERC721Received(address, address, uint256, bytes memory) public virtual override returns (bytes4) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":903:909  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":928:964  this.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":921:964  return this.onERC1155BatchReceived.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":724:971  function onERC1155BatchReceived(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":655:661  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":680:711  this.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":673:711  return this.onERC1155Received.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":499:718  function onERC1155Received(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_43:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_44:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_45:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_46:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_47:\n        /* \"#utility.yul\":561:584   */\n      tag_79\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_46\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_80\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_80:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_48:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_82\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_47\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_12:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_84\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_85\n      tag_44\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":833:952   */\n    tag_84:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_86\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_48\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_49:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_50:\n        /* \"#utility.yul\":1268:1289   */\n      tag_89\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_49\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_15:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_91\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_50\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1644   */\n    tag_51:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1595:1637   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1588:1593   */\n      dup3\n        /* \"#utility.yul\":1584:1638   */\n      and\n        /* \"#utility.yul\":1573:1638   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1650:1746   */\n    tag_52:\n        /* \"#utility.yul\":1687:1694   */\n      0x00\n        /* \"#utility.yul\":1716:1740   */\n      tag_94\n        /* \"#utility.yul\":1734:1739   */\n      dup3\n        /* \"#utility.yul\":1716:1740   */\n      tag_51\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":1705:1740   */\n      swap1\n      pop\n        /* \"#utility.yul\":1650:1746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1752:1874   */\n    tag_53:\n        /* \"#utility.yul\":1825:1849   */\n      tag_96\n        /* \"#utility.yul\":1843:1848   */\n      dup2\n        /* \"#utility.yul\":1825:1849   */\n      tag_52\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":1818:1823   */\n      dup2\n        /* \"#utility.yul\":1815:1850   */\n      eq\n        /* \"#utility.yul\":1805:1868   */\n      tag_97\n      jumpi\n        /* \"#utility.yul\":1864:1865   */\n      0x00\n        /* \"#utility.yul\":1861:1862   */\n      dup1\n        /* \"#utility.yul\":1854:1866   */\n      revert\n        /* \"#utility.yul\":1805:1868   */\n    tag_97:\n        /* \"#utility.yul\":1752:1874   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1880:2019   */\n    tag_54:\n        /* \"#utility.yul\":1926:1931   */\n      0x00\n        /* \"#utility.yul\":1964:1970   */\n      dup2\n        /* \"#utility.yul\":1951:1971   */\n      calldataload\n        /* \"#utility.yul\":1942:1971   */\n      swap1\n      pop\n        /* \"#utility.yul\":1980:2013   */\n      tag_99\n        /* \"#utility.yul\":2007:2012   */\n      dup2\n        /* \"#utility.yul\":1980:2013   */\n      tag_53\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":1880:2019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2025:2102   */\n    tag_55:\n        /* \"#utility.yul\":2062:2069   */\n      0x00\n        /* \"#utility.yul\":2091:2096   */\n      dup2\n        /* \"#utility.yul\":2080:2096   */\n      swap1\n      pop\n        /* \"#utility.yul\":2025:2102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2108:2230   */\n    tag_56:\n        /* \"#utility.yul\":2181:2205   */\n      tag_102\n        /* \"#utility.yul\":2199:2204   */\n      dup2\n        /* \"#utility.yul\":2181:2205   */\n      tag_55\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":2174:2179   */\n      dup2\n        /* \"#utility.yul\":2171:2206   */\n      eq\n        /* \"#utility.yul\":2161:2224   */\n      tag_103\n      jumpi\n        /* \"#utility.yul\":2220:2221   */\n      0x00\n        /* \"#utility.yul\":2217:2218   */\n      dup1\n        /* \"#utility.yul\":2210:2222   */\n      revert\n        /* \"#utility.yul\":2161:2224   */\n    tag_103:\n        /* \"#utility.yul\":2108:2230   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2236:2375   */\n    tag_57:\n        /* \"#utility.yul\":2282:2287   */\n      0x00\n        /* \"#utility.yul\":2320:2326   */\n      dup2\n        /* \"#utility.yul\":2307:2327   */\n      calldataload\n        /* \"#utility.yul\":2298:2327   */\n      swap1\n      pop\n        /* \"#utility.yul\":2336:2369   */\n      tag_105\n        /* \"#utility.yul\":2363:2368   */\n      dup2\n        /* \"#utility.yul\":2336:2369   */\n      tag_56\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":2236:2375   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2381:2498   */\n    tag_58:\n        /* \"#utility.yul\":2490:2491   */\n      0x00\n        /* \"#utility.yul\":2487:2488   */\n      dup1\n        /* \"#utility.yul\":2480:2492   */\n      revert\n        /* \"#utility.yul\":2504:2621   */\n    tag_59:\n        /* \"#utility.yul\":2613:2614   */\n      0x00\n        /* \"#utility.yul\":2610:2611   */\n      dup1\n        /* \"#utility.yul\":2603:2615   */\n      revert\n        /* \"#utility.yul\":2627:2729   */\n    tag_60:\n        /* \"#utility.yul\":2668:2674   */\n      0x00\n        /* \"#utility.yul\":2719:2721   */\n      0x1f\n        /* \"#utility.yul\":2715:2722   */\n      not\n        /* \"#utility.yul\":2710:2712   */\n      0x1f\n        /* \"#utility.yul\":2703:2708   */\n      dup4\n        /* \"#utility.yul\":2699:2713   */\n      add\n        /* \"#utility.yul\":2695:2723   */\n      and\n        /* \"#utility.yul\":2685:2723   */\n      swap1\n      pop\n        /* \"#utility.yul\":2627:2729   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2735:2915   */\n    tag_61:\n        /* \"#utility.yul\":2783:2860   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2780:2781   */\n      0x00\n        /* \"#utility.yul\":2773:2861   */\n      mstore\n        /* \"#utility.yul\":2880:2884   */\n      0x41\n        /* \"#utility.yul\":2877:2878   */\n      0x04\n        /* \"#utility.yul\":2870:2885   */\n      mstore\n        /* \"#utility.yul\":2904:2908   */\n      0x24\n        /* \"#utility.yul\":2901:2902   */\n      0x00\n        /* \"#utility.yul\":2894:2909   */\n      revert\n        /* \"#utility.yul\":2921:3202   */\n    tag_62:\n        /* \"#utility.yul\":3004:3031   */\n      tag_111\n        /* \"#utility.yul\":3026:3030   */\n      dup3\n        /* \"#utility.yul\":3004:3031   */\n      tag_60\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":2996:3002   */\n      dup2\n        /* \"#utility.yul\":2992:3032   */\n      add\n        /* \"#utility.yul\":3134:3140   */\n      dup2\n        /* \"#utility.yul\":3122:3132   */\n      dup2\n        /* \"#utility.yul\":3119:3141   */\n      lt\n        /* \"#utility.yul\":3098:3116   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3086:3096   */\n      dup3\n        /* \"#utility.yul\":3083:3117   */\n      gt\n        /* \"#utility.yul\":3080:3142   */\n      or\n        /* \"#utility.yul\":3077:3165   */\n      iszero\n      tag_112\n      jumpi\n        /* \"#utility.yul\":3145:3163   */\n      tag_113\n      tag_61\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":3077:3165   */\n    tag_112:\n        /* \"#utility.yul\":3185:3195   */\n      dup1\n        /* \"#utility.yul\":3181:3183   */\n      0x40\n        /* \"#utility.yul\":3174:3196   */\n      mstore\n        /* \"#utility.yul\":2964:3202   */\n      pop\n        /* \"#utility.yul\":2921:3202   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3208:3337   */\n    tag_63:\n        /* \"#utility.yul\":3242:3248   */\n      0x00\n        /* \"#utility.yul\":3269:3289   */\n      tag_115\n      tag_43\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":3259:3289   */\n      swap1\n      pop\n        /* \"#utility.yul\":3298:3331   */\n      tag_116\n        /* \"#utility.yul\":3326:3330   */\n      dup3\n        /* \"#utility.yul\":3318:3324   */\n      dup3\n        /* \"#utility.yul\":3298:3331   */\n      tag_62\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":3208:3337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3343:3650   */\n    tag_64:\n        /* \"#utility.yul\":3404:3408   */\n      0x00\n        /* \"#utility.yul\":3494:3512   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3486:3492   */\n      dup3\n        /* \"#utility.yul\":3483:3513   */\n      gt\n        /* \"#utility.yul\":3480:3536   */\n      iszero\n      tag_118\n      jumpi\n        /* \"#utility.yul\":3516:3534   */\n      tag_119\n      tag_61\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":3480:3536   */\n    tag_118:\n        /* \"#utility.yul\":3554:3583   */\n      tag_120\n        /* \"#utility.yul\":3576:3582   */\n      dup3\n        /* \"#utility.yul\":3554:3583   */\n      tag_60\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":3546:3583   */\n      swap1\n      pop\n        /* \"#utility.yul\":3638:3642   */\n      0x20\n        /* \"#utility.yul\":3632:3636   */\n      dup2\n        /* \"#utility.yul\":3628:3643   */\n      add\n        /* \"#utility.yul\":3620:3643   */\n      swap1\n      pop\n        /* \"#utility.yul\":3343:3650   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3656:3802   */\n    tag_65:\n        /* \"#utility.yul\":3753:3759   */\n      dup3\n        /* \"#utility.yul\":3748:3751   */\n      dup2\n        /* \"#utility.yul\":3743:3746   */\n      dup4\n        /* \"#utility.yul\":3730:3760   */\n      calldatacopy\n        /* \"#utility.yul\":3794:3795   */\n      0x00\n        /* \"#utility.yul\":3785:3791   */\n      dup4\n        /* \"#utility.yul\":3780:3783   */\n      dup4\n        /* \"#utility.yul\":3776:3792   */\n      add\n        /* \"#utility.yul\":3769:3796   */\n      mstore\n        /* \"#utility.yul\":3656:3802   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3808:4231   */\n    tag_66:\n        /* \"#utility.yul\":3885:3890   */\n      0x00\n        /* \"#utility.yul\":3910:3975   */\n      tag_123\n        /* \"#utility.yul\":3926:3974   */\n      tag_124\n        /* \"#utility.yul\":3967:3973   */\n      dup5\n        /* \"#utility.yul\":3926:3974   */\n      tag_64\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":3910:3975   */\n      tag_63\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":3901:3975   */\n      swap1\n      pop\n        /* \"#utility.yul\":3998:4004   */\n      dup3\n        /* \"#utility.yul\":3991:3996   */\n      dup2\n        /* \"#utility.yul\":3984:4005   */\n      mstore\n        /* \"#utility.yul\":4036:4040   */\n      0x20\n        /* \"#utility.yul\":4029:4034   */\n      dup2\n        /* \"#utility.yul\":4025:4041   */\n      add\n        /* \"#utility.yul\":4074:4077   */\n      dup5\n        /* \"#utility.yul\":4065:4071   */\n      dup5\n        /* \"#utility.yul\":4060:4063   */\n      dup5\n        /* \"#utility.yul\":4056:4072   */\n      add\n        /* \"#utility.yul\":4053:4078   */\n      gt\n        /* \"#utility.yul\":4050:4162   */\n      iszero\n      tag_125\n      jumpi\n        /* \"#utility.yul\":4081:4160   */\n      tag_126\n      tag_59\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":4050:4162   */\n    tag_125:\n        /* \"#utility.yul\":4171:4225   */\n      tag_127\n        /* \"#utility.yul\":4218:4224   */\n      dup5\n        /* \"#utility.yul\":4213:4216   */\n      dup3\n        /* \"#utility.yul\":4208:4211   */\n      dup6\n        /* \"#utility.yul\":4171:4225   */\n      tag_65\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":3891:4231   */\n      pop\n        /* \"#utility.yul\":3808:4231   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4250:4588   */\n    tag_67:\n        /* \"#utility.yul\":4305:4310   */\n      0x00\n        /* \"#utility.yul\":4354:4357   */\n      dup3\n        /* \"#utility.yul\":4347:4351   */\n      0x1f\n        /* \"#utility.yul\":4339:4345   */\n      dup4\n        /* \"#utility.yul\":4335:4352   */\n      add\n        /* \"#utility.yul\":4331:4358   */\n      slt\n        /* \"#utility.yul\":4321:4443   */\n      tag_129\n      jumpi\n        /* \"#utility.yul\":4362:4441   */\n      tag_130\n      tag_58\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":4321:4443   */\n    tag_129:\n        /* \"#utility.yul\":4479:4485   */\n      dup2\n        /* \"#utility.yul\":4466:4486   */\n      calldataload\n        /* \"#utility.yul\":4504:4582   */\n      tag_131\n        /* \"#utility.yul\":4578:4581   */\n      dup5\n        /* \"#utility.yul\":4570:4576   */\n      dup3\n        /* \"#utility.yul\":4563:4567   */\n      0x20\n        /* \"#utility.yul\":4555:4561   */\n      dup7\n        /* \"#utility.yul\":4551:4568   */\n      add\n        /* \"#utility.yul\":4504:4582   */\n      tag_66\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":4495:4582   */\n      swap2\n      pop\n        /* \"#utility.yul\":4311:4588   */\n      pop\n        /* \"#utility.yul\":4250:4588   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4594:5537   */\n    tag_19:\n        /* \"#utility.yul\":4689:4695   */\n      0x00\n        /* \"#utility.yul\":4697:4703   */\n      dup1\n        /* \"#utility.yul\":4705:4711   */\n      0x00\n        /* \"#utility.yul\":4713:4719   */\n      dup1\n        /* \"#utility.yul\":4762:4765   */\n      0x80\n        /* \"#utility.yul\":4750:4759   */\n      dup6\n        /* \"#utility.yul\":4741:4748   */\n      dup8\n        /* \"#utility.yul\":4737:4760   */\n      sub\n        /* \"#utility.yul\":4733:4766   */\n      slt\n        /* \"#utility.yul\":4730:4850   */\n      iszero\n      tag_133\n      jumpi\n        /* \"#utility.yul\":4769:4848   */\n      tag_134\n      tag_44\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":4730:4850   */\n    tag_133:\n        /* \"#utility.yul\":4889:4890   */\n      0x00\n        /* \"#utility.yul\":4914:4967   */\n      tag_135\n        /* \"#utility.yul\":4959:4966   */\n      dup8\n        /* \"#utility.yul\":4950:4956   */\n      dup3\n        /* \"#utility.yul\":4939:4948   */\n      dup9\n        /* \"#utility.yul\":4935:4957   */\n      add\n        /* \"#utility.yul\":4914:4967   */\n      tag_54\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":4904:4967   */\n      swap5\n      pop\n        /* \"#utility.yul\":4860:4977   */\n      pop\n        /* \"#utility.yul\":5016:5018   */\n      0x20\n        /* \"#utility.yul\":5042:5095   */\n      tag_136\n        /* \"#utility.yul\":5087:5094   */\n      dup8\n        /* \"#utility.yul\":5078:5084   */\n      dup3\n        /* \"#utility.yul\":5067:5076   */\n      dup9\n        /* \"#utility.yul\":5063:5085   */\n      add\n        /* \"#utility.yul\":5042:5095   */\n      tag_54\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":5032:5095   */\n      swap4\n      pop\n        /* \"#utility.yul\":4987:5105   */\n      pop\n        /* \"#utility.yul\":5144:5146   */\n      0x40\n        /* \"#utility.yul\":5170:5223   */\n      tag_137\n        /* \"#utility.yul\":5215:5222   */\n      dup8\n        /* \"#utility.yul\":5206:5212   */\n      dup3\n        /* \"#utility.yul\":5195:5204   */\n      dup9\n        /* \"#utility.yul\":5191:5213   */\n      add\n        /* \"#utility.yul\":5170:5223   */\n      tag_57\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":5160:5223   */\n      swap3\n      pop\n        /* \"#utility.yul\":5115:5233   */\n      pop\n        /* \"#utility.yul\":5300:5302   */\n      0x60\n        /* \"#utility.yul\":5289:5298   */\n      dup6\n        /* \"#utility.yul\":5285:5303   */\n      add\n        /* \"#utility.yul\":5272:5304   */\n      calldataload\n        /* \"#utility.yul\":5331:5349   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5323:5329   */\n      dup2\n        /* \"#utility.yul\":5320:5350   */\n      gt\n        /* \"#utility.yul\":5317:5434   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":5353:5432   */\n      tag_139\n      tag_45\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":5317:5434   */\n    tag_138:\n        /* \"#utility.yul\":5458:5520   */\n      tag_140\n        /* \"#utility.yul\":5512:5519   */\n      dup8\n        /* \"#utility.yul\":5503:5509   */\n      dup3\n        /* \"#utility.yul\":5492:5501   */\n      dup9\n        /* \"#utility.yul\":5488:5510   */\n      add\n        /* \"#utility.yul\":5458:5520   */\n      tag_67\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":5448:5520   */\n      swap2\n      pop\n        /* \"#utility.yul\":5243:5530   */\n      pop\n        /* \"#utility.yul\":4594:5537   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5543:5658   */\n    tag_68:\n        /* \"#utility.yul\":5628:5651   */\n      tag_142\n        /* \"#utility.yul\":5645:5650   */\n      dup2\n        /* \"#utility.yul\":5628:5651   */\n      tag_46\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":5623:5626   */\n      dup3\n        /* \"#utility.yul\":5616:5652   */\n      mstore\n        /* \"#utility.yul\":5543:5658   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5664:5882   */\n    tag_22:\n        /* \"#utility.yul\":5755:5759   */\n      0x00\n        /* \"#utility.yul\":5793:5795   */\n      0x20\n        /* \"#utility.yul\":5782:5791   */\n      dup3\n        /* \"#utility.yul\":5778:5796   */\n      add\n        /* \"#utility.yul\":5770:5796   */\n      swap1\n      pop\n        /* \"#utility.yul\":5806:5875   */\n      tag_144\n        /* \"#utility.yul\":5872:5873   */\n      0x00\n        /* \"#utility.yul\":5861:5870   */\n      dup4\n        /* \"#utility.yul\":5857:5874   */\n      add\n        /* \"#utility.yul\":5848:5854   */\n      dup5\n        /* \"#utility.yul\":5806:5875   */\n      tag_68\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":5664:5882   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5888:6199   */\n    tag_69:\n        /* \"#utility.yul\":5965:5969   */\n      0x00\n        /* \"#utility.yul\":6055:6073   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6047:6053   */\n      dup3\n        /* \"#utility.yul\":6044:6074   */\n      gt\n        /* \"#utility.yul\":6041:6097   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":6077:6095   */\n      tag_147\n      tag_61\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":6041:6097   */\n    tag_146:\n        /* \"#utility.yul\":6127:6131   */\n      0x20\n        /* \"#utility.yul\":6119:6125   */\n      dup3\n        /* \"#utility.yul\":6115:6132   */\n      mul\n        /* \"#utility.yul\":6107:6132   */\n      swap1\n      pop\n        /* \"#utility.yul\":6187:6191   */\n      0x20\n        /* \"#utility.yul\":6181:6185   */\n      dup2\n        /* \"#utility.yul\":6177:6192   */\n      add\n        /* \"#utility.yul\":6169:6192   */\n      swap1\n      pop\n        /* \"#utility.yul\":5888:6199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6205:6322   */\n    tag_70:\n        /* \"#utility.yul\":6314:6315   */\n      0x00\n        /* \"#utility.yul\":6311:6312   */\n      dup1\n        /* \"#utility.yul\":6304:6316   */\n      revert\n        /* \"#utility.yul\":6345:7055   */\n    tag_71:\n        /* \"#utility.yul\":6441:6446   */\n      0x00\n        /* \"#utility.yul\":6466:6547   */\n      tag_150\n        /* \"#utility.yul\":6482:6546   */\n      tag_151\n        /* \"#utility.yul\":6539:6545   */\n      dup5\n        /* \"#utility.yul\":6482:6546   */\n      tag_69\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":6466:6547   */\n      tag_63\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":6457:6547   */\n      swap1\n      pop\n        /* \"#utility.yul\":6567:6572   */\n      dup1\n        /* \"#utility.yul\":6596:6602   */\n      dup4\n        /* \"#utility.yul\":6589:6594   */\n      dup3\n        /* \"#utility.yul\":6582:6603   */\n      mstore\n        /* \"#utility.yul\":6630:6634   */\n      0x20\n        /* \"#utility.yul\":6623:6628   */\n      dup3\n        /* \"#utility.yul\":6619:6635   */\n      add\n        /* \"#utility.yul\":6612:6635   */\n      swap1\n      pop\n        /* \"#utility.yul\":6683:6687   */\n      0x20\n        /* \"#utility.yul\":6675:6681   */\n      dup5\n        /* \"#utility.yul\":6671:6688   */\n      mul\n        /* \"#utility.yul\":6663:6669   */\n      dup4\n        /* \"#utility.yul\":6659:6689   */\n      add\n        /* \"#utility.yul\":6712:6715   */\n      dup6\n        /* \"#utility.yul\":6704:6710   */\n      dup2\n        /* \"#utility.yul\":6701:6716   */\n      gt\n        /* \"#utility.yul\":6698:6820   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":6731:6810   */\n      tag_153\n      tag_70\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":6698:6820   */\n    tag_152:\n        /* \"#utility.yul\":6846:6852   */\n      dup4\n        /* \"#utility.yul\":6829:7049   */\n    tag_154:\n        /* \"#utility.yul\":6863:6869   */\n      dup2\n        /* \"#utility.yul\":6858:6861   */\n      dup2\n        /* \"#utility.yul\":6855:6870   */\n      lt\n        /* \"#utility.yul\":6829:7049   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":6938:6941   */\n      dup1\n        /* \"#utility.yul\":6967:7004   */\n      tag_157\n        /* \"#utility.yul\":7000:7003   */\n      dup9\n        /* \"#utility.yul\":6988:6998   */\n      dup3\n        /* \"#utility.yul\":6967:7004   */\n      tag_57\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":6962:6965   */\n      dup5\n        /* \"#utility.yul\":6955:7005   */\n      mstore\n        /* \"#utility.yul\":7034:7038   */\n      0x20\n        /* \"#utility.yul\":7029:7032   */\n      dup5\n        /* \"#utility.yul\":7025:7039   */\n      add\n        /* \"#utility.yul\":7018:7039   */\n      swap4\n      pop\n        /* \"#utility.yul\":6905:7049   */\n      pop\n        /* \"#utility.yul\":6889:6893   */\n      0x20\n        /* \"#utility.yul\":6884:6887   */\n      dup2\n        /* \"#utility.yul\":6880:6894   */\n      add\n        /* \"#utility.yul\":6873:6894   */\n      swap1\n      pop\n        /* \"#utility.yul\":6829:7049   */\n      jump(tag_154)\n    tag_156:\n        /* \"#utility.yul\":6833:6854   */\n      pop\n        /* \"#utility.yul\":6447:7055   */\n      pop\n      pop\n        /* \"#utility.yul\":6345:7055   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7078:7448   */\n    tag_72:\n        /* \"#utility.yul\":7149:7154   */\n      0x00\n        /* \"#utility.yul\":7198:7201   */\n      dup3\n        /* \"#utility.yul\":7191:7195   */\n      0x1f\n        /* \"#utility.yul\":7183:7189   */\n      dup4\n        /* \"#utility.yul\":7179:7196   */\n      add\n        /* \"#utility.yul\":7175:7202   */\n      slt\n        /* \"#utility.yul\":7165:7287   */\n      tag_159\n      jumpi\n        /* \"#utility.yul\":7206:7285   */\n      tag_160\n      tag_58\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":7165:7287   */\n    tag_159:\n        /* \"#utility.yul\":7323:7329   */\n      dup2\n        /* \"#utility.yul\":7310:7330   */\n      calldataload\n        /* \"#utility.yul\":7348:7442   */\n      tag_161\n        /* \"#utility.yul\":7438:7441   */\n      dup5\n        /* \"#utility.yul\":7430:7436   */\n      dup3\n        /* \"#utility.yul\":7423:7427   */\n      0x20\n        /* \"#utility.yul\":7415:7421   */\n      dup7\n        /* \"#utility.yul\":7411:7428   */\n      add\n        /* \"#utility.yul\":7348:7442   */\n      tag_71\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":7339:7442   */\n      swap2\n      pop\n        /* \"#utility.yul\":7155:7448   */\n      pop\n        /* \"#utility.yul\":7078:7448   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7454:8963   */\n    tag_26:\n        /* \"#utility.yul\":7608:7614   */\n      0x00\n        /* \"#utility.yul\":7616:7622   */\n      dup1\n        /* \"#utility.yul\":7624:7630   */\n      0x00\n        /* \"#utility.yul\":7632:7638   */\n      dup1\n        /* \"#utility.yul\":7640:7646   */\n      0x00\n        /* \"#utility.yul\":7689:7692   */\n      0xa0\n        /* \"#utility.yul\":7677:7686   */\n      dup7\n        /* \"#utility.yul\":7668:7675   */\n      dup9\n        /* \"#utility.yul\":7664:7687   */\n      sub\n        /* \"#utility.yul\":7660:7693   */\n      slt\n        /* \"#utility.yul\":7657:7777   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":7696:7775   */\n      tag_164\n      tag_44\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":7657:7777   */\n    tag_163:\n        /* \"#utility.yul\":7816:7817   */\n      0x00\n        /* \"#utility.yul\":7841:7894   */\n      tag_165\n        /* \"#utility.yul\":7886:7893   */\n      dup9\n        /* \"#utility.yul\":7877:7883   */\n      dup3\n        /* \"#utility.yul\":7866:7875   */\n      dup10\n        /* \"#utility.yul\":7862:7884   */\n      add\n        /* \"#utility.yul\":7841:7894   */\n      tag_54\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":7831:7894   */\n      swap6\n      pop\n        /* \"#utility.yul\":7787:7904   */\n      pop\n        /* \"#utility.yul\":7943:7945   */\n      0x20\n        /* \"#utility.yul\":7969:8022   */\n      tag_166\n        /* \"#utility.yul\":8014:8021   */\n      dup9\n        /* \"#utility.yul\":8005:8011   */\n      dup3\n        /* \"#utility.yul\":7994:8003   */\n      dup10\n        /* \"#utility.yul\":7990:8012   */\n      add\n        /* \"#utility.yul\":7969:8022   */\n      tag_54\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":7959:8022   */\n      swap5\n      pop\n        /* \"#utility.yul\":7914:8032   */\n      pop\n        /* \"#utility.yul\":8099:8101   */\n      0x40\n        /* \"#utility.yul\":8088:8097   */\n      dup7\n        /* \"#utility.yul\":8084:8102   */\n      add\n        /* \"#utility.yul\":8071:8103   */\n      calldataload\n        /* \"#utility.yul\":8130:8148   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8122:8128   */\n      dup2\n        /* \"#utility.yul\":8119:8149   */\n      gt\n        /* \"#utility.yul\":8116:8233   */\n      iszero\n      tag_167\n      jumpi\n        /* \"#utility.yul\":8152:8231   */\n      tag_168\n      tag_45\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":8116:8233   */\n    tag_167:\n        /* \"#utility.yul\":8257:8335   */\n      tag_169\n        /* \"#utility.yul\":8327:8334   */\n      dup9\n        /* \"#utility.yul\":8318:8324   */\n      dup3\n        /* \"#utility.yul\":8307:8316   */\n      dup10\n        /* \"#utility.yul\":8303:8325   */\n      add\n        /* \"#utility.yul\":8257:8335   */\n      tag_72\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":8247:8335   */\n      swap4\n      pop\n        /* \"#utility.yul\":8042:8345   */\n      pop\n        /* \"#utility.yul\":8412:8414   */\n      0x60\n        /* \"#utility.yul\":8401:8410   */\n      dup7\n        /* \"#utility.yul\":8397:8415   */\n      add\n        /* \"#utility.yul\":8384:8416   */\n      calldataload\n        /* \"#utility.yul\":8443:8461   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8435:8441   */\n      dup2\n        /* \"#utility.yul\":8432:8462   */\n      gt\n        /* \"#utility.yul\":8429:8546   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":8465:8544   */\n      tag_171\n      tag_45\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":8429:8546   */\n    tag_170:\n        /* \"#utility.yul\":8570:8648   */\n      tag_172\n        /* \"#utility.yul\":8640:8647   */\n      dup9\n        /* \"#utility.yul\":8631:8637   */\n      dup3\n        /* \"#utility.yul\":8620:8629   */\n      dup10\n        /* \"#utility.yul\":8616:8638   */\n      add\n        /* \"#utility.yul\":8570:8648   */\n      tag_72\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":8560:8648   */\n      swap3\n      pop\n        /* \"#utility.yul\":8355:8658   */\n      pop\n        /* \"#utility.yul\":8725:8728   */\n      0x80\n        /* \"#utility.yul\":8714:8723   */\n      dup7\n        /* \"#utility.yul\":8710:8729   */\n      add\n        /* \"#utility.yul\":8697:8730   */\n      calldataload\n        /* \"#utility.yul\":8757:8775   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8749:8755   */\n      dup2\n        /* \"#utility.yul\":8746:8776   */\n      gt\n        /* \"#utility.yul\":8743:8860   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":8779:8858   */\n      tag_174\n      tag_45\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":8743:8860   */\n    tag_173:\n        /* \"#utility.yul\":8884:8946   */\n      tag_175\n        /* \"#utility.yul\":8938:8945   */\n      dup9\n        /* \"#utility.yul\":8929:8935   */\n      dup3\n        /* \"#utility.yul\":8918:8927   */\n      dup10\n        /* \"#utility.yul\":8914:8936   */\n      add\n        /* \"#utility.yul\":8884:8946   */\n      tag_67\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":8874:8946   */\n      swap2\n      pop\n        /* \"#utility.yul\":8668:8956   */\n      pop\n        /* \"#utility.yul\":7454:8963   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8969:10058   */\n    tag_32:\n        /* \"#utility.yul\":9073:9079   */\n      0x00\n        /* \"#utility.yul\":9081:9087   */\n      dup1\n        /* \"#utility.yul\":9089:9095   */\n      0x00\n        /* \"#utility.yul\":9097:9103   */\n      dup1\n        /* \"#utility.yul\":9105:9111   */\n      0x00\n        /* \"#utility.yul\":9154:9157   */\n      0xa0\n        /* \"#utility.yul\":9142:9151   */\n      dup7\n        /* \"#utility.yul\":9133:9140   */\n      dup9\n        /* \"#utility.yul\":9129:9152   */\n      sub\n        /* \"#utility.yul\":9125:9158   */\n      slt\n        /* \"#utility.yul\":9122:9242   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":9161:9240   */\n      tag_178\n      tag_44\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":9122:9242   */\n    tag_177:\n        /* \"#utility.yul\":9281:9282   */\n      0x00\n        /* \"#utility.yul\":9306:9359   */\n      tag_179\n        /* \"#utility.yul\":9351:9358   */\n      dup9\n        /* \"#utility.yul\":9342:9348   */\n      dup3\n        /* \"#utility.yul\":9331:9340   */\n      dup10\n        /* \"#utility.yul\":9327:9349   */\n      add\n        /* \"#utility.yul\":9306:9359   */\n      tag_54\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":9296:9359   */\n      swap6\n      pop\n        /* \"#utility.yul\":9252:9369   */\n      pop\n        /* \"#utility.yul\":9408:9410   */\n      0x20\n        /* \"#utility.yul\":9434:9487   */\n      tag_180\n        /* \"#utility.yul\":9479:9486   */\n      dup9\n        /* \"#utility.yul\":9470:9476   */\n      dup3\n        /* \"#utility.yul\":9459:9468   */\n      dup10\n        /* \"#utility.yul\":9455:9477   */\n      add\n        /* \"#utility.yul\":9434:9487   */\n      tag_54\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":9424:9487   */\n      swap5\n      pop\n        /* \"#utility.yul\":9379:9497   */\n      pop\n        /* \"#utility.yul\":9536:9538   */\n      0x40\n        /* \"#utility.yul\":9562:9615   */\n      tag_181\n        /* \"#utility.yul\":9607:9614   */\n      dup9\n        /* \"#utility.yul\":9598:9604   */\n      dup3\n        /* \"#utility.yul\":9587:9596   */\n      dup10\n        /* \"#utility.yul\":9583:9605   */\n      add\n        /* \"#utility.yul\":9562:9615   */\n      tag_57\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":9552:9615   */\n      swap4\n      pop\n        /* \"#utility.yul\":9507:9625   */\n      pop\n        /* \"#utility.yul\":9664:9666   */\n      0x60\n        /* \"#utility.yul\":9690:9743   */\n      tag_182\n        /* \"#utility.yul\":9735:9742   */\n      dup9\n        /* \"#utility.yul\":9726:9732   */\n      dup3\n        /* \"#utility.yul\":9715:9724   */\n      dup10\n        /* \"#utility.yul\":9711:9733   */\n      add\n        /* \"#utility.yul\":9690:9743   */\n      tag_57\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":9680:9743   */\n      swap3\n      pop\n        /* \"#utility.yul\":9635:9753   */\n      pop\n        /* \"#utility.yul\":9820:9823   */\n      0x80\n        /* \"#utility.yul\":9809:9818   */\n      dup7\n        /* \"#utility.yul\":9805:9824   */\n      add\n        /* \"#utility.yul\":9792:9825   */\n      calldataload\n        /* \"#utility.yul\":9852:9870   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9844:9850   */\n      dup2\n        /* \"#utility.yul\":9841:9871   */\n      gt\n        /* \"#utility.yul\":9838:9955   */\n      iszero\n      tag_183\n      jumpi\n        /* \"#utility.yul\":9874:9953   */\n      tag_184\n      tag_45\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":9838:9955   */\n    tag_183:\n        /* \"#utility.yul\":9979:10041   */\n      tag_185\n        /* \"#utility.yul\":10033:10040   */\n      dup9\n        /* \"#utility.yul\":10024:10030   */\n      dup3\n        /* \"#utility.yul\":10013:10022   */\n      dup10\n        /* \"#utility.yul\":10009:10031   */\n      add\n        /* \"#utility.yul\":9979:10041   */\n      tag_67\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":9969:10041   */\n      swap2\n      pop\n        /* \"#utility.yul\":9763:10051   */\n      pop\n        /* \"#utility.yul\":8969:10058   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220dddbdc869d85d03f6b9c4da52f757bef1307f05435379b88962458a4dea1d8e064736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061081f806100206000396000f3fe6080604052600436106100435760003560e01c806301ffc9a71461004f578063150b7a021461008c578063bc197c81146100c9578063f23a6e61146101065761004a565b3661004a57005b600080fd5b34801561005b57600080fd5b50610076600480360381019061007191906102d1565b610143565b6040516100839190610319565b60405180910390f35b34801561009857600080fd5b506100b360048036038101906100ae919061050e565b6101bd565b6040516100c091906105a0565b60405180910390f35b3480156100d557600080fd5b506100f060048036038101906100eb9190610683565b6101d1565b6040516100fd91906105a0565b60405180910390f35b34801561011257600080fd5b5061012d60048036038101906101289190610752565b6101e6565b60405161013a91906105a0565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806101b657506101b5826101fb565b5b9050919050565b600063150b7a0260e01b9050949350505050565b600063bc197c8160e01b905095945050505050565b600063f23a6e6160e01b905095945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6102ae81610279565b81146102b957600080fd5b50565b6000813590506102cb816102a5565b92915050565b6000602082840312156102e7576102e661026f565b5b60006102f5848285016102bc565b91505092915050565b60008115159050919050565b610313816102fe565b82525050565b600060208201905061032e600083018461030a565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061035f82610334565b9050919050565b61036f81610354565b811461037a57600080fd5b50565b60008135905061038c81610366565b92915050565b6000819050919050565b6103a581610392565b81146103b057600080fd5b50565b6000813590506103c28161039c565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61041b826103d2565b810181811067ffffffffffffffff8211171561043a576104396103e3565b5b80604052505050565b600061044d610265565b90506104598282610412565b919050565b600067ffffffffffffffff821115610479576104786103e3565b5b610482826103d2565b9050602081019050919050565b82818337600083830152505050565b60006104b16104ac8461045e565b610443565b9050828152602081018484840111156104cd576104cc6103cd565b5b6104d884828561048f565b509392505050565b600082601f8301126104f5576104f46103c8565b5b813561050584826020860161049e565b91505092915050565b600080600080608085870312156105285761052761026f565b5b60006105368782880161037d565b94505060206105478782880161037d565b9350506040610558878288016103b3565b925050606085013567ffffffffffffffff81111561057957610578610274565b5b610585878288016104e0565b91505092959194509250565b61059a81610279565b82525050565b60006020820190506105b56000830184610591565b92915050565b600067ffffffffffffffff8211156105d6576105d56103e3565b5b602082029050602081019050919050565b600080fd5b60006105ff6105fa846105bb565b610443565b90508083825260208201905060208402830185811115610622576106216105e7565b5b835b8181101561064b578061063788826103b3565b845260208401935050602081019050610624565b5050509392505050565b600082601f83011261066a576106696103c8565b5b813561067a8482602086016105ec565b91505092915050565b600080600080600060a0868803121561069f5761069e61026f565b5b60006106ad8882890161037d565b95505060206106be8882890161037d565b945050604086013567ffffffffffffffff8111156106df576106de610274565b5b6106eb88828901610655565b935050606086013567ffffffffffffffff81111561070c5761070b610274565b5b61071888828901610655565b925050608086013567ffffffffffffffff81111561073957610738610274565b5b610745888289016104e0565b9150509295509295909350565b600080600080600060a0868803121561076e5761076d61026f565b5b600061077c8882890161037d565b955050602061078d8882890161037d565b945050604061079e888289016103b3565b93505060606107af888289016103b3565b925050608086013567ffffffffffffffff8111156107d0576107cf610274565b5b6107dc888289016104e0565b915050929550929590935056fea2646970667358221220dddbdc869d85d03f6b9c4da52f757bef1307f05435379b88962458a4dea1d8e064736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x81F DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x106 JUMPI PUSH2 0x4A JUMP JUMPDEST CALLDATASIZE PUSH2 0x4A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x2D1 JUMP JUMPDEST PUSH2 0x143 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAE SWAP2 SWAP1 PUSH2 0x50E JUMP JUMPDEST PUSH2 0x1BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEB SWAP2 SWAP1 PUSH2 0x683 JUMP JUMPDEST PUSH2 0x1D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFD SWAP2 SWAP1 PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x752 JUMP JUMPDEST PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1B6 JUMPI POP PUSH2 0x1B5 DUP3 PUSH2 0x1FB JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AE DUP2 PUSH2 0x279 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CB DUP2 PUSH2 0x2A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E7 JUMPI PUSH2 0x2E6 PUSH2 0x26F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F5 DUP5 DUP3 DUP6 ADD PUSH2 0x2BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x313 DUP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x32E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x30A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F DUP3 PUSH2 0x334 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x36F DUP2 PUSH2 0x354 JUMP JUMPDEST DUP2 EQ PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x38C DUP2 PUSH2 0x366 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A5 DUP2 PUSH2 0x392 JUMP JUMPDEST DUP2 EQ PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3C2 DUP2 PUSH2 0x39C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x41B DUP3 PUSH2 0x3D2 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x43A JUMPI PUSH2 0x439 PUSH2 0x3E3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44D PUSH2 0x265 JUMP JUMPDEST SWAP1 POP PUSH2 0x459 DUP3 DUP3 PUSH2 0x412 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x479 JUMPI PUSH2 0x478 PUSH2 0x3E3 JUMP JUMPDEST JUMPDEST PUSH2 0x482 DUP3 PUSH2 0x3D2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B1 PUSH2 0x4AC DUP5 PUSH2 0x45E JUMP JUMPDEST PUSH2 0x443 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4CD JUMPI PUSH2 0x4CC PUSH2 0x3CD JUMP JUMPDEST JUMPDEST PUSH2 0x4D8 DUP5 DUP3 DUP6 PUSH2 0x48F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4F5 JUMPI PUSH2 0x4F4 PUSH2 0x3C8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x505 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x49E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x528 JUMPI PUSH2 0x527 PUSH2 0x26F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x536 DUP8 DUP3 DUP9 ADD PUSH2 0x37D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x547 DUP8 DUP3 DUP9 ADD PUSH2 0x37D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x558 DUP8 DUP3 DUP9 ADD PUSH2 0x3B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x579 JUMPI PUSH2 0x578 PUSH2 0x274 JUMP JUMPDEST JUMPDEST PUSH2 0x585 DUP8 DUP3 DUP9 ADD PUSH2 0x4E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x59A DUP2 PUSH2 0x279 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x591 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x5D6 JUMPI PUSH2 0x5D5 PUSH2 0x3E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5FF PUSH2 0x5FA DUP5 PUSH2 0x5BB JUMP JUMPDEST PUSH2 0x443 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x622 JUMPI PUSH2 0x621 PUSH2 0x5E7 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x64B JUMPI DUP1 PUSH2 0x637 DUP9 DUP3 PUSH2 0x3B3 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x624 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x66A JUMPI PUSH2 0x669 PUSH2 0x3C8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x67A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x5EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x69F JUMPI PUSH2 0x69E PUSH2 0x26F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6AD DUP9 DUP3 DUP10 ADD PUSH2 0x37D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x6BE DUP9 DUP3 DUP10 ADD PUSH2 0x37D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6DF JUMPI PUSH2 0x6DE PUSH2 0x274 JUMP JUMPDEST JUMPDEST PUSH2 0x6EB DUP9 DUP3 DUP10 ADD PUSH2 0x655 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x70C JUMPI PUSH2 0x70B PUSH2 0x274 JUMP JUMPDEST JUMPDEST PUSH2 0x718 DUP9 DUP3 DUP10 ADD PUSH2 0x655 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x739 JUMPI PUSH2 0x738 PUSH2 0x274 JUMP JUMPDEST JUMPDEST PUSH2 0x745 DUP9 DUP3 DUP10 ADD PUSH2 0x4E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x76E JUMPI PUSH2 0x76D PUSH2 0x26F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP9 DUP3 DUP10 ADD PUSH2 0x37D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x78D DUP9 DUP3 DUP10 ADD PUSH2 0x37D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x79E DUP9 DUP3 DUP10 ADD PUSH2 0x3B3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x7AF DUP9 DUP3 DUP10 ADD PUSH2 0x3B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7D0 JUMPI PUSH2 0x7CF PUSH2 0x274 JUMP JUMPDEST JUMPDEST PUSH2 0x7DC DUP9 DUP3 DUP10 ADD PUSH2 0x4E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD 0xDB 0xDC DUP7 SWAP14 DUP6 0xD0 EXTCODEHASH PUSH12 0x9C4DA52F757BEF1307F05435 CALLDATACOPY SWAP12 DUP9 SWAP7 0x24 PC LOG4 0xDE LOG1 0xD8 0xE0 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "213:161:20:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_2528": {
									"entryPoint": null,
									"id": 2528,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@onERC1155BatchReceived_104": {
									"entryPoint": 465,
									"id": 104,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC1155Received_81": {
									"entryPoint": 486,
									"id": 81,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC721Received_377": {
									"entryPoint": 445,
									"id": 377,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@supportsInterface_1176": {
									"entryPoint": 507,
									"id": 1176,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_138": {
									"entryPoint": 323,
									"id": 138,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1516,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 1182,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 1248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 1667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 1294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 1874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 1425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 1440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 613,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 1118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 852,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 766,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 1167,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 1042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 995,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 968,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1511,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 973,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 628,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 623,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 978,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 677,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10061:21",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:21",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:21"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:21"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:21",
														"type": ""
													}
												],
												"src": "7:75:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:21"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:21"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:21",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:21",
														"type": ""
													}
												],
												"src": "334:149:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:21"
															},
															"nodeType": "YulIf",
															"src": "541:62:21"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:21",
														"type": ""
													}
												],
												"src": "489:120:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:21"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:21",
														"type": ""
													}
												],
												"src": "615:137:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:21"
															},
															"nodeType": "YulIf",
															"src": "833:119:21"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:21",
														"type": ""
													}
												],
												"src": "758:327:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:21"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:21",
														"type": ""
													}
												],
												"src": "1091:90:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:21"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:21",
														"type": ""
													}
												],
												"src": "1187:109:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:21",
														"type": ""
													}
												],
												"src": "1302:210:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1563:81:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1573:65:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1588:5:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1595:42:21",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1584:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1584:54:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1545:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1555:7:21",
														"type": ""
													}
												],
												"src": "1518:126:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1695:51:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1705:35:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1734:5:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1716:17:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1716:24:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1705:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1677:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1687:7:21",
														"type": ""
													}
												],
												"src": "1650:96:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1795:79:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1852:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1861:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1864:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1854:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1854:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1854:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1818:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1843:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1825:17:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1825:24:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1815:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1815:35:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1808:43:21"
															},
															"nodeType": "YulIf",
															"src": "1805:63:21"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1788:5:21",
														"type": ""
													}
												],
												"src": "1752:122:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1932:87:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1942:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1964:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1951:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1951:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1942:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2007:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1980:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1980:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1980:33:21"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1910:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1918:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1926:5:21",
														"type": ""
													}
												],
												"src": "1880:139:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2070:32:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2080:16:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2091:5:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2080:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2052:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2062:7:21",
														"type": ""
													}
												],
												"src": "2025:77:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2151:79:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2208:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2217:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2220:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2210:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2210:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2210:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2174:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2199:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2181:17:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2181:24:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2171:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2171:35:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2164:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2164:43:21"
															},
															"nodeType": "YulIf",
															"src": "2161:63:21"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2144:5:21",
														"type": ""
													}
												],
												"src": "2108:122:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2288:87:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2298:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2320:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2307:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2307:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2298:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2363:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2336:26:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2336:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2336:33:21"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2266:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2274:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2282:5:21",
														"type": ""
													}
												],
												"src": "2236:139:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2470:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2487:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2490:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2480:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:12:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2480:12:21"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "2381:117:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2593:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2610:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2613:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2603:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2603:12:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2603:12:21"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "2504:117:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2675:54:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2685:38:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2703:5:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2710:2:21",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2699:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2699:14:21"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2719:2:21",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2715:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2715:7:21"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2695:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2695:28:21"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2685:6:21"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2658:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2668:6:21",
														"type": ""
													}
												],
												"src": "2627:102:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2763:152:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2780:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2783:77:21",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2773:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2773:88:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2773:88:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2877:1:21",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2880:4:21",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2870:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2870:15:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2870:15:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2901:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2904:4:21",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2894:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2894:15:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2894:15:21"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2735:180:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2964:238:21",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2974:58:21",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2996:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "3026:4:21"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3004:21:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3004:27:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2992:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2992:40:21"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2978:10:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3143:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3145:16:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3145:18:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3145:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3086:10:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3098:18:21",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3083:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3083:34:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3122:10:21"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3134:6:21"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3119:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3119:22:21"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3080:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3080:62:21"
															},
															"nodeType": "YulIf",
															"src": "3077:88:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3181:2:21",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3185:10:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3174:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3174:22:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3174:22:21"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2950:6:21",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2958:4:21",
														"type": ""
													}
												],
												"src": "2921:281:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3249:88:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3259:30:21",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "3269:18:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3269:20:21"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3259:6:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3318:6:21"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "3326:4:21"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3298:19:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3298:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3298:33:21"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3233:4:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3242:6:21",
														"type": ""
													}
												],
												"src": "3208:129:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3409:241:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3514:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3516:16:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3516:18:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3516:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3486:6:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3494:18:21",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3483:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3483:30:21"
															},
															"nodeType": "YulIf",
															"src": "3480:56:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3546:37:21",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3576:6:21"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "3554:21:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3554:29:21"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3546:4:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3620:23:21",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "3632:4:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3638:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3628:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3628:15:21"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3620:4:21"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3393:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3404:4:21",
														"type": ""
													}
												],
												"src": "3343:307:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3720:82:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3743:3:21"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3748:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3753:6:21"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3730:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3730:30:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3730:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3780:3:21"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3785:6:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3776:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3776:16:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3794:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3769:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3769:27:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3769:27:21"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3702:3:21",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3707:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3712:6:21",
														"type": ""
													}
												],
												"src": "3656:146:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3891:340:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3901:74:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3967:6:21"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3926:40:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3926:48:21"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3910:15:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3910:65:21"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3901:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "3991:5:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3998:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3984:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3984:21:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3984:21:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4014:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "4029:5:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4036:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4025:16:21"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4018:3:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4079:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "4081:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4081:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4081:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4060:3:21"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4065:6:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4056:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4056:16:21"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4074:3:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4053:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4053:25:21"
															},
															"nodeType": "YulIf",
															"src": "4050:112:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4208:3:21"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4213:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4218:6:21"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "4171:36:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4171:54:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4171:54:21"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3864:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3869:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3877:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3885:5:21",
														"type": ""
													}
												],
												"src": "3808:423:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4311:277:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4360:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "4362:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4362:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4362:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4339:6:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4347:4:21",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4335:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4335:17:21"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4354:3:21"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4331:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4331:27:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4324:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4324:35:21"
															},
															"nodeType": "YulIf",
															"src": "4321:122:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4452:34:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4479:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4466:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4466:20:21"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4456:6:21",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4495:87:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4555:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4563:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4551:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4551:17:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4570:6:21"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4578:3:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4504:46:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4504:78:21"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4495:5:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4289:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4297:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4305:5:21",
														"type": ""
													}
												],
												"src": "4250:338:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4720:817:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4767:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4769:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4769:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4769:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4741:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4750:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4737:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4737:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4762:3:21",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4733:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4733:33:21"
															},
															"nodeType": "YulIf",
															"src": "4730:120:21"
														},
														{
															"nodeType": "YulBlock",
															"src": "4860:117:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4875:15:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4889:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4879:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4904:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4939:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4950:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4935:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4935:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4959:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4914:20:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4914:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4904:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4987:118:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5002:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5016:2:21",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5006:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5032:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5067:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5078:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5063:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5063:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5087:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5042:20:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5042:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5032:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5115:118:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5130:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5144:2:21",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5134:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5160:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5195:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5206:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5191:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5191:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5215:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5170:20:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5170:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5160:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5243:287:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5258:46:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5289:9:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5300:2:21",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5285:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5285:18:21"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5272:12:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5272:32:21"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5262:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5351:83:21",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5353:77:21"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5353:79:21"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5353:79:21"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5323:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5331:18:21",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5320:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5320:30:21"
																	},
																	"nodeType": "YulIf",
																	"src": "5317:117:21"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5448:72:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5492:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5503:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5488:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5488:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5512:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5458:29:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5458:62:21"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "5448:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4666:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4677:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4689:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4697:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4705:6:21",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4713:6:21",
														"type": ""
													}
												],
												"src": "4594:943:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5606:52:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5623:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5645:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "5628:16:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5628:23:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5616:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5616:36:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5616:36:21"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5594:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5601:3:21",
														"type": ""
													}
												],
												"src": "5543:115:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5760:122:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5770:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5782:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5793:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5778:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5778:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5770:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5848:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5861:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5872:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5857:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5857:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5806:41:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5806:69:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5806:69:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5732:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5744:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5755:4:21",
														"type": ""
													}
												],
												"src": "5664:218:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5970:229:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6075:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6077:16:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6077:18:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6077:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6047:6:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6055:18:21",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6044:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6044:30:21"
															},
															"nodeType": "YulIf",
															"src": "6041:56:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6107:25:21",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6119:6:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6127:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6115:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6115:17:21"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6107:4:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6169:23:21",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6181:4:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6187:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6177:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6177:15:21"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6169:4:21"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5954:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5965:4:21",
														"type": ""
													}
												],
												"src": "5888:311:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6294:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6311:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6314:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6304:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6304:12:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6304:12:21"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "6205:117:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6447:608:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6457:90:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6539:6:21"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6482:56:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6482:64:21"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6466:15:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6466:81:21"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6457:5:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6556:16:21",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "6567:5:21"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "6560:3:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6589:5:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6596:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6582:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6582:21:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6582:21:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6612:23:21",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6623:5:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6630:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6619:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6619:16:21"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "6612:3:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6645:44:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6663:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6675:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6683:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6671:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6671:17:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6659:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6659:30:21"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "6649:6:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6717:103:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "6731:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6731:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6731:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6704:6:21"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6712:3:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6701:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6701:15:21"
															},
															"nodeType": "YulIf",
															"src": "6698:122:21"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6905:144:21",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6920:21:21",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "6938:3:21"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "6924:10:21",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6962:3:21"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "6988:10:21"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "7000:3:21"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "6967:20:21"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6967:37:21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6955:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6955:50:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6955:50:21"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7018:21:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "7029:3:21"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7034:4:21",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7025:3:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7025:14:21"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7018:3:21"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6858:3:21"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6863:6:21"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6855:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6855:15:21"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6871:25:21",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6873:21:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "6884:3:21"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6889:4:21",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6880:3:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6880:14:21"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6873:3:21"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6833:21:21",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6835:17:21",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "6846:6:21"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "6839:3:21",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "6829:220:21"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6417:6:21",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6425:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6433:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6441:5:21",
														"type": ""
													}
												],
												"src": "6345:710:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7155:293:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7204:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "7206:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7206:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7206:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7183:6:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7191:4:21",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7179:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7179:17:21"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "7198:3:21"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "7175:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7175:27:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7168:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7168:35:21"
															},
															"nodeType": "YulIf",
															"src": "7165:122:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7296:34:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7323:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7310:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7310:20:21"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7300:6:21",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7339:103:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7415:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7423:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7411:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7411:17:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7430:6:21"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7438:3:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7348:62:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7348:94:21"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7339:5:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7133:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7141:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "7149:5:21",
														"type": ""
													}
												],
												"src": "7078:370:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7647:1316:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7694:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7696:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7696:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7696:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7668:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7677:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7664:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7664:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7689:3:21",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7660:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7660:33:21"
															},
															"nodeType": "YulIf",
															"src": "7657:120:21"
														},
														{
															"nodeType": "YulBlock",
															"src": "7787:117:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7802:15:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7816:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7806:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7831:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7866:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7877:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7862:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7862:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7886:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7841:20:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7841:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7831:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7914:118:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7929:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7943:2:21",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7933:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7959:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7994:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8005:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7990:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7990:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8014:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7969:20:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7969:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7959:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8042:303:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8057:46:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8088:9:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8099:2:21",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8084:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8084:18:21"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8071:12:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8071:32:21"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8061:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8150:83:21",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8152:77:21"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8152:79:21"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8152:79:21"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8122:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8130:18:21",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8119:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8119:30:21"
																	},
																	"nodeType": "YulIf",
																	"src": "8116:117:21"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8247:88:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8307:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8318:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8303:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8303:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8327:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8257:45:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8257:78:21"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "8247:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8355:303:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8370:46:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8401:9:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8412:2:21",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8397:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8397:18:21"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8384:12:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8384:32:21"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8374:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8463:83:21",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8465:77:21"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8465:79:21"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8465:79:21"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8435:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8443:18:21",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8432:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8432:30:21"
																	},
																	"nodeType": "YulIf",
																	"src": "8429:117:21"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8560:88:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8620:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8631:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8616:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8616:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8640:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8570:45:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8570:78:21"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "8560:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8668:288:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8683:47:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8714:9:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8725:3:21",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8710:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8710:19:21"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8697:12:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8697:33:21"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8687:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8777:83:21",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8779:77:21"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8779:79:21"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8779:79:21"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8749:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8757:18:21",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8746:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8746:30:21"
																	},
																	"nodeType": "YulIf",
																	"src": "8743:117:21"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8874:72:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8918:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8929:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8914:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8914:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8938:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8884:29:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8884:62:21"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "8874:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7585:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7596:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7608:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7616:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7624:6:21",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7632:6:21",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7640:6:21",
														"type": ""
													}
												],
												"src": "7454:1509:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9112:946:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9159:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9161:77:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9161:79:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9161:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9133:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9142:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9129:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9129:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9154:3:21",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9125:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9125:33:21"
															},
															"nodeType": "YulIf",
															"src": "9122:120:21"
														},
														{
															"nodeType": "YulBlock",
															"src": "9252:117:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9267:15:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9281:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9271:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9296:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9331:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9342:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9327:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9327:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9351:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9306:20:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9306:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9296:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9379:118:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9394:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9408:2:21",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9398:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9424:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9459:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9470:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9455:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9455:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9479:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9434:20:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9434:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9424:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9507:118:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9522:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9536:2:21",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9526:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9552:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9587:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9598:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9583:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9583:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9607:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9562:20:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9562:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9552:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9635:118:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9650:16:21",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9664:2:21",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9654:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9680:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9715:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9726:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9711:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9711:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9735:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9690:20:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9690:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9680:6:21"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9763:288:21",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9778:47:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9809:9:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9820:3:21",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9805:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9805:19:21"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9792:12:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9792:33:21"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9782:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9872:83:21",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9874:77:21"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9874:79:21"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9874:79:21"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9844:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9852:18:21",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9841:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9841:30:21"
																	},
																	"nodeType": "YulIf",
																	"src": "9838:117:21"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9969:72:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10013:9:21"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10024:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10009:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10009:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10033:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9979:29:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9979:62:21"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "9969:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9050:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9061:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9073:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9081:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9089:6:21",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9097:6:21",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "9105:6:21",
														"type": ""
													}
												],
												"src": "8969:1089:21"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 21,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100435760003560e01c806301ffc9a71461004f578063150b7a021461008c578063bc197c81146100c9578063f23a6e61146101065761004a565b3661004a57005b600080fd5b34801561005b57600080fd5b50610076600480360381019061007191906102d1565b610143565b6040516100839190610319565b60405180910390f35b34801561009857600080fd5b506100b360048036038101906100ae919061050e565b6101bd565b6040516100c091906105a0565b60405180910390f35b3480156100d557600080fd5b506100f060048036038101906100eb9190610683565b6101d1565b6040516100fd91906105a0565b60405180910390f35b34801561011257600080fd5b5061012d60048036038101906101289190610752565b6101e6565b60405161013a91906105a0565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806101b657506101b5826101fb565b5b9050919050565b600063150b7a0260e01b9050949350505050565b600063bc197c8160e01b905095945050505050565b600063f23a6e6160e01b905095945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6102ae81610279565b81146102b957600080fd5b50565b6000813590506102cb816102a5565b92915050565b6000602082840312156102e7576102e661026f565b5b60006102f5848285016102bc565b91505092915050565b60008115159050919050565b610313816102fe565b82525050565b600060208201905061032e600083018461030a565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061035f82610334565b9050919050565b61036f81610354565b811461037a57600080fd5b50565b60008135905061038c81610366565b92915050565b6000819050919050565b6103a581610392565b81146103b057600080fd5b50565b6000813590506103c28161039c565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61041b826103d2565b810181811067ffffffffffffffff8211171561043a576104396103e3565b5b80604052505050565b600061044d610265565b90506104598282610412565b919050565b600067ffffffffffffffff821115610479576104786103e3565b5b610482826103d2565b9050602081019050919050565b82818337600083830152505050565b60006104b16104ac8461045e565b610443565b9050828152602081018484840111156104cd576104cc6103cd565b5b6104d884828561048f565b509392505050565b600082601f8301126104f5576104f46103c8565b5b813561050584826020860161049e565b91505092915050565b600080600080608085870312156105285761052761026f565b5b60006105368782880161037d565b94505060206105478782880161037d565b9350506040610558878288016103b3565b925050606085013567ffffffffffffffff81111561057957610578610274565b5b610585878288016104e0565b91505092959194509250565b61059a81610279565b82525050565b60006020820190506105b56000830184610591565b92915050565b600067ffffffffffffffff8211156105d6576105d56103e3565b5b602082029050602081019050919050565b600080fd5b60006105ff6105fa846105bb565b610443565b90508083825260208201905060208402830185811115610622576106216105e7565b5b835b8181101561064b578061063788826103b3565b845260208401935050602081019050610624565b5050509392505050565b600082601f83011261066a576106696103c8565b5b813561067a8482602086016105ec565b91505092915050565b600080600080600060a0868803121561069f5761069e61026f565b5b60006106ad8882890161037d565b95505060206106be8882890161037d565b945050604086013567ffffffffffffffff8111156106df576106de610274565b5b6106eb88828901610655565b935050606086013567ffffffffffffffff81111561070c5761070b610274565b5b61071888828901610655565b925050608086013567ffffffffffffffff81111561073957610738610274565b5b610745888289016104e0565b9150509295509295909350565b600080600080600060a0868803121561076e5761076d61026f565b5b600061077c8882890161037d565b955050602061078d8882890161037d565b945050604061079e888289016103b3565b93505060606107af888289016103b3565b925050608086013567ffffffffffffffff8111156107d0576107cf610274565b5b6107dc888289016104e0565b915050929550929590935056fea2646970667358221220dddbdc869d85d03f6b9c4da52f757bef1307f05435379b88962458a4dea1d8e064736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x106 JUMPI PUSH2 0x4A JUMP JUMPDEST CALLDATASIZE PUSH2 0x4A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x2D1 JUMP JUMPDEST PUSH2 0x143 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAE SWAP2 SWAP1 PUSH2 0x50E JUMP JUMPDEST PUSH2 0x1BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEB SWAP2 SWAP1 PUSH2 0x683 JUMP JUMPDEST PUSH2 0x1D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFD SWAP2 SWAP1 PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x752 JUMP JUMPDEST PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1B6 JUMPI POP PUSH2 0x1B5 DUP3 PUSH2 0x1FB JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AE DUP2 PUSH2 0x279 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CB DUP2 PUSH2 0x2A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E7 JUMPI PUSH2 0x2E6 PUSH2 0x26F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F5 DUP5 DUP3 DUP6 ADD PUSH2 0x2BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x313 DUP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x32E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x30A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F DUP3 PUSH2 0x334 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x36F DUP2 PUSH2 0x354 JUMP JUMPDEST DUP2 EQ PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x38C DUP2 PUSH2 0x366 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A5 DUP2 PUSH2 0x392 JUMP JUMPDEST DUP2 EQ PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3C2 DUP2 PUSH2 0x39C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x41B DUP3 PUSH2 0x3D2 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x43A JUMPI PUSH2 0x439 PUSH2 0x3E3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44D PUSH2 0x265 JUMP JUMPDEST SWAP1 POP PUSH2 0x459 DUP3 DUP3 PUSH2 0x412 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x479 JUMPI PUSH2 0x478 PUSH2 0x3E3 JUMP JUMPDEST JUMPDEST PUSH2 0x482 DUP3 PUSH2 0x3D2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B1 PUSH2 0x4AC DUP5 PUSH2 0x45E JUMP JUMPDEST PUSH2 0x443 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4CD JUMPI PUSH2 0x4CC PUSH2 0x3CD JUMP JUMPDEST JUMPDEST PUSH2 0x4D8 DUP5 DUP3 DUP6 PUSH2 0x48F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4F5 JUMPI PUSH2 0x4F4 PUSH2 0x3C8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x505 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x49E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x528 JUMPI PUSH2 0x527 PUSH2 0x26F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x536 DUP8 DUP3 DUP9 ADD PUSH2 0x37D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x547 DUP8 DUP3 DUP9 ADD PUSH2 0x37D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x558 DUP8 DUP3 DUP9 ADD PUSH2 0x3B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x579 JUMPI PUSH2 0x578 PUSH2 0x274 JUMP JUMPDEST JUMPDEST PUSH2 0x585 DUP8 DUP3 DUP9 ADD PUSH2 0x4E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x59A DUP2 PUSH2 0x279 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x591 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x5D6 JUMPI PUSH2 0x5D5 PUSH2 0x3E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5FF PUSH2 0x5FA DUP5 PUSH2 0x5BB JUMP JUMPDEST PUSH2 0x443 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x622 JUMPI PUSH2 0x621 PUSH2 0x5E7 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x64B JUMPI DUP1 PUSH2 0x637 DUP9 DUP3 PUSH2 0x3B3 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x624 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x66A JUMPI PUSH2 0x669 PUSH2 0x3C8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x67A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x5EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x69F JUMPI PUSH2 0x69E PUSH2 0x26F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6AD DUP9 DUP3 DUP10 ADD PUSH2 0x37D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x6BE DUP9 DUP3 DUP10 ADD PUSH2 0x37D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6DF JUMPI PUSH2 0x6DE PUSH2 0x274 JUMP JUMPDEST JUMPDEST PUSH2 0x6EB DUP9 DUP3 DUP10 ADD PUSH2 0x655 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x70C JUMPI PUSH2 0x70B PUSH2 0x274 JUMP JUMPDEST JUMPDEST PUSH2 0x718 DUP9 DUP3 DUP10 ADD PUSH2 0x655 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x739 JUMPI PUSH2 0x738 PUSH2 0x274 JUMP JUMPDEST JUMPDEST PUSH2 0x745 DUP9 DUP3 DUP10 ADD PUSH2 0x4E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x76E JUMPI PUSH2 0x76D PUSH2 0x26F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP9 DUP3 DUP10 ADD PUSH2 0x37D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x78D DUP9 DUP3 DUP10 ADD PUSH2 0x37D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x79E DUP9 DUP3 DUP10 ADD PUSH2 0x3B3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x7AF DUP9 DUP3 DUP10 ADD PUSH2 0x3B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7D0 JUMPI PUSH2 0x7CF PUSH2 0x274 JUMP JUMPDEST JUMPDEST PUSH2 0x7DC DUP9 DUP3 DUP10 ADD PUSH2 0x4E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD 0xDB 0xDC DUP7 SWAP14 DUP6 0xD0 EXTCODEHASH PUSH12 0x9C4DA52F757BEF1307F05435 CALLDATACOPY SWAP12 DUP9 SWAP7 0x24 PC LOG4 0xDE LOG1 0xD8 0xE0 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "213:161:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:221:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;603:162:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;724:247:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;499:219;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;387:221:3;489:4;527:34;512:49;;;:11;:49;;;;:89;;;;565:36;589:11;565:23;:36::i;:::-;512:89;505:96;;387:221;;;:::o;603:162:7:-;703:6;728:30;;;721:37;;603:162;;;;;;:::o;724:247:2:-;903:6;928:36;;;921:43;;724:247;;;;;;;:::o;499:219::-;655:6;680:31;;;673:38;;499:219;;;;;;;:::o;829:155:12:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;7:75:21:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:122::-;1825:24;1843:5;1825:24;:::i;:::-;1818:5;1815:35;1805:63;;1864:1;1861;1854:12;1805:63;1752:122;:::o;1880:139::-;1926:5;1964:6;1951:20;1942:29;;1980:33;2007:5;1980:33;:::i;:::-;1880:139;;;;:::o;2025:77::-;2062:7;2091:5;2080:16;;2025:77;;;:::o;2108:122::-;2181:24;2199:5;2181:24;:::i;:::-;2174:5;2171:35;2161:63;;2220:1;2217;2210:12;2161:63;2108:122;:::o;2236:139::-;2282:5;2320:6;2307:20;2298:29;;2336:33;2363:5;2336:33;:::i;:::-;2236:139;;;;:::o;2381:117::-;2490:1;2487;2480:12;2504:117;2613:1;2610;2603:12;2627:102;2668:6;2719:2;2715:7;2710:2;2703:5;2699:14;2695:28;2685:38;;2627:102;;;:::o;2735:180::-;2783:77;2780:1;2773:88;2880:4;2877:1;2870:15;2904:4;2901:1;2894:15;2921:281;3004:27;3026:4;3004:27;:::i;:::-;2996:6;2992:40;3134:6;3122:10;3119:22;3098:18;3086:10;3083:34;3080:62;3077:88;;;3145:18;;:::i;:::-;3077:88;3185:10;3181:2;3174:22;2964:238;2921:281;;:::o;3208:129::-;3242:6;3269:20;;:::i;:::-;3259:30;;3298:33;3326:4;3318:6;3298:33;:::i;:::-;3208:129;;;:::o;3343:307::-;3404:4;3494:18;3486:6;3483:30;3480:56;;;3516:18;;:::i;:::-;3480:56;3554:29;3576:6;3554:29;:::i;:::-;3546:37;;3638:4;3632;3628:15;3620:23;;3343:307;;;:::o;3656:146::-;3753:6;3748:3;3743;3730:30;3794:1;3785:6;3780:3;3776:16;3769:27;3656:146;;;:::o;3808:423::-;3885:5;3910:65;3926:48;3967:6;3926:48;:::i;:::-;3910:65;:::i;:::-;3901:74;;3998:6;3991:5;3984:21;4036:4;4029:5;4025:16;4074:3;4065:6;4060:3;4056:16;4053:25;4050:112;;;4081:79;;:::i;:::-;4050:112;4171:54;4218:6;4213:3;4208;4171:54;:::i;:::-;3891:340;3808:423;;;;;:::o;4250:338::-;4305:5;4354:3;4347:4;4339:6;4335:17;4331:27;4321:122;;4362:79;;:::i;:::-;4321:122;4479:6;4466:20;4504:78;4578:3;4570:6;4563:4;4555:6;4551:17;4504:78;:::i;:::-;4495:87;;4311:277;4250:338;;;;:::o;4594:943::-;4689:6;4697;4705;4713;4762:3;4750:9;4741:7;4737:23;4733:33;4730:120;;;4769:79;;:::i;:::-;4730:120;4889:1;4914:53;4959:7;4950:6;4939:9;4935:22;4914:53;:::i;:::-;4904:63;;4860:117;5016:2;5042:53;5087:7;5078:6;5067:9;5063:22;5042:53;:::i;:::-;5032:63;;4987:118;5144:2;5170:53;5215:7;5206:6;5195:9;5191:22;5170:53;:::i;:::-;5160:63;;5115:118;5300:2;5289:9;5285:18;5272:32;5331:18;5323:6;5320:30;5317:117;;;5353:79;;:::i;:::-;5317:117;5458:62;5512:7;5503:6;5492:9;5488:22;5458:62;:::i;:::-;5448:72;;5243:287;4594:943;;;;;;;:::o;5543:115::-;5628:23;5645:5;5628:23;:::i;:::-;5623:3;5616:36;5543:115;;:::o;5664:218::-;5755:4;5793:2;5782:9;5778:18;5770:26;;5806:69;5872:1;5861:9;5857:17;5848:6;5806:69;:::i;:::-;5664:218;;;;:::o;5888:311::-;5965:4;6055:18;6047:6;6044:30;6041:56;;;6077:18;;:::i;:::-;6041:56;6127:4;6119:6;6115:17;6107:25;;6187:4;6181;6177:15;6169:23;;5888:311;;;:::o;6205:117::-;6314:1;6311;6304:12;6345:710;6441:5;6466:81;6482:64;6539:6;6482:64;:::i;:::-;6466:81;:::i;:::-;6457:90;;6567:5;6596:6;6589:5;6582:21;6630:4;6623:5;6619:16;6612:23;;6683:4;6675:6;6671:17;6663:6;6659:30;6712:3;6704:6;6701:15;6698:122;;;6731:79;;:::i;:::-;6698:122;6846:6;6829:220;6863:6;6858:3;6855:15;6829:220;;;6938:3;6967:37;7000:3;6988:10;6967:37;:::i;:::-;6962:3;6955:50;7034:4;7029:3;7025:14;7018:21;;6905:144;6889:4;6884:3;6880:14;6873:21;;6829:220;;;6833:21;6447:608;;6345:710;;;;;:::o;7078:370::-;7149:5;7198:3;7191:4;7183:6;7179:17;7175:27;7165:122;;7206:79;;:::i;:::-;7165:122;7323:6;7310:20;7348:94;7438:3;7430:6;7423:4;7415:6;7411:17;7348:94;:::i;:::-;7339:103;;7155:293;7078:370;;;;:::o;7454:1509::-;7608:6;7616;7624;7632;7640;7689:3;7677:9;7668:7;7664:23;7660:33;7657:120;;;7696:79;;:::i;:::-;7657:120;7816:1;7841:53;7886:7;7877:6;7866:9;7862:22;7841:53;:::i;:::-;7831:63;;7787:117;7943:2;7969:53;8014:7;8005:6;7994:9;7990:22;7969:53;:::i;:::-;7959:63;;7914:118;8099:2;8088:9;8084:18;8071:32;8130:18;8122:6;8119:30;8116:117;;;8152:79;;:::i;:::-;8116:117;8257:78;8327:7;8318:6;8307:9;8303:22;8257:78;:::i;:::-;8247:88;;8042:303;8412:2;8401:9;8397:18;8384:32;8443:18;8435:6;8432:30;8429:117;;;8465:79;;:::i;:::-;8429:117;8570:78;8640:7;8631:6;8620:9;8616:22;8570:78;:::i;:::-;8560:88;;8355:303;8725:3;8714:9;8710:19;8697:33;8757:18;8749:6;8746:30;8743:117;;;8779:79;;:::i;:::-;8743:117;8884:62;8938:7;8929:6;8918:9;8914:22;8884:62;:::i;:::-;8874:72;;8668:288;7454:1509;;;;;;;;:::o;8969:1089::-;9073:6;9081;9089;9097;9105;9154:3;9142:9;9133:7;9129:23;9125:33;9122:120;;;9161:79;;:::i;:::-;9122:120;9281:1;9306:53;9351:7;9342:6;9331:9;9327:22;9306:53;:::i;:::-;9296:63;;9252:117;9408:2;9434:53;9479:7;9470:6;9459:9;9455:22;9434:53;:::i;:::-;9424:63;;9379:118;9536:2;9562:53;9607:7;9598:6;9587:9;9583:22;9562:53;:::i;:::-;9552:63;;9507:118;9664:2;9690:53;9735:7;9726:6;9715:9;9711:22;9690:53;:::i;:::-;9680:63;;9635:118;9820:3;9809:9;9805:19;9792:33;9852:18;9844:6;9841:30;9838:117;;;9874:79;;:::i;:::-;9838:117;9979:62;10033:7;10024:6;10013:9;10009:22;9979:62;:::i;:::-;9969:72;;9763:288;8969:1089;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "415800",
								"executionCost": "449",
								"totalCost": "416249"
							},
							"external": {
								"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
								"onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"supportsInterface(bytes4)": "705"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 213,
									"end": 374,
									"name": "PUSH",
									"source": 20,
									"value": "80"
								},
								{
									"begin": 213,
									"end": 374,
									"name": "PUSH",
									"source": 20,
									"value": "40"
								},
								{
									"begin": 213,
									"end": 374,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 213,
									"end": 374,
									"name": "CALLVALUE",
									"source": 20
								},
								{
									"begin": 213,
									"end": 374,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 213,
									"end": 374,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 213,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 213,
									"end": 374,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 213,
									"end": 374,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 213,
									"end": 374,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 213,
									"end": 374,
									"name": "REVERT",
									"source": 20
								},
								{
									"begin": 213,
									"end": 374,
									"name": "tag",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 213,
									"end": 374,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 213,
									"end": 374,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 213,
									"end": 374,
									"name": "PUSH #[$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 213,
									"end": 374,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 213,
									"end": 374,
									"name": "PUSH [$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 213,
									"end": 374,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 213,
									"end": 374,
									"name": "CODECOPY",
									"source": 20
								},
								{
									"begin": 213,
									"end": 374,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 213,
									"end": 374,
									"name": "RETURN",
									"source": 20
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dddbdc869d85d03f6b9c4da52f757bef1307f05435379b88962458a4dea1d8e064736f6c63430008120033",
									".code": [
										{
											"begin": 213,
											"end": 374,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 213,
											"end": 374,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 213,
											"end": 374,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 213,
											"end": 374,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 213,
											"end": 374,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 213,
											"end": 374,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 213,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 213,
											"end": 374,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 213,
											"end": 374,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 213,
											"end": 374,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 213,
											"end": 374,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 213,
											"end": 374,
											"name": "SHR",
											"source": 20
										},
										{
											"begin": 213,
											"end": 374,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 213,
											"end": 374,
											"name": "PUSH",
											"source": 20,
											"value": "1FFC9A7"
										},
										{
											"begin": 213,
											"end": 374,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 213,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "3"
										},
										{
											"begin": 213,
											"end": 374,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 213,
											"end": 374,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 213,
											"end": 374,
											"name": "PUSH",
											"source": 20,
											"value": "150B7A02"
										},
										{
											"begin": 213,
											"end": 374,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 213,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 213,
											"end": 374,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 213,
											"end": 374,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 213,
											"end": 374,
											"name": "PUSH",
											"source": 20,
											"value": "BC197C81"
										},
										{
											"begin": 213,
											"end": 374,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 213,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "5"
										},
										{
											"begin": 213,
											"end": 374,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 213,
											"end": 374,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 213,
											"end": 374,
											"name": "PUSH",
											"source": 20,
											"value": "F23A6E61"
										},
										{
											"begin": 213,
											"end": 374,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 213,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "6"
										},
										{
											"begin": 213,
											"end": 374,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 213,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 213,
											"end": 374,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 213,
											"end": 374,
											"name": "tag",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 213,
											"end": 374,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 213,
											"end": 374,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 213,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 213,
											"end": 374,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 213,
											"end": 374,
											"name": "STOP",
											"source": 20
										},
										{
											"begin": 213,
											"end": 374,
											"name": "tag",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 213,
											"end": 374,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 213,
											"end": 374,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 213,
											"end": 374,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 213,
											"end": 374,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 387,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 387,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 387,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 603,
											"end": 765,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 603,
											"end": 765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 603,
											"end": 765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 603,
											"end": 765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 724,
											"end": 971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 724,
											"end": 971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 724,
											"end": 971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 499,
											"end": 718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 499,
											"end": 718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 499,
											"end": 718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 489,
											"end": 493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 527,
											"end": 561,
											"name": "PUSH",
											"source": 3,
											"value": "4E2312E000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 512,
											"end": 561,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 512,
											"end": 523,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 512,
											"end": 561,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 561,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 512,
											"end": 561,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 512,
											"end": 561,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 512,
											"end": 601,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 512,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 512,
											"end": 601,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 512,
											"end": 601,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 565,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 589,
											"end": 600,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 565,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 565,
											"end": 601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 565,
											"end": 601,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 512,
											"end": 601,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 512,
											"end": 601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 505,
											"end": 601,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 505,
											"end": 601,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 387,
											"end": 608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 603,
											"end": 765,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 603,
											"end": 765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 703,
											"end": 709,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 728,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "150B7A02"
										},
										{
											"begin": 728,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 728,
											"end": 758,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 721,
											"end": 758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 721,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 603,
											"end": 765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 724,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 724,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 903,
											"end": 909,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 928,
											"end": 964,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 921,
											"end": 964,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 921,
											"end": 964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 724,
											"end": 971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 499,
											"end": 718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 655,
											"end": 661,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 680,
											"end": 711,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 673,
											"end": 711,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 673,
											"end": 711,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 21,
											"value": "43"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 21,
											"value": "45"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 21,
											"value": "46"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 21,
											"value": "47"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "79"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "46"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 21,
											"value": "79"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 21,
											"value": "48"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "82"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "47"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 21,
											"value": "82"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 21,
											"value": "12"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "84"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "85"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 21,
											"value": "85"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 21,
											"value": "84"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "86"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "48"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 21,
											"value": "86"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 21,
											"value": "49"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 21,
											"value": "50"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "89"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "49"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 21,
											"value": "89"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 21,
											"value": "15"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "91"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "50"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 21,
											"value": "91"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "tag",
											"source": 21,
											"value": "51"
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1637,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1584,
											"end": 1638,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1518,
											"end": 1644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "tag",
											"source": 21,
											"value": "52"
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "94"
										},
										{
											"begin": 1734,
											"end": 1739,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "51"
										},
										{
											"begin": 1716,
											"end": 1740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "tag",
											"source": 21,
											"value": "94"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1650,
											"end": 1746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "tag",
											"source": 21,
											"value": "53"
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "96"
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "52"
										},
										{
											"begin": 1825,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "tag",
											"source": 21,
											"value": "96"
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1818,
											"end": 1823,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1815,
											"end": 1850,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "97"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1862,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1854,
											"end": 1866,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "tag",
											"source": 21,
											"value": "97"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1752,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "tag",
											"source": 21,
											"value": "54"
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1926,
											"end": 1931,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1970,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "99"
										},
										{
											"begin": 2007,
											"end": 2012,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "53"
										},
										{
											"begin": 1980,
											"end": 2013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "tag",
											"source": 21,
											"value": "99"
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1880,
											"end": 2019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "tag",
											"source": 21,
											"value": "55"
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2062,
											"end": 2069,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2096,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2080,
											"end": 2096,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2080,
											"end": 2096,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2025,
											"end": 2102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2108,
											"end": 2230,
											"name": "tag",
											"source": 21,
											"value": "56"
										},
										{
											"begin": 2108,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "102"
										},
										{
											"begin": 2199,
											"end": 2204,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "55"
										},
										{
											"begin": 2181,
											"end": 2205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "tag",
											"source": 21,
											"value": "102"
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2174,
											"end": 2179,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2171,
											"end": 2206,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "103"
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 2220,
											"end": 2221,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2217,
											"end": 2218,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2210,
											"end": 2222,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "tag",
											"source": 21,
											"value": "103"
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2108,
											"end": 2230,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2108,
											"end": 2230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "tag",
											"source": 21,
											"value": "57"
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2282,
											"end": 2287,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2307,
											"end": 2327,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 2298,
											"end": 2327,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2298,
											"end": 2327,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "105"
										},
										{
											"begin": 2363,
											"end": 2368,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "56"
										},
										{
											"begin": 2336,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "tag",
											"source": 21,
											"value": "105"
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2236,
											"end": 2375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2381,
											"end": 2498,
											"name": "tag",
											"source": 21,
											"value": "58"
										},
										{
											"begin": 2381,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2490,
											"end": 2491,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2487,
											"end": 2488,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 2504,
											"end": 2621,
											"name": "tag",
											"source": 21,
											"value": "59"
										},
										{
											"begin": 2504,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2613,
											"end": 2614,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2610,
											"end": 2611,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 2627,
											"end": 2729,
											"name": "tag",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 2627,
											"end": 2729,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2668,
											"end": 2674,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2719,
											"end": 2721,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 2715,
											"end": 2722,
											"name": "NOT",
											"source": 21
										},
										{
											"begin": 2710,
											"end": 2712,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 2703,
											"end": 2708,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 2699,
											"end": 2713,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2695,
											"end": 2723,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 2685,
											"end": 2723,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2685,
											"end": 2723,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2627,
											"end": 2729,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2627,
											"end": 2729,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2627,
											"end": 2729,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2627,
											"end": 2729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2735,
											"end": 2915,
											"name": "tag",
											"source": 21,
											"value": "61"
										},
										{
											"begin": 2735,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2783,
											"end": 2860,
											"name": "PUSH",
											"source": 21,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2780,
											"end": 2781,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2861,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2880,
											"end": 2884,
											"name": "PUSH",
											"source": 21,
											"value": "41"
										},
										{
											"begin": 2877,
											"end": 2878,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 2870,
											"end": 2885,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2904,
											"end": 2908,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 2901,
											"end": 2902,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2909,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 2921,
											"end": 3202,
											"name": "tag",
											"source": 21,
											"value": "62"
										},
										{
											"begin": 2921,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3004,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "111"
										},
										{
											"begin": 3026,
											"end": 3030,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3004,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 3004,
											"end": 3031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3004,
											"end": 3031,
											"name": "tag",
											"source": 21,
											"value": "111"
										},
										{
											"begin": 3004,
											"end": 3031,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2996,
											"end": 3002,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2992,
											"end": 3032,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3134,
											"end": 3140,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3122,
											"end": 3132,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3119,
											"end": 3141,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 3098,
											"end": 3116,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3086,
											"end": 3096,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3083,
											"end": 3117,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 3080,
											"end": 3142,
											"name": "OR",
											"source": 21
										},
										{
											"begin": 3077,
											"end": 3165,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 3077,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "112"
										},
										{
											"begin": 3077,
											"end": 3165,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3145,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "113"
										},
										{
											"begin": 3145,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "61"
										},
										{
											"begin": 3145,
											"end": 3163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3145,
											"end": 3163,
											"name": "tag",
											"source": 21,
											"value": "113"
										},
										{
											"begin": 3145,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3077,
											"end": 3165,
											"name": "tag",
											"source": 21,
											"value": "112"
										},
										{
											"begin": 3077,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3185,
											"end": 3195,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3181,
											"end": 3183,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3174,
											"end": 3196,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2964,
											"end": 3202,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2921,
											"end": 3202,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2921,
											"end": 3202,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2921,
											"end": 3202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3208,
											"end": 3337,
											"name": "tag",
											"source": 21,
											"value": "63"
										},
										{
											"begin": 3208,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3242,
											"end": 3248,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3269,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "115"
										},
										{
											"begin": 3269,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "43"
										},
										{
											"begin": 3269,
											"end": 3289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3269,
											"end": 3289,
											"name": "tag",
											"source": 21,
											"value": "115"
										},
										{
											"begin": 3269,
											"end": 3289,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3259,
											"end": 3289,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3298,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "116"
										},
										{
											"begin": 3326,
											"end": 3330,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3318,
											"end": 3324,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3298,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "62"
										},
										{
											"begin": 3298,
											"end": 3331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3298,
											"end": 3331,
											"name": "tag",
											"source": 21,
											"value": "116"
										},
										{
											"begin": 3298,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3208,
											"end": 3337,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3208,
											"end": 3337,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3208,
											"end": 3337,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3208,
											"end": 3337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3343,
											"end": 3650,
											"name": "tag",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 3343,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3404,
											"end": 3408,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3494,
											"end": 3512,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3486,
											"end": 3492,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3483,
											"end": 3513,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 3480,
											"end": 3536,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 3480,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "118"
										},
										{
											"begin": 3480,
											"end": 3536,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3516,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "119"
										},
										{
											"begin": 3516,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "61"
										},
										{
											"begin": 3516,
											"end": 3534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3516,
											"end": 3534,
											"name": "tag",
											"source": 21,
											"value": "119"
										},
										{
											"begin": 3516,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3480,
											"end": 3536,
											"name": "tag",
											"source": 21,
											"value": "118"
										},
										{
											"begin": 3480,
											"end": 3536,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3554,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "120"
										},
										{
											"begin": 3576,
											"end": 3582,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3554,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 3554,
											"end": 3583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3554,
											"end": 3583,
											"name": "tag",
											"source": 21,
											"value": "120"
										},
										{
											"begin": 3554,
											"end": 3583,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3546,
											"end": 3583,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3546,
											"end": 3583,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3638,
											"end": 3642,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3632,
											"end": 3636,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3628,
											"end": 3643,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3620,
											"end": 3643,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3620,
											"end": 3643,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3343,
											"end": 3650,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3343,
											"end": 3650,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3343,
											"end": 3650,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3343,
											"end": 3650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3656,
											"end": 3802,
											"name": "tag",
											"source": 21,
											"value": "65"
										},
										{
											"begin": 3656,
											"end": 3802,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3753,
											"end": 3759,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3748,
											"end": 3751,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3743,
											"end": 3746,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3730,
											"end": 3760,
											"name": "CALLDATACOPY",
											"source": 21
										},
										{
											"begin": 3794,
											"end": 3795,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3785,
											"end": 3791,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3780,
											"end": 3783,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3776,
											"end": 3792,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3769,
											"end": 3796,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3656,
											"end": 3802,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3656,
											"end": 3802,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3656,
											"end": 3802,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3656,
											"end": 3802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3808,
											"end": 4231,
											"name": "tag",
											"source": 21,
											"value": "66"
										},
										{
											"begin": 3808,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3885,
											"end": 3890,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3910,
											"end": 3975,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "123"
										},
										{
											"begin": 3926,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "124"
										},
										{
											"begin": 3967,
											"end": 3973,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 3926,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 3926,
											"end": 3974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3926,
											"end": 3974,
											"name": "tag",
											"source": 21,
											"value": "124"
										},
										{
											"begin": 3926,
											"end": 3974,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3910,
											"end": 3975,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "63"
										},
										{
											"begin": 3910,
											"end": 3975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3910,
											"end": 3975,
											"name": "tag",
											"source": 21,
											"value": "123"
										},
										{
											"begin": 3910,
											"end": 3975,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3901,
											"end": 3975,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3901,
											"end": 3975,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3998,
											"end": 4004,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3991,
											"end": 3996,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3984,
											"end": 4005,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4036,
											"end": 4040,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4034,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4025,
											"end": 4041,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4074,
											"end": 4077,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4065,
											"end": 4071,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4060,
											"end": 4063,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4056,
											"end": 4072,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4053,
											"end": 4078,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 4050,
											"end": 4162,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 4050,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "125"
										},
										{
											"begin": 4050,
											"end": 4162,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4081,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "126"
										},
										{
											"begin": 4081,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "59"
										},
										{
											"begin": 4081,
											"end": 4160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4081,
											"end": 4160,
											"name": "tag",
											"source": 21,
											"value": "126"
										},
										{
											"begin": 4081,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4050,
											"end": 4162,
											"name": "tag",
											"source": 21,
											"value": "125"
										},
										{
											"begin": 4050,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4171,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "127"
										},
										{
											"begin": 4218,
											"end": 4224,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4213,
											"end": 4216,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4208,
											"end": 4211,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 4171,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "65"
										},
										{
											"begin": 4171,
											"end": 4225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4171,
											"end": 4225,
											"name": "tag",
											"source": 21,
											"value": "127"
										},
										{
											"begin": 4171,
											"end": 4225,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3891,
											"end": 4231,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3808,
											"end": 4231,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 3808,
											"end": 4231,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 3808,
											"end": 4231,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3808,
											"end": 4231,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3808,
											"end": 4231,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3808,
											"end": 4231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4250,
											"end": 4588,
											"name": "tag",
											"source": 21,
											"value": "67"
										},
										{
											"begin": 4250,
											"end": 4588,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4305,
											"end": 4310,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4354,
											"end": 4357,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4347,
											"end": 4351,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 4339,
											"end": 4345,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 4335,
											"end": 4352,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4331,
											"end": 4358,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 4321,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "129"
										},
										{
											"begin": 4321,
											"end": 4443,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4362,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "130"
										},
										{
											"begin": 4362,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "58"
										},
										{
											"begin": 4362,
											"end": 4441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4362,
											"end": 4441,
											"name": "tag",
											"source": 21,
											"value": "130"
										},
										{
											"begin": 4362,
											"end": 4441,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4321,
											"end": 4443,
											"name": "tag",
											"source": 21,
											"value": "129"
										},
										{
											"begin": 4321,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4479,
											"end": 4485,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4466,
											"end": 4486,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 4504,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "131"
										},
										{
											"begin": 4578,
											"end": 4581,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4570,
											"end": 4576,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4563,
											"end": 4567,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4555,
											"end": 4561,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4504,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "66"
										},
										{
											"begin": 4504,
											"end": 4582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4504,
											"end": 4582,
											"name": "tag",
											"source": 21,
											"value": "131"
										},
										{
											"begin": 4504,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4495,
											"end": 4582,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4495,
											"end": 4582,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4311,
											"end": 4588,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4250,
											"end": 4588,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4250,
											"end": 4588,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4250,
											"end": 4588,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4250,
											"end": 4588,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4250,
											"end": 4588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4594,
											"end": 5537,
											"name": "tag",
											"source": 21,
											"value": "19"
										},
										{
											"begin": 4594,
											"end": 5537,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4689,
											"end": 4695,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4697,
											"end": 4703,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4705,
											"end": 4711,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4713,
											"end": 4719,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4762,
											"end": 4765,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 4750,
											"end": 4759,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 4741,
											"end": 4748,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 4737,
											"end": 4760,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 4733,
											"end": 4766,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 4730,
											"end": 4850,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 4730,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "133"
										},
										{
											"begin": 4730,
											"end": 4850,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4769,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "134"
										},
										{
											"begin": 4769,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 4769,
											"end": 4848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4769,
											"end": 4848,
											"name": "tag",
											"source": 21,
											"value": "134"
										},
										{
											"begin": 4769,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4730,
											"end": 4850,
											"name": "tag",
											"source": 21,
											"value": "133"
										},
										{
											"begin": 4730,
											"end": 4850,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4889,
											"end": 4890,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4914,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "135"
										},
										{
											"begin": 4959,
											"end": 4966,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 4950,
											"end": 4956,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4939,
											"end": 4948,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 4935,
											"end": 4957,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4914,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "54"
										},
										{
											"begin": 4914,
											"end": 4967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4914,
											"end": 4967,
											"name": "tag",
											"source": 21,
											"value": "135"
										},
										{
											"begin": 4914,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4904,
											"end": 4967,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 4904,
											"end": 4967,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4860,
											"end": 4977,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5016,
											"end": 5018,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "136"
										},
										{
											"begin": 5087,
											"end": 5094,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 5078,
											"end": 5084,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5067,
											"end": 5076,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 5063,
											"end": 5085,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "54"
										},
										{
											"begin": 5042,
											"end": 5095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "tag",
											"source": 21,
											"value": "136"
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5032,
											"end": 5095,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 5032,
											"end": 5095,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4987,
											"end": 5105,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5144,
											"end": 5146,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "137"
										},
										{
											"begin": 5215,
											"end": 5222,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 5206,
											"end": 5212,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5195,
											"end": 5204,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 5191,
											"end": 5213,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "57"
										},
										{
											"begin": 5170,
											"end": 5223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "tag",
											"source": 21,
											"value": "137"
										},
										{
											"begin": 5170,
											"end": 5223,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5160,
											"end": 5223,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 5160,
											"end": 5223,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5115,
											"end": 5233,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5300,
											"end": 5302,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 5289,
											"end": 5298,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 5285,
											"end": 5303,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5272,
											"end": 5304,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 5331,
											"end": 5349,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5323,
											"end": 5329,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5320,
											"end": 5350,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 5317,
											"end": 5434,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5317,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "138"
										},
										{
											"begin": 5317,
											"end": 5434,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5353,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "139"
										},
										{
											"begin": 5353,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "45"
										},
										{
											"begin": 5353,
											"end": 5432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5353,
											"end": 5432,
											"name": "tag",
											"source": 21,
											"value": "139"
										},
										{
											"begin": 5353,
											"end": 5432,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5317,
											"end": 5434,
											"name": "tag",
											"source": 21,
											"value": "138"
										},
										{
											"begin": 5317,
											"end": 5434,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5458,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "140"
										},
										{
											"begin": 5512,
											"end": 5519,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 5503,
											"end": 5509,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5492,
											"end": 5501,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 5488,
											"end": 5510,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5458,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "67"
										},
										{
											"begin": 5458,
											"end": 5520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5458,
											"end": 5520,
											"name": "tag",
											"source": 21,
											"value": "140"
										},
										{
											"begin": 5458,
											"end": 5520,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5448,
											"end": 5520,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5448,
											"end": 5520,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5243,
											"end": 5530,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4594,
											"end": 5537,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4594,
											"end": 5537,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 4594,
											"end": 5537,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4594,
											"end": 5537,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 4594,
											"end": 5537,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4594,
											"end": 5537,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4594,
											"end": 5537,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4594,
											"end": 5537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5543,
											"end": 5658,
											"name": "tag",
											"source": 21,
											"value": "68"
										},
										{
											"begin": 5543,
											"end": 5658,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5628,
											"end": 5651,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "142"
										},
										{
											"begin": 5645,
											"end": 5650,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5628,
											"end": 5651,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "46"
										},
										{
											"begin": 5628,
											"end": 5651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5628,
											"end": 5651,
											"name": "tag",
											"source": 21,
											"value": "142"
										},
										{
											"begin": 5628,
											"end": 5651,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5623,
											"end": 5626,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5616,
											"end": 5652,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5543,
											"end": 5658,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5543,
											"end": 5658,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5543,
											"end": 5658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5664,
											"end": 5882,
											"name": "tag",
											"source": 21,
											"value": "22"
										},
										{
											"begin": 5664,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5755,
											"end": 5759,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5793,
											"end": 5795,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 5782,
											"end": 5791,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5778,
											"end": 5796,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5770,
											"end": 5796,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5770,
											"end": 5796,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5806,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "144"
										},
										{
											"begin": 5872,
											"end": 5873,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5861,
											"end": 5870,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 5857,
											"end": 5874,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5848,
											"end": 5854,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 5806,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "68"
										},
										{
											"begin": 5806,
											"end": 5875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5806,
											"end": 5875,
											"name": "tag",
											"source": 21,
											"value": "144"
										},
										{
											"begin": 5806,
											"end": 5875,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5664,
											"end": 5882,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 5664,
											"end": 5882,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5664,
											"end": 5882,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5664,
											"end": 5882,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5664,
											"end": 5882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5888,
											"end": 6199,
											"name": "tag",
											"source": 21,
											"value": "69"
										},
										{
											"begin": 5888,
											"end": 6199,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5965,
											"end": 5969,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6055,
											"end": 6073,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6047,
											"end": 6053,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6044,
											"end": 6074,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 6041,
											"end": 6097,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 6041,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "146"
										},
										{
											"begin": 6041,
											"end": 6097,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "147"
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "61"
										},
										{
											"begin": 6077,
											"end": 6095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "tag",
											"source": 21,
											"value": "147"
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6041,
											"end": 6097,
											"name": "tag",
											"source": 21,
											"value": "146"
										},
										{
											"begin": 6041,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6127,
											"end": 6131,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6119,
											"end": 6125,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6115,
											"end": 6132,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 6107,
											"end": 6132,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6107,
											"end": 6132,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6187,
											"end": 6191,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6181,
											"end": 6185,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6177,
											"end": 6192,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6169,
											"end": 6192,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6169,
											"end": 6192,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5888,
											"end": 6199,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5888,
											"end": 6199,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5888,
											"end": 6199,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5888,
											"end": 6199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6205,
											"end": 6322,
											"name": "tag",
											"source": 21,
											"value": "70"
										},
										{
											"begin": 6205,
											"end": 6322,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6314,
											"end": 6315,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6311,
											"end": 6312,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6304,
											"end": 6316,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 6345,
											"end": 7055,
											"name": "tag",
											"source": 21,
											"value": "71"
										},
										{
											"begin": 6345,
											"end": 7055,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6441,
											"end": 6446,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "150"
										},
										{
											"begin": 6482,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "151"
										},
										{
											"begin": 6539,
											"end": 6545,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 6482,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "69"
										},
										{
											"begin": 6482,
											"end": 6546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6482,
											"end": 6546,
											"name": "tag",
											"source": 21,
											"value": "151"
										},
										{
											"begin": 6482,
											"end": 6546,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6466,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "63"
										},
										{
											"begin": 6466,
											"end": 6547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6466,
											"end": 6547,
											"name": "tag",
											"source": 21,
											"value": "150"
										},
										{
											"begin": 6466,
											"end": 6547,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6457,
											"end": 6547,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6457,
											"end": 6547,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6567,
											"end": 6572,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6596,
											"end": 6602,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6582,
											"end": 6603,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6630,
											"end": 6634,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6623,
											"end": 6628,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6619,
											"end": 6635,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6612,
											"end": 6635,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6612,
											"end": 6635,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6683,
											"end": 6687,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6675,
											"end": 6681,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 6671,
											"end": 6688,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 6663,
											"end": 6669,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 6659,
											"end": 6689,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6712,
											"end": 6715,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 6704,
											"end": 6710,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6701,
											"end": 6716,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 6698,
											"end": 6820,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 6698,
											"end": 6820,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "152"
										},
										{
											"begin": 6698,
											"end": 6820,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 6731,
											"end": 6810,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "153"
										},
										{
											"begin": 6731,
											"end": 6810,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "70"
										},
										{
											"begin": 6731,
											"end": 6810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6731,
											"end": 6810,
											"name": "tag",
											"source": 21,
											"value": "153"
										},
										{
											"begin": 6731,
											"end": 6810,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6698,
											"end": 6820,
											"name": "tag",
											"source": 21,
											"value": "152"
										},
										{
											"begin": 6698,
											"end": 6820,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6846,
											"end": 6852,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 6829,
											"end": 7049,
											"name": "tag",
											"source": 21,
											"value": "154"
										},
										{
											"begin": 6829,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6863,
											"end": 6869,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6858,
											"end": 6861,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6855,
											"end": 6870,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 6829,
											"end": 7049,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 6829,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "156"
										},
										{
											"begin": 6829,
											"end": 7049,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 6938,
											"end": 6941,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6967,
											"end": 7004,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "157"
										},
										{
											"begin": 7000,
											"end": 7003,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 6988,
											"end": 6998,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6967,
											"end": 7004,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "57"
										},
										{
											"begin": 6967,
											"end": 7004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6967,
											"end": 7004,
											"name": "tag",
											"source": 21,
											"value": "157"
										},
										{
											"begin": 6967,
											"end": 7004,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6962,
											"end": 6965,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 6955,
											"end": 7005,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7034,
											"end": 7038,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 7029,
											"end": 7032,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 7025,
											"end": 7039,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7018,
											"end": 7039,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 7018,
											"end": 7039,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6905,
											"end": 7049,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6889,
											"end": 6893,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6884,
											"end": 6887,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6880,
											"end": 6894,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6873,
											"end": 6894,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6873,
											"end": 6894,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6829,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "154"
										},
										{
											"begin": 6829,
											"end": 7049,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6829,
											"end": 7049,
											"name": "tag",
											"source": 21,
											"value": "156"
										},
										{
											"begin": 6829,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6833,
											"end": 6854,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6447,
											"end": 7055,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6447,
											"end": 7055,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6345,
											"end": 7055,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 6345,
											"end": 7055,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6345,
											"end": 7055,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6345,
											"end": 7055,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6345,
											"end": 7055,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6345,
											"end": 7055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7078,
											"end": 7448,
											"name": "tag",
											"source": 21,
											"value": "72"
										},
										{
											"begin": 7078,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7149,
											"end": 7154,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7198,
											"end": 7201,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7191,
											"end": 7195,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 7183,
											"end": 7189,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 7179,
											"end": 7196,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7175,
											"end": 7202,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 7165,
											"end": 7287,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "159"
										},
										{
											"begin": 7165,
											"end": 7287,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 7206,
											"end": 7285,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "160"
										},
										{
											"begin": 7206,
											"end": 7285,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "58"
										},
										{
											"begin": 7206,
											"end": 7285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7206,
											"end": 7285,
											"name": "tag",
											"source": 21,
											"value": "160"
										},
										{
											"begin": 7206,
											"end": 7285,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7165,
											"end": 7287,
											"name": "tag",
											"source": 21,
											"value": "159"
										},
										{
											"begin": 7165,
											"end": 7287,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7323,
											"end": 7329,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7310,
											"end": 7330,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 7348,
											"end": 7442,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "161"
										},
										{
											"begin": 7438,
											"end": 7441,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 7430,
											"end": 7436,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7423,
											"end": 7427,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 7415,
											"end": 7421,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 7411,
											"end": 7428,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7348,
											"end": 7442,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "71"
										},
										{
											"begin": 7348,
											"end": 7442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7348,
											"end": 7442,
											"name": "tag",
											"source": 21,
											"value": "161"
										},
										{
											"begin": 7348,
											"end": 7442,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7339,
											"end": 7442,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7339,
											"end": 7442,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7155,
											"end": 7448,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7078,
											"end": 7448,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 7078,
											"end": 7448,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7078,
											"end": 7448,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7078,
											"end": 7448,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7078,
											"end": 7448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7454,
											"end": 8963,
											"name": "tag",
											"source": 21,
											"value": "26"
										},
										{
											"begin": 7454,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7608,
											"end": 7614,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7616,
											"end": 7622,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 7624,
											"end": 7630,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7632,
											"end": 7638,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 7640,
											"end": 7646,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7689,
											"end": 7692,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 7677,
											"end": 7686,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 7668,
											"end": 7675,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 7664,
											"end": 7687,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 7660,
											"end": 7693,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 7657,
											"end": 7777,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 7657,
											"end": 7777,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "163"
										},
										{
											"begin": 7657,
											"end": 7777,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 7696,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "164"
										},
										{
											"begin": 7696,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 7696,
											"end": 7775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7696,
											"end": 7775,
											"name": "tag",
											"source": 21,
											"value": "164"
										},
										{
											"begin": 7696,
											"end": 7775,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7657,
											"end": 7777,
											"name": "tag",
											"source": 21,
											"value": "163"
										},
										{
											"begin": 7657,
											"end": 7777,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7816,
											"end": 7817,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7841,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "165"
										},
										{
											"begin": 7886,
											"end": 7893,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 7877,
											"end": 7883,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7866,
											"end": 7875,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 7862,
											"end": 7884,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7841,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "54"
										},
										{
											"begin": 7841,
											"end": 7894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7841,
											"end": 7894,
											"name": "tag",
											"source": 21,
											"value": "165"
										},
										{
											"begin": 7841,
											"end": 7894,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7831,
											"end": 7894,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 7831,
											"end": 7894,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7787,
											"end": 7904,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7943,
											"end": 7945,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 7969,
											"end": 8022,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "166"
										},
										{
											"begin": 8014,
											"end": 8021,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 8005,
											"end": 8011,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7994,
											"end": 8003,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 7990,
											"end": 8012,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7969,
											"end": 8022,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "54"
										},
										{
											"begin": 7969,
											"end": 8022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7969,
											"end": 8022,
											"name": "tag",
											"source": 21,
											"value": "166"
										},
										{
											"begin": 7969,
											"end": 8022,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7959,
											"end": 8022,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 7959,
											"end": 8022,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7914,
											"end": 8032,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8099,
											"end": 8101,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 8088,
											"end": 8097,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 8084,
											"end": 8102,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8071,
											"end": 8103,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 8130,
											"end": 8148,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8122,
											"end": 8128,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8119,
											"end": 8149,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 8116,
											"end": 8233,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 8116,
											"end": 8233,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "167"
										},
										{
											"begin": 8116,
											"end": 8233,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 8152,
											"end": 8231,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "168"
										},
										{
											"begin": 8152,
											"end": 8231,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "45"
										},
										{
											"begin": 8152,
											"end": 8231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8152,
											"end": 8231,
											"name": "tag",
											"source": 21,
											"value": "168"
										},
										{
											"begin": 8152,
											"end": 8231,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8116,
											"end": 8233,
											"name": "tag",
											"source": 21,
											"value": "167"
										},
										{
											"begin": 8116,
											"end": 8233,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8257,
											"end": 8335,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "169"
										},
										{
											"begin": 8327,
											"end": 8334,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 8318,
											"end": 8324,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8307,
											"end": 8316,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 8303,
											"end": 8325,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8257,
											"end": 8335,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "72"
										},
										{
											"begin": 8257,
											"end": 8335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8257,
											"end": 8335,
											"name": "tag",
											"source": 21,
											"value": "169"
										},
										{
											"begin": 8257,
											"end": 8335,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8247,
											"end": 8335,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 8247,
											"end": 8335,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8042,
											"end": 8345,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8412,
											"end": 8414,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 8401,
											"end": 8410,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 8397,
											"end": 8415,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8384,
											"end": 8416,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 8443,
											"end": 8461,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8435,
											"end": 8441,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8432,
											"end": 8462,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 8429,
											"end": 8546,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 8429,
											"end": 8546,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "170"
										},
										{
											"begin": 8429,
											"end": 8546,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "171"
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "45"
										},
										{
											"begin": 8465,
											"end": 8544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "tag",
											"source": 21,
											"value": "171"
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8429,
											"end": 8546,
											"name": "tag",
											"source": 21,
											"value": "170"
										},
										{
											"begin": 8429,
											"end": 8546,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8570,
											"end": 8648,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "172"
										},
										{
											"begin": 8640,
											"end": 8647,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 8631,
											"end": 8637,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8620,
											"end": 8629,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 8616,
											"end": 8638,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8570,
											"end": 8648,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "72"
										},
										{
											"begin": 8570,
											"end": 8648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8570,
											"end": 8648,
											"name": "tag",
											"source": 21,
											"value": "172"
										},
										{
											"begin": 8570,
											"end": 8648,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8560,
											"end": 8648,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 8560,
											"end": 8648,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8355,
											"end": 8658,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8725,
											"end": 8728,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 8714,
											"end": 8723,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 8710,
											"end": 8729,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8697,
											"end": 8730,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 8757,
											"end": 8775,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8749,
											"end": 8755,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8746,
											"end": 8776,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 8743,
											"end": 8860,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 8743,
											"end": 8860,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "173"
										},
										{
											"begin": 8743,
											"end": 8860,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 8779,
											"end": 8858,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "174"
										},
										{
											"begin": 8779,
											"end": 8858,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "45"
										},
										{
											"begin": 8779,
											"end": 8858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8779,
											"end": 8858,
											"name": "tag",
											"source": 21,
											"value": "174"
										},
										{
											"begin": 8779,
											"end": 8858,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8743,
											"end": 8860,
											"name": "tag",
											"source": 21,
											"value": "173"
										},
										{
											"begin": 8743,
											"end": 8860,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8884,
											"end": 8946,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "175"
										},
										{
											"begin": 8938,
											"end": 8945,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 8929,
											"end": 8935,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8918,
											"end": 8927,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 8914,
											"end": 8936,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8884,
											"end": 8946,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "67"
										},
										{
											"begin": 8884,
											"end": 8946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8884,
											"end": 8946,
											"name": "tag",
											"source": 21,
											"value": "175"
										},
										{
											"begin": 8884,
											"end": 8946,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8874,
											"end": 8946,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 8874,
											"end": 8946,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8668,
											"end": 8956,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7454,
											"end": 8963,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 7454,
											"end": 8963,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 7454,
											"end": 8963,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7454,
											"end": 8963,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 7454,
											"end": 8963,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 7454,
											"end": 8963,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7454,
											"end": 8963,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 7454,
											"end": 8963,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7454,
											"end": 8963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8969,
											"end": 10058,
											"name": "tag",
											"source": 21,
											"value": "32"
										},
										{
											"begin": 8969,
											"end": 10058,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9073,
											"end": 9079,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9081,
											"end": 9087,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 9089,
											"end": 9095,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9097,
											"end": 9103,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 9105,
											"end": 9111,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9154,
											"end": 9157,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 9142,
											"end": 9151,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 9133,
											"end": 9140,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 9129,
											"end": 9152,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 9125,
											"end": 9158,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 9122,
											"end": 9242,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 9122,
											"end": 9242,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "177"
										},
										{
											"begin": 9122,
											"end": 9242,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 9161,
											"end": 9240,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "178"
										},
										{
											"begin": 9161,
											"end": 9240,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 9161,
											"end": 9240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9161,
											"end": 9240,
											"name": "tag",
											"source": 21,
											"value": "178"
										},
										{
											"begin": 9161,
											"end": 9240,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9122,
											"end": 9242,
											"name": "tag",
											"source": 21,
											"value": "177"
										},
										{
											"begin": 9122,
											"end": 9242,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9281,
											"end": 9282,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9306,
											"end": 9359,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "179"
										},
										{
											"begin": 9351,
											"end": 9358,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 9342,
											"end": 9348,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9331,
											"end": 9340,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 9327,
											"end": 9349,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9306,
											"end": 9359,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "54"
										},
										{
											"begin": 9306,
											"end": 9359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9306,
											"end": 9359,
											"name": "tag",
											"source": 21,
											"value": "179"
										},
										{
											"begin": 9306,
											"end": 9359,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9296,
											"end": 9359,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 9296,
											"end": 9359,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9252,
											"end": 9369,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9408,
											"end": 9410,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 9434,
											"end": 9487,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "180"
										},
										{
											"begin": 9479,
											"end": 9486,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 9470,
											"end": 9476,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9459,
											"end": 9468,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 9455,
											"end": 9477,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9434,
											"end": 9487,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "54"
										},
										{
											"begin": 9434,
											"end": 9487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9434,
											"end": 9487,
											"name": "tag",
											"source": 21,
											"value": "180"
										},
										{
											"begin": 9434,
											"end": 9487,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9424,
											"end": 9487,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 9424,
											"end": 9487,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9379,
											"end": 9497,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9536,
											"end": 9538,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 9562,
											"end": 9615,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "181"
										},
										{
											"begin": 9607,
											"end": 9614,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 9598,
											"end": 9604,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9587,
											"end": 9596,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 9583,
											"end": 9605,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9562,
											"end": 9615,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "57"
										},
										{
											"begin": 9562,
											"end": 9615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9562,
											"end": 9615,
											"name": "tag",
											"source": 21,
											"value": "181"
										},
										{
											"begin": 9562,
											"end": 9615,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9552,
											"end": 9615,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 9552,
											"end": 9615,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9507,
											"end": 9625,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9664,
											"end": 9666,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 9690,
											"end": 9743,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "182"
										},
										{
											"begin": 9735,
											"end": 9742,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 9726,
											"end": 9732,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9715,
											"end": 9724,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 9711,
											"end": 9733,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9690,
											"end": 9743,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "57"
										},
										{
											"begin": 9690,
											"end": 9743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9690,
											"end": 9743,
											"name": "tag",
											"source": 21,
											"value": "182"
										},
										{
											"begin": 9690,
											"end": 9743,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9680,
											"end": 9743,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 9680,
											"end": 9743,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9635,
											"end": 9753,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9820,
											"end": 9823,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 9809,
											"end": 9818,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 9805,
											"end": 9824,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9792,
											"end": 9825,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 9852,
											"end": 9870,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9844,
											"end": 9850,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 9841,
											"end": 9871,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 9838,
											"end": 9955,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 9838,
											"end": 9955,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "183"
										},
										{
											"begin": 9838,
											"end": 9955,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 9874,
											"end": 9953,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "184"
										},
										{
											"begin": 9874,
											"end": 9953,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "45"
										},
										{
											"begin": 9874,
											"end": 9953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9874,
											"end": 9953,
											"name": "tag",
											"source": 21,
											"value": "184"
										},
										{
											"begin": 9874,
											"end": 9953,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9838,
											"end": 9955,
											"name": "tag",
											"source": 21,
											"value": "183"
										},
										{
											"begin": 9838,
											"end": 9955,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9979,
											"end": 10041,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "185"
										},
										{
											"begin": 10033,
											"end": 10040,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 10024,
											"end": 10030,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10013,
											"end": 10022,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 10009,
											"end": 10031,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9979,
											"end": 10041,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "67"
										},
										{
											"begin": 9979,
											"end": 10041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9979,
											"end": 10041,
											"name": "tag",
											"source": 21,
											"value": "185"
										},
										{
											"begin": 9979,
											"end": 10041,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9969,
											"end": 10041,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 9969,
											"end": 10041,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9763,
											"end": 10051,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8969,
											"end": 10058,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 8969,
											"end": 10058,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 8969,
											"end": 10058,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8969,
											"end": 10058,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 8969,
											"end": 10058,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 8969,
											"end": 10058,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8969,
											"end": 10058,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 8969,
											"end": 10058,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8969,
											"end": 10058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"TokenBound/ERC6551Account.sol",
								"TokenBound/interfaces/IERC6551Account.sol",
								"TokenBound/lib/ERC6551AccountLib.sol",
								"TokenBound/lib/ERC6551BytecodeLib.sol",
								"TokenBound/lib/MinimalReceiver.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TokenBound/lib/MinimalReceiver.sol\":\"MinimalReceiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519\",\"dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x67ef46fef257faae47adb630aad49694dda0334e5f7a7c5fb386243b974886b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c63284cf05ff845109190961e72ca27bd6a7b997f053d2ce21db83e9e285085c\",\"dweb:/ipfs/QmQBQVYJRzscToP6YaTRDvwYeLmr4V7kD1PjoG9mRpUYzU\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"TokenBound/lib/MinimalReceiver.sol\":{\"keccak256\":\"0x5e16dbc5f3ec4deb17ed17c5faf258ed2134e90337ed6fbd9286c4b45fe0009c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8a327f879c901eccc2bccd67fd744239bae48cb15c786a070a1a5c7f52fc9551\",\"dweb:/ipfs/QmY2jkYZN2vuLUU62X38tPnAaKYkAMkojLHWogEgmHwYaj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC1271.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1271.sol",
					"exportedSymbols": {
						"IERC1271": [
							13
						]
					},
					"id": 14,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1271",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "117:189:0",
								"text": " @dev Interface of the ERC1271 standard signature validation method for\n contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 13,
							"linearizedBaseContracts": [
								13
							],
							"name": "IERC1271",
							"nameLocation": "317:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "332:220:0",
										"text": " @dev Should return whether the signature provided is valid for the provided data\n @param hash      Hash of the data to be signed\n @param signature Signature byte array associated with _data"
									},
									"functionSelector": "1626ba7e",
									"id": 12,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isValidSignature",
									"nameLocation": "566:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "591:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "583:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "610:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "597:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 6,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "597:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "582:38:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "magicValue",
												"nameLocation": "651:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "644:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 9,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "644:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "643:19:0"
									},
									"scope": 13,
									"src": "557:106:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 14,
							"src": "307:358:0",
							"usedErrors": []
						}
					],
					"src": "92:574:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							54
						],
						"IERC165": [
							1189
						]
					},
					"id": 55,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 15,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 16,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 55,
							"sourceUnit": 1190,
							"src": "143:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 18,
										"name": "IERC165",
										"nameLocations": [
											"262:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1189,
										"src": "262:7:1"
									},
									"id": 19,
									"nodeType": "InheritanceSpecifier",
									"src": "262:7:1"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 17,
								"nodeType": "StructuredDocumentation",
								"src": "192:39:1",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 54,
							"linearizedBaseContracts": [
								54,
								1189
							],
							"name": "IERC1155Receiver",
							"nameLocation": "242:16:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "276:826:1",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 35,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1116:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1151:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1143:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1177:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1169:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1199:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1191:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1219:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1211:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1249:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1234:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 29,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1234:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:126:1"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1278:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 32,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1278:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1277:8:1"
									},
									"scope": 54,
									"src": "1107:179:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1292:994:1",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 53,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2300:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2340:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2332:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2366:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2358:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 39,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2399:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2380:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 41,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2380:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 42,
													"nodeType": "ArrayTypeName",
													"src": "2380:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2431:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2412:25:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 44,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2412:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 45,
													"nodeType": "ArrayTypeName",
													"src": "2412:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2462:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2447:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 47,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2447:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:150:1"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2491:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 50,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2491:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2490:8:1"
									},
									"scope": 54,
									"src": "2291:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 55,
							"src": "232:2269:1",
							"usedErrors": []
						}
					],
					"src": "118:2384:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
					"exportedSymbols": {
						"ERC1155Holder": [
							105
						],
						"ERC1155Receiver": [
							139
						],
						"ERC165": [
							1177
						],
						"IERC1155Receiver": [
							54
						],
						"IERC165": [
							1189
						]
					},
					"id": 106,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 56,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "121:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
							"file": "./ERC1155Receiver.sol",
							"id": 57,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 106,
							"sourceUnit": 140,
							"src": "146:31:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 59,
										"name": "ERC1155Receiver",
										"nameLocations": [
											"477:15:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 139,
										"src": "477:15:2"
									},
									"id": 60,
									"nodeType": "InheritanceSpecifier",
									"src": "477:15:2"
								}
							],
							"canonicalName": "ERC1155Holder",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 58,
								"nodeType": "StructuredDocumentation",
								"src": "179:271:2",
								"text": " Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens.\n IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be\n stuck.\n @dev _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 105,
							"linearizedBaseContracts": [
								105,
								139,
								54,
								1177,
								1189
							],
							"name": "ERC1155Holder",
							"nameLocation": "460:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										35
									],
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "663:55:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 76,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "680:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155Holder_$105",
																"typeString": "contract ERC1155Holder"
															}
														},
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "685:17:2",
														"memberName": "onERC1155Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 81,
														"src": "680:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "703:8:2",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "680:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 75,
												"id": 79,
												"nodeType": "Return",
												"src": "673:38:2"
											}
										]
									},
									"functionSelector": "f23a6e61",
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "508:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 72,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "637:8:2"
									},
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "535:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "535:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "552:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "552:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "569:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "569:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "586:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "603:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 69,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "603:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "525:96:2"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "655:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 73,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "655:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:8:2"
									},
									"scope": 105,
									"src": "499:219:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										53
									],
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "911:60:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 99,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "928:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155Holder_$105",
																"typeString": "contract ERC1155Holder"
															}
														},
														"id": 100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "933:22:2",
														"memberName": "onERC1155BatchReceived",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 104,
														"src": "928:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "956:8:2",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "928:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 98,
												"id": 102,
												"nodeType": "Return",
												"src": "921:43:2"
											}
										]
									},
									"functionSelector": "bc197c81",
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "733:22:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 95,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "885:8:2"
									},
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "765:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "782:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "782:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "799:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 86,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "799:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 87,
													"nodeType": "ArrayTypeName",
													"src": "799:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "825:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 89,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "825:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 90,
													"nodeType": "ArrayTypeName",
													"src": "825:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "851:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 92,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "851:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "755:114:2"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "903:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 96,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "903:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:8:2"
									},
									"scope": 105,
									"src": "724:247:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 106,
							"src": "451:522:2",
							"usedErrors": []
						}
					],
					"src": "121:853:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
					"exportedSymbols": {
						"ERC1155Receiver": [
							139
						],
						"ERC165": [
							1177
						],
						"IERC1155Receiver": [
							54
						],
						"IERC165": [
							1189
						]
					},
					"id": 140,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 107,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "../IERC1155Receiver.sol",
							"id": 108,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 140,
							"sourceUnit": 55,
							"src": "133:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../../utils/introspection/ERC165.sol",
							"id": 109,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 140,
							"sourceUnit": 1178,
							"src": "167:49:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 111,
										"name": "ERC165",
										"nameLocations": [
											"295:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1177,
										"src": "295:6:3"
									},
									"id": 112,
									"nodeType": "InheritanceSpecifier",
									"src": "295:6:3"
								},
								{
									"baseName": {
										"id": 113,
										"name": "IERC1155Receiver",
										"nameLocations": [
											"303:16:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 54,
										"src": "303:16:3"
									},
									"id": 114,
									"nodeType": "InheritanceSpecifier",
									"src": "303:16:3"
								}
							],
							"canonicalName": "ERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 110,
								"nodeType": "StructuredDocumentation",
								"src": "218:39:3",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 139,
							"linearizedBaseContracts": [
								139,
								54,
								1177,
								1189
							],
							"name": "ERC1155Receiver",
							"nameLocation": "276:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1176,
										1188
									],
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "495:113:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 130,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 125,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "512:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 127,
																		"name": "IERC1155Receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 54,
																		"src": "532:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$54_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$54_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	],
																	"id": 126,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "527:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "527:22:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155Receiver_$54",
																	"typeString": "type(contract IERC1155Receiver)"
																}
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "550:11:3",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "527:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "512:49:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 133,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "589:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 131,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "565:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155Receiver_$139_$",
																	"typeString": "type(contract super ERC1155Receiver)"
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "571:17:3",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1176,
															"src": "565:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "565:36:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "512:89:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 124,
												"id": 136,
												"nodeType": "Return",
												"src": "505:96:3"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "326:56:3",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "396:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 121,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 119,
												"name": "ERC165",
												"nameLocations": [
													"463:6:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1177,
												"src": "463:6:3"
											},
											{
												"id": 120,
												"name": "IERC165",
												"nameLocations": [
													"471:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1189,
												"src": "471:7:3"
											}
										],
										"src": "454:25:3"
									},
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "421:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "414:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 116,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "414:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:20:3"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "489:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 122,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "489:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:6:3"
									},
									"scope": 139,
									"src": "387:221:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 140,
							"src": "258:352:3",
							"usedErrors": []
						}
					],
					"src": "108:503:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							217
						]
					},
					"id": 218,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 141,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 142,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 217,
							"linearizedBaseContracts": [
								217
							],
							"name": "IERC20",
							"nameLocation": "212:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 151,
									"name": "Transfer",
									"nameLocation": "394:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "403:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "425:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "445:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:4"
									},
									"src": "388:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 160,
									"name": "Approval",
									"nameLocation": "625:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "634:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "657:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "682:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:4"
									},
									"src": "619:78:4"
								},
								{
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:4",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:4"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "820:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:4"
									},
									"scope": 217,
									"src": "774:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:4",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 217,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:4",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "1211:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "1223:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:4"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "1257:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 181,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:4"
									},
									"scope": 217,
									"src": "1193:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 194,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "1557:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "1572:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:4"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "1612:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:4"
									},
									"scope": 217,
									"src": "1538:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 204,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2291:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2308:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:4"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2342:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 201,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:4"
									},
									"scope": 217,
									"src": "2274:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:4",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "2668:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "2682:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "2694:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:4"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "2728:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:4"
									},
									"scope": 217,
									"src": "2646:88:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 218,
							"src": "202:2534:4",
							"usedErrors": []
						}
					],
					"src": "106:2631:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1189
						],
						"IERC721": [
							333
						]
					},
					"id": 334,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 219,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 220,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 334,
							"sourceUnit": 1190,
							"src": "133:47:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 222,
										"name": "IERC165",
										"nameLocations": [
											"271:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1189,
										"src": "271:7:5"
									},
									"id": 223,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:5"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 221,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:5",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 333,
							"linearizedBaseContracts": [
								333,
								1189
							],
							"name": "IERC721",
							"nameLocation": "260:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:5",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 232,
									"name": "Transfer",
									"nameLocation": "384:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "393:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "415:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "435:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:5"
									},
									"src": "378:82:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:5",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 241,
									"name": "Approval",
									"nameLocation": "571:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "580:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "603:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "629:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:5"
									},
									"src": "565:89:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:5",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 250,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "803:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "826:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "852:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 247,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:5"
									},
									"src": "782:85:5"
								},
								{
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:5",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 258,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "973:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:5"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "1011:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:5"
									},
									"scope": 333,
									"src": "954:74:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:5",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 266,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "1187:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:5"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "1227:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:5"
									},
									"scope": 333,
									"src": "1170:72:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 278,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1843:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1835:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1835:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1857:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1849:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1849:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1869:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1861:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1893:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1878:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 274,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1878:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:64:5"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1907:0:5"
									},
									"scope": 333,
									"src": "1809:99:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "1914:687:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 288,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2615:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2640:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "2632:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2632:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2654:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "2646:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2646:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2666:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "2658:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2658:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2631:43:5"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2683:0:5"
									},
									"scope": 333,
									"src": "2606:78:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 289,
										"nodeType": "StructuredDocumentation",
										"src": "2690:732:5",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 298,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3436:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3457:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3449:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3449:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3471:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3463:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3463:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3483:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3475:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3448:43:5"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3500:0:5"
									},
									"scope": 333,
									"src": "3427:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "3507:452:5",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 306,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3973:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3989:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "3981:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3981:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4001:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "3993:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3993:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3980:29:5"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4018:0:5"
									},
									"scope": 333,
									"src": "3964:55:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "4025:309:5",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4348:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4374:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "4366:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4366:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4389:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "4384:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 310,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4384:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:33:5"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4407:0:5"
									},
									"scope": 333,
									"src": "4339:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "4414:139:5",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 322,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4567:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4587:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "4579:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4579:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4578:17:5"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4627:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "4619:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4619:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4618:18:5"
									},
									"scope": 333,
									"src": "4558:79:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "4643:138:5",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 332,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4795:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4820:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "4812:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4835:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "4827:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4811:33:5"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "4868:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 329,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4868:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4867:6:5"
									},
									"scope": 333,
									"src": "4786:88:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 334,
							"src": "250:4626:5",
							"usedErrors": []
						}
					],
					"src": "108:4769:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							351
						]
					},
					"id": 352,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 335,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 336,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:6",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 351,
							"linearizedBaseContracts": [
								351
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:6",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 350,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "859:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "885:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "907:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "932:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 344,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:6"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "976:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 347,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:6"
									},
									"scope": 351,
									"src": "824:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 352,
							"src": "294:692:6",
							"usedErrors": []
						}
					],
					"src": "116:871:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
					"exportedSymbols": {
						"ERC721Holder": [
							378
						],
						"IERC721Receiver": [
							351
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 353,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "119:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "../IERC721Receiver.sol",
							"id": 354,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 379,
							"sourceUnit": 352,
							"src": "144:32:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 356,
										"name": "IERC721Receiver",
										"nameLocations": [
											"439:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 351,
										"src": "439:15:7"
									},
									"id": 357,
									"nodeType": "InheritanceSpecifier",
									"src": "439:15:7"
								}
							],
							"canonicalName": "ERC721Holder",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 355,
								"nodeType": "StructuredDocumentation",
								"src": "178:235:7",
								"text": " @dev Implementation of the {IERC721Receiver} interface.\n Accepts all token transfers.\n Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}."
							},
							"fullyImplemented": true,
							"id": 378,
							"linearizedBaseContracts": [
								378,
								351
							],
							"name": "ERC721Holder",
							"nameLocation": "423:12:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										350
									],
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "711:54:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 372,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "728:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721Holder_$378",
																"typeString": "contract ERC721Holder"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "733:16:7",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 377,
														"src": "728:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "750:8:7",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "728:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 371,
												"id": 375,
												"nodeType": "Return",
												"src": "721:37:7"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "461:137:7",
										"text": " @dev See {IERC721Receiver-onERC721Received}.\n Always returns `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "612:16:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 368,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "685:8:7"
									},
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "629:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "638:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "638:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "647:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "647:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "656:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 365,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "656:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "628:41:7"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "703:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 369,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "703:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:8:7"
									},
									"scope": 378,
									"src": "603:162:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 379,
							"src": "414:353:7",
							"usedErrors": []
						}
					],
					"src": "119:649:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Create2.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Create2.sol",
					"exportedSymbols": {
						"Create2": [
							459
						]
					},
					"id": 460,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Create2",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "126:367:8",
								"text": " @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n `CREATE2` can be used to compute in advance the address where a smart\n contract will be deployed, which allows for interesting new mechanisms known\n as 'counterfactual interactions'.\n See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n information."
							},
							"fullyImplemented": true,
							"id": 459,
							"linearizedBaseContracts": [
								459
							],
							"name": "Create2",
							"nameLocation": "502:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 423,
										"nodeType": "Block",
										"src": "1182:383:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 396,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1208:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Create2_$459",
																				"typeString": "library Create2"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Create2_$459",
																				"typeString": "library Create2"
																			}
																		],
																		"id": 395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1200:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 394,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1200:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1200:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1214:7:8",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "1200:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 399,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 384,
																"src": "1225:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1200:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "437265617465323a20696e73756666696369656e742062616c616e6365",
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1233:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f94f9c62541b73155a9def26a7988ac5579c2c6b698df8f608ced5572b7d72ca",
																"typeString": "literal_string \"Create2: insufficient balance\""
															},
															"value": "Create2: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f94f9c62541b73155a9def26a7988ac5579c2c6b698df8f608ced5572b7d72ca",
																"typeString": "literal_string \"Create2: insufficient balance\""
															}
														],
														"id": 393,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1192:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1192:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 403,
												"nodeType": "ExpressionStatement",
												"src": "1192:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 405,
																	"name": "bytecode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "1283:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1292:6:8",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1283:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1302:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1283:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "437265617465323a2062797465636f6465206c656e677468206973207a65726f",
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1305:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_124767115c09b0dd37c31c42ddb030d84459c933a30879cc32c4c922ae5928f0",
																"typeString": "literal_string \"Create2: bytecode length is zero\""
															},
															"value": "Create2: bytecode length is zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_124767115c09b0dd37c31c42ddb030d84459c933a30879cc32c4c922ae5928f0",
																"typeString": "literal_string \"Create2: bytecode length is zero\""
															}
														],
														"id": 404,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1275:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1275:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "1275:65:8"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1402:91:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1416:67:8",
															"value": {
																"arguments": [
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "1432:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "bytecode",
																				"nodeType": "YulIdentifier",
																				"src": "1444:8:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1454:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1440:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1440:19:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "bytecode",
																				"nodeType": "YulIdentifier",
																				"src": "1467:8:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1461:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1461:15:8"
																	},
																	{
																		"name": "salt",
																		"nodeType": "YulIdentifier",
																		"src": "1478:4:8"
																	}
																],
																"functionName": {
																	"name": "create2",
																	"nodeType": "YulIdentifier",
																	"src": "1424:7:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1424:59:8"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nodeType": "YulIdentifier",
																	"src": "1416:4:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 391,
														"isOffset": false,
														"isSlot": false,
														"src": "1416:4:8",
														"valueSize": 1
													},
													{
														"declaration": 384,
														"isOffset": false,
														"isSlot": false,
														"src": "1432:6:8",
														"valueSize": 1
													},
													{
														"declaration": 388,
														"isOffset": false,
														"isSlot": false,
														"src": "1444:8:8",
														"valueSize": 1
													},
													{
														"declaration": 388,
														"isOffset": false,
														"isSlot": false,
														"src": "1467:8:8",
														"valueSize": 1
													},
													{
														"declaration": 386,
														"isOffset": false,
														"isSlot": false,
														"src": "1478:4:8",
														"valueSize": 1
													}
												],
												"id": 412,
												"nodeType": "InlineAssembly",
												"src": "1393:100:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 414,
																"name": "addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 391,
																"src": "1510:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1526:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1518:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 415,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1518:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1518:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1510:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "437265617465323a204661696c6564206f6e206465706c6f79",
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1530:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87142438d464a3cd804331cca8480b31569380ef25d1f39b80404975699f0676",
																"typeString": "literal_string \"Create2: Failed on deploy\""
															},
															"value": "Create2: Failed on deploy"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87142438d464a3cd804331cca8480b31569380ef25d1f39b80404975699f0676",
																"typeString": "literal_string \"Create2: Failed on deploy\""
															}
														],
														"id": 413,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1502:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1502:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "1502:56:8"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "516:560:8",
										"text": " @dev Deploys a contract using `CREATE2`. The address where the contract\n will be deployed can be known in advance via {computeAddress}.\n The bytecode for a contract can be obtained from Solidity with\n `type(contractName).creationCode`.\n Requirements:\n - `bytecode` must not be empty.\n - `salt` must have not been used for `bytecode` already.\n - the factory must have a balance of at least `amount`.\n - if `amount` is non-zero, `bytecode` must have a `payable` constructor."
									},
									"id": 424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deploy",
									"nameLocation": "1090:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1105:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "1097:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1097:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "1121:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "1113:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 385,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1113:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "bytecode",
												"nameLocation": "1140:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "1127:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 387,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1127:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1096:53:8"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "1176:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "1168:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1167:14:8"
									},
									"scope": 459,
									"src": "1081:484:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "1861:73:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 435,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "1893:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 436,
															"name": "bytecodeHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "1899:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 439,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1921:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Create2_$459",
																		"typeString": "library Create2"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Create2_$459",
																		"typeString": "library Create2"
																	}
																],
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1913:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 437,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1913:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1913:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 434,
														"name": "computeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															444,
															458
														],
														"referencedDeclaration": 458,
														"src": "1878:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (bytes32,bytes32,address) pure returns (address)"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1878:49:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 433,
												"id": 442,
												"nodeType": "Return",
												"src": "1871:56:8"
											}
										]
									},
									"documentation": {
										"id": 425,
										"nodeType": "StructuredDocumentation",
										"src": "1571:193:8",
										"text": " @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n `bytecodeHash` or `salt` will result in a new destination address."
									},
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeAddress",
									"nameLocation": "1778:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "1801:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "1793:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 426,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1793:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "bytecodeHash",
												"nameLocation": "1815:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "1807:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 428,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1807:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1792:36:8"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "1852:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1852:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1851:9:8"
									},
									"scope": 459,
									"src": "1769:165:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "2292:1657:8",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2354:1589:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2368:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2385:4:8",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2379:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2379:11:8"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nodeType": "YulTypedName",
																	"src": "2372:3:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3592:3:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3597:4:8",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3588:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3588:14:8"
																	},
																	{
																		"name": "bytecodeHash",
																		"nodeType": "YulIdentifier",
																		"src": "3604:12:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3581:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3581:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3581:36:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3641:3:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3646:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3637:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3637:14:8"
																	},
																	{
																		"name": "salt",
																		"nodeType": "YulIdentifier",
																		"src": "3653:4:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3630:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3630:28:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3630:28:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "3678:3:8"
																	},
																	{
																		"name": "deployer",
																		"nodeType": "YulIdentifier",
																		"src": "3683:8:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3671:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3671:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3671:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3754:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "3771:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3776:4:8",
																		"type": "",
																		"value": "0x0b"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3767:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3767:14:8"
															},
															"variables": [
																{
																	"name": "start",
																	"nodeType": "YulTypedName",
																	"src": "3758:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "3880:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3887:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "mstore8",
																	"nodeType": "YulIdentifier",
																	"src": "3872:7:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3872:20:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3872:20:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3905:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "3923:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3930:2:8",
																		"type": "",
																		"value": "85"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "3913:9:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3913:20:8"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nodeType": "YulIdentifier",
																	"src": "3905:4:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 454,
														"isOffset": false,
														"isSlot": false,
														"src": "3905:4:8",
														"valueSize": 1
													},
													{
														"declaration": 449,
														"isOffset": false,
														"isSlot": false,
														"src": "3604:12:8",
														"valueSize": 1
													},
													{
														"declaration": 451,
														"isOffset": false,
														"isSlot": false,
														"src": "3683:8:8",
														"valueSize": 1
													},
													{
														"declaration": 447,
														"isOffset": false,
														"isSlot": false,
														"src": "3653:4:8",
														"valueSize": 1
													}
												],
												"id": 456,
												"nodeType": "InlineAssembly",
												"src": "2345:1598:8"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "1940:232:8",
										"text": " @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeAddress",
									"nameLocation": "2186:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2209:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2201:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 446,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2201:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "bytecodeHash",
												"nameLocation": "2223:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2215:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 448,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2215:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "2245:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2237:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2237:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2200:54:8"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2286:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2278:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2278:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2277:14:8"
									},
									"scope": 459,
									"src": "2177:1772:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 460,
							"src": "494:3457:8",
							"usedErrors": []
						}
					],
					"src": "101:3851:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2055
						],
						"SignedMath": [
							2160
						],
						"Strings": [
							688
						]
					},
					"id": 689,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 461,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 462,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 689,
							"sourceUnit": 2056,
							"src": "126:25:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 463,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 689,
							"sourceUnit": 2161,
							"src": "152:31:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 464,
								"nodeType": "StructuredDocumentation",
								"src": "185:34:9",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 688,
							"linearizedBaseContracts": [
								688
							],
							"name": "Strings",
							"nameLocation": "228:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 467,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "267:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 688,
									"src": "242:54:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 465,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 466,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "278:18:9",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 470,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "325:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 688,
									"src": "302:43:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 468,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "302:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 469,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "343:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 517,
										"nodeType": "Block",
										"src": "518:625:9",
										"statements": [
											{
												"id": 516,
												"nodeType": "UncheckedBlock",
												"src": "528:609:9",
												"statements": [
													{
														"assignments": [
															479
														],
														"declarations": [
															{
																"constant": false,
																"id": 479,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "560:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 516,
																"src": "552:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 478,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "552:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 486,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 482,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 473,
																		"src": "580:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 480,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2055,
																		"src": "569:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2055_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "574:5:9",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1892,
																	"src": "569:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "569:17:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "589:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "569:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "552:38:9"
													},
													{
														"assignments": [
															488
														],
														"declarations": [
															{
																"constant": false,
																"id": 488,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "618:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 516,
																"src": "604:20:9",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 487,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "604:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 493,
														"initialValue": {
															"arguments": [
																{
																	"id": 491,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 479,
																	"src": "638:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "627:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 489,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "631:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "627:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "604:41:9"
													},
													{
														"assignments": [
															495
														],
														"declarations": [
															{
																"constant": false,
																"id": 495,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "667:3:9",
																"nodeType": "VariableDeclaration",
																"scope": 516,
																"src": "659:11:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 494,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "659:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 496,
														"nodeType": "VariableDeclarationStatement",
														"src": "659:11:9"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "740:67:9",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "758:35:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "781:2:9",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "785:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "777:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "777:15:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "765:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "765:28:9"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "758:3:9"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 488,
																"isOffset": false,
																"isSlot": false,
																"src": "769:6:9",
																"valueSize": 1
															},
															{
																"declaration": 479,
																"isOffset": false,
																"isSlot": false,
																"src": "785:6:9",
																"valueSize": 1
															},
															{
																"declaration": 495,
																"isOffset": false,
																"isSlot": false,
																"src": "758:3:9",
																"valueSize": 1
															}
														],
														"id": 497,
														"nodeType": "InlineAssembly",
														"src": "731:76:9"
													},
													{
														"body": {
															"id": 512,
															"nodeType": "Block",
															"src": "833:267:9",
															"statements": [
																{
																	"expression": {
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "851:5:9",
																		"subExpression": {
																			"id": 499,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 495,
																			"src": "851:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 501,
																	"nodeType": "ExpressionStatement",
																	"src": "851:5:9"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "934:84:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "964:3:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "978:5:9"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "985:2:9",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "974:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "974:14:9"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "990:8:9"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "969:4:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "969:30:9"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "956:7:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "956:44:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "956:44:9"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 467,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "990:8:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 495,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "964:3:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 473,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "978:5:9",
																			"valueSize": 1
																		}
																	],
																	"id": 502,
																	"nodeType": "InlineAssembly",
																	"src": "925:93:9"
																},
																{
																	"expression": {
																		"id": 505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 503,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 473,
																			"src": "1035:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 504,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1044:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1035:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 506,
																	"nodeType": "ExpressionStatement",
																	"src": "1035:11:9"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 507,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 473,
																			"src": "1068:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 508,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1077:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1068:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 511,
																	"nodeType": "IfStatement",
																	"src": "1064:21:9",
																	"trueBody": {
																		"id": 510,
																		"nodeType": "Break",
																		"src": "1080:5:9"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "827:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 513,
														"nodeType": "WhileStatement",
														"src": "820:280:9"
													},
													{
														"expression": {
															"id": 514,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "1120:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 477,
														"id": 515,
														"nodeType": "Return",
														"src": "1113:13:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "352:90:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "456:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "473:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "465:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:15:9"
									},
									"returnParameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "503:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 475,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:15:9"
									},
									"scope": 688,
									"src": "447:696:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "1313:103:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 530,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 521,
																			"src": "1354:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1362:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1354:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1372:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1354:20:9",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1366:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 539,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 521,
																					"src": "1400:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 537,
																					"name": "SignedMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2160,
																					"src": "1385:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMath_$2160_$",
																						"typeString": "type(library SignedMath)"
																					}
																				},
																				"id": 538,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1396:3:9",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2159,
																				"src": "1385:14:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1385:21:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 536,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			518,
																			546
																		],
																		"referencedDeclaration": 518,
																		"src": "1376:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1376:31:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 528,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1337:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1341:12:9",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1337:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1337:71:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 527,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1330:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 526,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1330:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1330:79:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 525,
												"id": 544,
												"nodeType": "Return",
												"src": "1323:86:9"
											}
										]
									},
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "1149:89:9",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1252:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1268:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "1261:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 520,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:14:9"
									},
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "1298:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 523,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1298:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:15:9"
									},
									"scope": 688,
									"src": "1243:173:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 565,
										"nodeType": "Block",
										"src": "1595:100:9",
										"statements": [
											{
												"id": 564,
												"nodeType": "UncheckedBlock",
												"src": "1605:84:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 555,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 549,
																	"src": "1648:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 558,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 549,
																				"src": "1667:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 556,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2055,
																				"src": "1655:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2055_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1660:6:9",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2015,
																			"src": "1655:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1655:18:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1676:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1655:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 554,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	566,
																	642,
																	662
																],
																"referencedDeclaration": 642,
																"src": "1636:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1636:42:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 553,
														"id": 563,
														"nodeType": "Return",
														"src": "1629:49:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "1422:94:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1530:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1550:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "1542:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1541:15:9"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "1580:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 551,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1580:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:15:9"
									},
									"scope": 688,
									"src": "1521:174:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "1908:347:9",
										"statements": [
											{
												"assignments": [
													577
												],
												"declarations": [
													{
														"constant": false,
														"id": 577,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1931:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 641,
														"src": "1918:19:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 576,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1918:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 586,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1950:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 581,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 571,
																	"src": "1954:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1950:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1963:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1950:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1940:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 578,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1944:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1940:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1918:47:9"
											},
											{
												"expression": {
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 587,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "1975:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 589,
														"indexExpression": {
															"hexValue": "30",
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1982:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1975:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1987:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1975:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "1975:15:9"
											},
											{
												"expression": {
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 593,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "2000:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 595,
														"indexExpression": {
															"hexValue": "31",
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2007:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2000:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 596,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2012:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2000:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "2000:15:9"
											},
											{
												"body": {
													"id": 627,
													"nodeType": "Block",
													"src": "2070:83:9",
													"statements": [
														{
															"expression": {
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 613,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 577,
																		"src": "2084:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 615,
																	"indexExpression": {
																		"id": 614,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 600,
																		"src": "2091:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2084:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 616,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 467,
																		"src": "2096:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 620,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 617,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 569,
																			"src": "2105:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2113:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2105:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2096:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2084:33:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 622,
															"nodeType": "ExpressionStatement",
															"src": "2084:33:9"
														},
														{
															"expression": {
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 623,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 569,
																	"src": "2131:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2141:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2131:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 626,
															"nodeType": "ExpressionStatement",
															"src": "2131:11:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 607,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 600,
														"src": "2058:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2062:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2058:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"initializationExpression": {
													"assignments": [
														600
													],
													"declarations": [
														{
															"constant": false,
															"id": 600,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2038:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 628,
															"src": "2030:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 599,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2030:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 606,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2042:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 602,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 571,
																"src": "2046:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2042:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2055:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2042:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2030:26:9"
												},
												"loopExpression": {
													"expression": {
														"id": 611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2065:3:9",
														"subExpression": {
															"id": 610,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "2067:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 612,
													"nodeType": "ExpressionStatement",
													"src": "2065:3:9"
												},
												"nodeType": "ForStatement",
												"src": "2025:128:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 630,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 569,
																"src": "2170:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2179:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2170:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2182:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 629,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2162:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2162:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "2162:55:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 638,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "2241:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 637,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2234:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 636,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2234:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 575,
												"id": 640,
												"nodeType": "Return",
												"src": "2227:21:9"
											}
										]
									},
									"documentation": {
										"id": 567,
										"nodeType": "StructuredDocumentation",
										"src": "1701:112:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1827:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1847:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1839:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1862:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1854:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:9"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1893:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 573,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1893:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:15:9"
									},
									"scope": 688,
									"src": "1818:437:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "2480:76:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 655,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 645,
																			"src": "2525:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2517:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 653,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2517:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2517:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2509:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 651,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2509:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2509:22:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 658,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "2533:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 650,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															566,
															642,
															662
														],
														"referencedDeclaration": 642,
														"src": "2497:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2497:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 649,
												"id": 660,
												"nodeType": "Return",
												"src": "2490:59:9"
											}
										]
									},
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "2261:141:9",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2416:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2436:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2428:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2427:14:9"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2465:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 647,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2465:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:9"
									},
									"scope": 688,
									"src": "2407:149:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 686,
										"nodeType": "Block",
										"src": "2711:66:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 675,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "2744:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2738:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 673,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2738:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2738:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 672,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2728:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 677,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:19:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 681,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "2767:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2761:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 679,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2761:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2761:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 678,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2751:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 683,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2751:19:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2728:42:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 671,
												"id": 685,
												"nodeType": "Return",
												"src": "2721:49:9"
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "2562:66:9",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2642:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2662:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "2648:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 664,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2648:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2679:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "2665:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 666,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2665:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:34:9"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "2705:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 669,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2705:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2704:6:9"
									},
									"scope": 688,
									"src": "2633:144:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 689,
							"src": "220:2559:9",
							"usedErrors": []
						}
					],
					"src": "101:2679:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
					"exportedSymbols": {
						"ECDSA": [
							1054
						],
						"Math": [
							2055
						],
						"SignedMath": [
							2160
						],
						"Strings": [
							688
						]
					},
					"id": 1055,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 690,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../Strings.sol",
							"id": 691,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1055,
							"sourceUnit": 689,
							"src": "137:24:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 692,
								"nodeType": "StructuredDocumentation",
								"src": "163:205:10",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 1054,
							"linearizedBaseContracts": [
								1054
							],
							"name": "ECDSA",
							"nameLocation": "377:5:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 698,
									"members": [
										{
											"id": 693,
											"name": "NoError",
											"nameLocation": "417:7:10",
											"nodeType": "EnumValue",
											"src": "417:7:10"
										},
										{
											"id": 694,
											"name": "InvalidSignature",
											"nameLocation": "434:16:10",
											"nodeType": "EnumValue",
											"src": "434:16:10"
										},
										{
											"id": 695,
											"name": "InvalidSignatureLength",
											"nameLocation": "460:22:10",
											"nodeType": "EnumValue",
											"src": "460:22:10"
										},
										{
											"id": 696,
											"name": "InvalidSignatureS",
											"nameLocation": "492:17:10",
											"nodeType": "EnumValue",
											"src": "492:17:10"
										},
										{
											"id": 697,
											"name": "InvalidSignatureV",
											"nameLocation": "519:17:10",
											"nodeType": "EnumValue",
											"src": "519:17:10"
										}
									],
									"name": "RecoverError",
									"nameLocation": "394:12:10",
									"nodeType": "EnumDefinition",
									"src": "389:175:10"
								},
								{
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "624:457:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$698",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 704,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "638:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$698",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 705,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 698,
															"src": "647:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$698_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "660:7:10",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 693,
														"src": "647:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$698",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "638:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$698",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 710,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "734:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$698",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 711,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 698,
																"src": "743:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$698_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "756:16:10",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 694,
															"src": "743:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$698",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "734:38:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$698",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 719,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "843:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$698",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 720,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 698,
																	"src": "852:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$698_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "865:22:10",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 695,
																"src": "852:35:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$698",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "843:44:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$698",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 728,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 701,
																	"src": "965:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$698",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 729,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 698,
																		"src": "974:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$698_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "987:17:10",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 696,
																	"src": "974:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$698",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "965:39:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 737,
															"nodeType": "IfStatement",
															"src": "961:114:10",
															"trueBody": {
																"id": 736,
																"nodeType": "Block",
																"src": "1006:69:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "45434453413a20696e76616c6964207369676e6174757265202773272076616c7565",
																					"id": 733,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1027:36:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
																						"typeString": "literal_string \"ECDSA: invalid signature 's' value\""
																					},
																					"value": "ECDSA: invalid signature 's' value"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
																						"typeString": "literal_string \"ECDSA: invalid signature 's' value\""
																					}
																				],
																				"id": 732,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "1020:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 734,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1020:44:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 735,
																		"nodeType": "ExpressionStatement",
																		"src": "1020:44:10"
																	}
																]
															}
														},
														"id": 738,
														"nodeType": "IfStatement",
														"src": "839:236:10",
														"trueBody": {
															"id": 727,
															"nodeType": "Block",
															"src": "889:66:10",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "45434453413a20696e76616c6964207369676e6174757265206c656e677468",
																				"id": 724,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "910:33:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
																					"typeString": "literal_string \"ECDSA: invalid signature length\""
																				},
																				"value": "ECDSA: invalid signature length"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
																					"typeString": "literal_string \"ECDSA: invalid signature length\""
																				}
																			],
																			"id": 723,
																			"name": "revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967277,
																				4294967277
																			],
																			"referencedDeclaration": 4294967277,
																			"src": "903:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (string memory) pure"
																			}
																		},
																		"id": 725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "903:41:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 726,
																	"nodeType": "ExpressionStatement",
																	"src": "903:41:10"
																}
															]
														}
													},
													"id": 739,
													"nodeType": "IfStatement",
													"src": "730:345:10",
													"trueBody": {
														"id": 718,
														"nodeType": "Block",
														"src": "774:59:10",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "45434453413a20696e76616c6964207369676e6174757265",
																			"id": 715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "795:26:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
																				"typeString": "literal_string \"ECDSA: invalid signature\""
																			},
																			"value": "ECDSA: invalid signature"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
																				"typeString": "literal_string \"ECDSA: invalid signature\""
																			}
																		],
																		"id": 714,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "788:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "788:34:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 717,
																"nodeType": "ExpressionStatement",
																"src": "788:34:10"
															}
														]
													}
												},
												"id": 740,
												"nodeType": "IfStatement",
												"src": "634:441:10",
												"trueBody": {
													"id": 709,
													"nodeType": "Block",
													"src": "669:55:10",
													"statements": [
														{
															"functionReturnParameters": 703,
															"id": 708,
															"nodeType": "Return",
															"src": "683:7:10"
														}
													]
												}
											}
										]
									},
									"id": 742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "579:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "604:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "591:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$698",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 700,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 699,
														"name": "RecoverError",
														"nameLocations": [
															"591:12:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 698,
														"src": "591:12:10"
													},
													"referencedDeclaration": 698,
													"src": "591:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$698",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "590:20:10"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "624:0:10"
									},
									"scope": 1054,
									"src": "570:511:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 787,
										"nodeType": "Block",
										"src": "2249:626:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 755,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "2263:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 756,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2273:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2263:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 757,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2283:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2263:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 785,
													"nodeType": "Block",
													"src": "2788:81:10",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 779,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2818:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2810:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 777,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2810:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2810:10:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 781,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 698,
																			"src": "2822:12:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$698_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2835:22:10",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 695,
																		"src": "2822:35:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$698",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 783,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2809:49:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$698_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 754,
															"id": 784,
															"nodeType": "Return",
															"src": "2802:56:10"
														}
													]
												},
												"id": 786,
												"nodeType": "IfStatement",
												"src": "2259:610:10",
												"trueBody": {
													"id": 776,
													"nodeType": "Block",
													"src": "2287:495:10",
													"statements": [
														{
															"assignments": [
																760
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 760,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "2309:1:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 776,
																	"src": "2301:9:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 759,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2301:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 761,
															"nodeType": "VariableDeclarationStatement",
															"src": "2301:9:10"
														},
														{
															"assignments": [
																763
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 763,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "2332:1:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 776,
																	"src": "2324:9:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 762,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2324:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 764,
															"nodeType": "VariableDeclarationStatement",
															"src": "2324:9:10"
														},
														{
															"assignments": [
																766
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 766,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "2353:1:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 776,
																	"src": "2347:7:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 765,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2347:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 767,
															"nodeType": "VariableDeclarationStatement",
															"src": "2347:7:10"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "2555:171:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2573:32:10",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nodeType": "YulIdentifier",
																							"src": "2588:9:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2599:4:10",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2584:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2584:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2578:5:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2578:27:10"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "2573:1:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2622:32:10",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nodeType": "YulIdentifier",
																							"src": "2637:9:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2648:4:10",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2633:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2633:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2627:5:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2627:27:10"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nodeType": "YulIdentifier",
																				"src": "2622:1:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2671:41:10",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2681:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nodeType": "YulIdentifier",
																									"src": "2694:9:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2705:4:10",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2690:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2690:20:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2684:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2684:27:10"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nodeType": "YulIdentifier",
																				"src": "2676:4:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2676:36:10"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nodeType": "YulIdentifier",
																				"src": "2671:1:10"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 760,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2573:1:10",
																	"valueSize": 1
																},
																{
																	"declaration": 763,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2622:1:10",
																	"valueSize": 1
																},
																{
																	"declaration": 747,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2588:9:10",
																	"valueSize": 1
																},
																{
																	"declaration": 747,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2637:9:10",
																	"valueSize": 1
																},
																{
																	"declaration": 747,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2694:9:10",
																	"valueSize": 1
																},
																{
																	"declaration": 766,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2671:1:10",
																	"valueSize": 1
																}
															],
															"id": 768,
															"nodeType": "InlineAssembly",
															"src": "2546:180:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 770,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 745,
																		"src": "2757:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 771,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "2763:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 772,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 760,
																		"src": "2766:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 773,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 763,
																		"src": "2769:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 769,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		788,
																		862,
																		956
																	],
																	"referencedDeclaration": 956,
																	"src": "2746:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$698_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
																	}
																},
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2746:25:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$698_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 754,
															"id": 775,
															"nodeType": "Return",
															"src": "2739:32:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "1087:1053:10",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"
									},
									"id": 788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "2154:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2173:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "2165:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 744,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2165:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2192:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "2179:22:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 746,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2179:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:38:10"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "2226:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2226:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "2235:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$698",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 752,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 751,
														"name": "RecoverError",
														"nameLocations": [
															"2235:12:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 698,
														"src": "2235:12:10"
													},
													"referencedDeclaration": 698,
													"src": "2235:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$698",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2225:23:10"
									},
									"scope": 1054,
									"src": "2145:730:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "3748:140:10",
										"statements": [
											{
												"assignments": [
													799,
													802
												],
												"declarations": [
													{
														"constant": false,
														"id": 799,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "3767:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 814,
														"src": "3759:17:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 798,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3759:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 802,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "3791:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 814,
														"src": "3778:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$698",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 801,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 800,
																"name": "RecoverError",
																"nameLocations": [
																	"3778:12:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 698,
																"src": "3778:12:10"
															},
															"referencedDeclaration": 698,
															"src": "3778:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$698",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 807,
												"initialValue": {
													"arguments": [
														{
															"id": 804,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "3811:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 805,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "3817:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 803,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															788,
															862,
															956
														],
														"referencedDeclaration": 788,
														"src": "3800:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$698_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3800:27:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$698_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3758:69:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 809,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "3849:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$698",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$698",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 808,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "3837:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$698_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3837:18:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "3837:18:10"
											},
											{
												"expression": {
													"id": 812,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 799,
													"src": "3872:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 797,
												"id": 813,
												"nodeType": "Return",
												"src": "3865:16:10"
											}
										]
									},
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "2881:775:10",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "3670:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3686:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "3678:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 790,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3678:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3705:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "3692:22:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 792,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3692:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3677:38:10"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "3739:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:9:10"
									},
									"scope": 1054,
									"src": "3661:227:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "4245:203:10",
										"statements": [
											{
												"assignments": [
													831
												],
												"declarations": [
													{
														"constant": false,
														"id": 831,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "4263:1:10",
														"nodeType": "VariableDeclaration",
														"scope": 861,
														"src": "4255:9:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 830,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4255:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 838,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 832,
														"name": "vs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "4267:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4280:66:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9967"
																},
																"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9967"
																}
															],
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4272:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes32_$",
																"typeString": "type(bytes32)"
															},
															"typeName": {
																"id": 833,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "4272:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 836,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4272:75:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4267:80:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4255:92:10"
											},
											{
												"assignments": [
													840
												],
												"declarations": [
													{
														"constant": false,
														"id": 840,
														"mutability": "mutable",
														"name": "v",
														"nameLocation": "4363:1:10",
														"nodeType": "VariableDeclaration",
														"scope": 861,
														"src": "4357:7:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 839,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "4357:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 853,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 845,
																					"name": "vs",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "4382:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 844,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4374:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 843,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "4374:7:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4374:11:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">>",
																		"rightExpression": {
																			"hexValue": "323535",
																			"id": 847,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4389:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			},
																			"value": "255"
																		},
																		"src": "4374:18:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 849,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4373:20:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "3237",
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4396:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_27_by_1",
																	"typeString": "int_const 27"
																},
																"value": "27"
															},
															"src": "4373:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 842,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4367:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 841,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "4367:5:10",
															"typeDescriptions": {}
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4367:32:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4357:42:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 855,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "4427:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 856,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "4433:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 857,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "4436:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 858,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "4439:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 854,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															788,
															862,
															956
														],
														"referencedDeclaration": 956,
														"src": "4416:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$698_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4416:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$698_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"functionReturnParameters": 829,
												"id": 860,
												"nodeType": "Return",
												"src": "4409:32:10"
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "3894:243:10",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"
									},
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "4151:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4170:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "4162:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 817,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4162:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4184:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "4176:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 819,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4176:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4195:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "4187:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 821,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4187:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4161:37:10"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "4222:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4222:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "4231:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$698",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 827,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 826,
														"name": "RecoverError",
														"nameLocations": [
															"4231:12:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 698,
														"src": "4231:12:10"
													},
													"referencedDeclaration": 698,
													"src": "4231:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$698",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4221:23:10"
									},
									"scope": 1054,
									"src": "4142:306:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 891,
										"nodeType": "Block",
										"src": "4699:136:10",
										"statements": [
											{
												"assignments": [
													875,
													878
												],
												"declarations": [
													{
														"constant": false,
														"id": 875,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "4718:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 891,
														"src": "4710:17:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 874,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4710:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 878,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "4742:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 891,
														"src": "4729:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$698",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 877,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 876,
																"name": "RecoverError",
																"nameLocations": [
																	"4729:12:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 698,
																"src": "4729:12:10"
															},
															"referencedDeclaration": 698,
															"src": "4729:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$698",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 884,
												"initialValue": {
													"arguments": [
														{
															"id": 880,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "4762:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 881,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 867,
															"src": "4768:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 882,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "4771:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 879,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															788,
															862,
															956
														],
														"referencedDeclaration": 862,
														"src": "4751:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$698_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4751:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$698_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4709:65:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 886,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "4796:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$698",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$698",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 885,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "4784:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$698_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4784:18:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 888,
												"nodeType": "ExpressionStatement",
												"src": "4784:18:10"
											},
											{
												"expression": {
													"id": 889,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 875,
													"src": "4819:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 873,
												"id": 890,
												"nodeType": "Return",
												"src": "4812:16:10"
											}
										]
									},
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "4454:154:10",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"
									},
									"id": 892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "4622:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4638:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "4630:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 864,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4630:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4652:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "4644:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 866,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4644:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4663:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "4655:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 868,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4655:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4629:37:10"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "4690:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4690:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4689:9:10"
									},
									"scope": 1054,
									"src": "4613:222:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 955,
										"nodeType": "Block",
										"src": "5120:1345:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 911,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 901,
																"src": "6016:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6008:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 909,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6008:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6008:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 913,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6021:66:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6008:79:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 924,
												"nodeType": "IfStatement",
												"src": "6004:161:10",
												"trueBody": {
													"id": 923,
													"nodeType": "Block",
													"src": "6089:76:10",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 917,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6119:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6111:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 915,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6111:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6111:10:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 919,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 698,
																			"src": "6123:12:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$698_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6136:17:10",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 696,
																		"src": "6123:30:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$698",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 921,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6110:44:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$698_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 908,
															"id": 922,
															"nodeType": "Return",
															"src": "6103:51:10"
														}
													]
												}
											},
											{
												"assignments": [
													926
												],
												"declarations": [
													{
														"constant": false,
														"id": 926,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "6267:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 955,
														"src": "6259:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 925,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6259:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 933,
												"initialValue": {
													"arguments": [
														{
															"id": 928,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "6286:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 929,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "6292:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 930,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "6295:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 931,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "6298:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 927,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "6276:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6276:24:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6259:41:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 934,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "6314:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6332:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6324:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 935,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6324:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 938,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6324:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6314:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 949,
												"nodeType": "IfStatement",
												"src": "6310:101:10",
												"trueBody": {
													"id": 948,
													"nodeType": "Block",
													"src": "6336:75:10",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 942,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6366:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6358:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 940,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6358:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6358:10:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 944,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 698,
																			"src": "6370:12:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$698_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6383:16:10",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 694,
																		"src": "6370:29:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$698",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 946,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6357:43:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$698_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 908,
															"id": 947,
															"nodeType": "Return",
															"src": "6350:50:10"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 950,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "6429:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 951,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 698,
																"src": "6437:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$698_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6450:7:10",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 693,
															"src": "6437:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$698",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"id": 953,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6428:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$698_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"functionReturnParameters": 908,
												"id": 954,
												"nodeType": "Return",
												"src": "6421:37:10"
											}
										]
									},
									"documentation": {
										"id": 893,
										"nodeType": "StructuredDocumentation",
										"src": "4841:163:10",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"
									},
									"id": 956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "5018:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5037:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "5029:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 894,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5029:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5049:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "5043:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 896,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5043:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5060:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "5052:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 898,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5052:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5071:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "5063:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 900,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5063:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5028:45:10"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "5097:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5097:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "5106:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$698",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 906,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 905,
														"name": "RecoverError",
														"nameLocations": [
															"5106:12:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 698,
														"src": "5106:12:10"
													},
													"referencedDeclaration": 698,
													"src": "5106:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$698",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5096:23:10"
									},
									"scope": 1054,
									"src": "5009:1456:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 988,
										"nodeType": "Block",
										"src": "6692:138:10",
										"statements": [
											{
												"assignments": [
													971,
													974
												],
												"declarations": [
													{
														"constant": false,
														"id": 971,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "6711:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 988,
														"src": "6703:17:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 970,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6703:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 974,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "6735:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 988,
														"src": "6722:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$698",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 973,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 972,
																"name": "RecoverError",
																"nameLocations": [
																	"6722:12:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 698,
																"src": "6722:12:10"
															},
															"referencedDeclaration": 698,
															"src": "6722:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$698",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 981,
												"initialValue": {
													"arguments": [
														{
															"id": 976,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "6755:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 977,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "6761:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 978,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "6764:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 979,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "6767:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 975,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															788,
															862,
															956
														],
														"referencedDeclaration": 956,
														"src": "6744:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$698_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6744:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$698_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6702:67:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 983,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "6791:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$698",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$698",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 982,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "6779:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$698_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6779:18:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 985,
												"nodeType": "ExpressionStatement",
												"src": "6779:18:10"
											},
											{
												"expression": {
													"id": 986,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 971,
													"src": "6814:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 969,
												"id": 987,
												"nodeType": "Return",
												"src": "6807:16:10"
											}
										]
									},
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "6471:122:10",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "6607:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "6623:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "6615:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 958,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6615:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "6635:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "6629:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 960,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6629:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6646:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "6638:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 962,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "6657:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "6649:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 964,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6649:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6614:45:10"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "6683:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6683:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6682:9:10"
									},
									"scope": 1054,
									"src": "6598:232:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 998,
										"nodeType": "Block",
										"src": "7206:310:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7362:148:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7383:4:10",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7389:34:10",
																		"type": "",
																		"value": "\u0019Ethereum Signed Message:\n32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7376:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7376:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7376:48:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7444:4:10",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"name": "hash",
																		"nodeType": "YulIdentifier",
																		"src": "7450:4:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7437:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7437:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7437:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7468:32:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7489:4:10",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7495:4:10",
																		"type": "",
																		"value": "0x3c"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "7479:9:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7479:21:10"
															},
															"variableNames": [
																{
																	"name": "message",
																	"nodeType": "YulIdentifier",
																	"src": "7468:7:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 992,
														"isOffset": false,
														"isSlot": false,
														"src": "7450:4:10",
														"valueSize": 1
													},
													{
														"declaration": 995,
														"isOffset": false,
														"isSlot": false,
														"src": "7468:7:10",
														"valueSize": 1
													}
												],
												"id": 997,
												"nodeType": "InlineAssembly",
												"src": "7353:157:10"
											}
										]
									},
									"documentation": {
										"id": 990,
										"nodeType": "StructuredDocumentation",
										"src": "6836:279:10",
										"text": " @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."
									},
									"id": 999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "7129:22:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "7160:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "7152:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 991,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7152:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7151:14:10"
									},
									"returnParameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "7197:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "7189:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 994,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7189:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7188:17:10"
									},
									"scope": 1054,
									"src": "7120:396:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1020,
										"nodeType": "Block",
										"src": "7881:116:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
																	"id": 1010,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7925:32:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n"
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 1013,
																				"name": "s",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1002,
																				"src": "7976:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1014,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7978:6:10",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "7976:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1011,
																			"name": "Strings",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 688,
																			"src": "7959:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Strings_$688_$",
																				"typeString": "type(library Strings)"
																			}
																		},
																		"id": 1012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7967:8:10",
																		"memberName": "toString",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 518,
																		"src": "7959:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7959:26:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 1016,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "7987:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1008,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "7908:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7912:12:10",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "7908:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7908:81:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1007,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "7898:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7898:92:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1006,
												"id": 1019,
												"nodeType": "Return",
												"src": "7891:99:10"
											}
										]
									},
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "7522:274:10",
										"text": " @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."
									},
									"id": 1021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "7810:22:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "7846:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "7833:14:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1001,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7833:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7832:16:10"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "7872:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1004,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7872:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7871:9:10"
									},
									"scope": 1054,
									"src": "7801:196:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "8443:290:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8505:222:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8519:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8536:4:10",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8530:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8530:11:10"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nodeType": "YulTypedName",
																	"src": "8523:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "8561:3:10"
																	},
																	{
																		"hexValue": "1901",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8566:10:10",
																		"type": "",
																		"value": "\u0019\u0001"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8554:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8554:23:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8554:23:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "8601:3:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8606:4:10",
																				"type": "",
																				"value": "0x02"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8597:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8597:14:10"
																	},
																	{
																		"name": "domainSeparator",
																		"nodeType": "YulIdentifier",
																		"src": "8613:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8590:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8590:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8590:39:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "8653:3:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8658:4:10",
																				"type": "",
																				"value": "0x22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8649:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8649:14:10"
																	},
																	{
																		"name": "structHash",
																		"nodeType": "YulIdentifier",
																		"src": "8665:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8642:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8642:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8642:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8689:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "8707:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8712:4:10",
																		"type": "",
																		"value": "0x42"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "8697:9:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8697:20:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "8689:4:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1029,
														"isOffset": false,
														"isSlot": false,
														"src": "8689:4:10",
														"valueSize": 1
													},
													{
														"declaration": 1024,
														"isOffset": false,
														"isSlot": false,
														"src": "8613:15:10",
														"valueSize": 1
													},
													{
														"declaration": 1026,
														"isOffset": false,
														"isSlot": false,
														"src": "8665:10:10",
														"valueSize": 1
													}
												],
												"id": 1031,
												"nodeType": "InlineAssembly",
												"src": "8496:231:10"
											}
										]
									},
									"documentation": {
										"id": 1022,
										"nodeType": "StructuredDocumentation",
										"src": "8003:328:10",
										"text": " @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."
									},
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nameLocation": "8345:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nameLocation": "8369:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "8361:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1023,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8361:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "8394:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "8386:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1025,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8386:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8360:45:10"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8437:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "8429:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1028,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8429:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8428:14:10"
									},
									"scope": 1054,
									"src": "8336:397:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "9048:80:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1900",
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9092:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	"value": "\u0019\u0000"
																},
																{
																	"id": 1047,
																	"name": "validator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1036,
																	"src": "9104:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1048,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1038,
																	"src": "9115:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1044,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "9075:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "9079:12:10",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "9075:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9075:45:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1043,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "9065:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9065:56:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1042,
												"id": 1051,
												"nodeType": "Return",
												"src": "9058:63:10"
											}
										]
									},
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "8739:193:10",
										"text": " @dev Returns an Ethereum Signed Data with intended validator, created from a\n `validator` and `data` according to the version 0 of EIP-191.\n See {recover}."
									},
									"id": 1053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toDataWithIntendedValidatorHash",
									"nameLocation": "8946:31:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "8986:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "8978:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8978:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9010:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "8997:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1037,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8997:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8977:38:10"
									},
									"returnParameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "9039:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1040,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9038:9:10"
									},
									"scope": 1054,
									"src": "8937:191:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1055,
							"src": "369:8761:10",
							"usedErrors": []
						}
					],
					"src": "112:9019:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
					"exportedSymbols": {
						"ECDSA": [
							1054
						],
						"IERC1271": [
							13
						],
						"Math": [
							2055
						],
						"SignatureChecker": [
							1153
						],
						"SignedMath": [
							2160
						],
						"Strings": [
							688
						]
					},
					"id": 1154,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1056,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "123:23:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"file": "./ECDSA.sol",
							"id": 1057,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1154,
							"sourceUnit": 1055,
							"src": "148:21:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1271.sol",
							"file": "../../interfaces/IERC1271.sol",
							"id": 1058,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1154,
							"sourceUnit": 14,
							"src": "170:39:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignatureChecker",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1059,
								"nodeType": "StructuredDocumentation",
								"src": "211:294:11",
								"text": " @dev Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA\n signatures from externally owned accounts (EOAs) as well as ERC1271 signatures from smart contract wallets like\n Argent and Gnosis Safe.\n _Available since v4.1._"
							},
							"fullyImplemented": true,
							"id": 1153,
							"linearizedBaseContracts": [
								1153
							],
							"name": "SignatureChecker",
							"nameLocation": "514:16:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "1126:254:11",
										"statements": [
											{
												"assignments": [
													1072,
													1075
												],
												"declarations": [
													{
														"constant": false,
														"id": 1072,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "1145:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 1099,
														"src": "1137:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1071,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1075,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "1175:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 1099,
														"src": "1156:24:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$698",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1074,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1073,
																"name": "ECDSA.RecoverError",
																"nameLocations": [
																	"1156:5:11",
																	"1162:12:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 698,
																"src": "1156:18:11"
															},
															"referencedDeclaration": 698,
															"src": "1156:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$698",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1081,
												"initialValue": {
													"arguments": [
														{
															"id": 1078,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "1201:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1079,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "1207:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1076,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "1184:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$1054_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 1077,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1190:10:11",
														"memberName": "tryRecover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 788,
														"src": "1184:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$698_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1184:33:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$698_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1136:81:11"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_enum$_RecoverError_$698",
																		"typeString": "enum ECDSA.RecoverError"
																	},
																	"id": 1086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1082,
																		"name": "error",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1075,
																		"src": "1247:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$698",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"expression": {
																				"id": 1083,
																				"name": "ECDSA",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1054,
																				"src": "1256:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ECDSA_$1054_$",
																					"typeString": "type(library ECDSA)"
																				}
																			},
																			"id": 1084,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1262:12:11",
																			"memberName": "RecoverError",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 698,
																			"src": "1256:18:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$698_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1085,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1275:7:11",
																		"memberName": "NoError",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 693,
																		"src": "1256:26:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$698",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	"src": "1247:35:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1087,
																		"name": "recovered",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1072,
																		"src": "1286:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1088,
																		"name": "signer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1062,
																		"src": "1299:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "1286:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1247:58:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1091,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1246:60:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1093,
																"name": "signer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "1349:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1094,
																"name": "hash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1064,
																"src": "1357:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 1095,
																"name": "signature",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1066,
																"src": "1363:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1092,
															"name": "isValidERC1271SignatureNow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "1322:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (address,bytes32,bytes memory) view returns (bool)"
															}
														},
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1322:51:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1246:127:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1070,
												"id": 1098,
												"nodeType": "Return",
												"src": "1227:146:11"
											}
										]
									},
									"documentation": {
										"id": 1060,
										"nodeType": "StructuredDocumentation",
										"src": "537:472:11",
										"text": " @dev Checks if a signature is valid for a given signer and data hash. If the signer is a smart contract, the\n signature is validated against that smart contract using ERC1271, otherwise it's validated using `ECDSA.recover`.\n NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n change through time. It could return true at block N and false at block N+1 (or the opposite)."
									},
									"id": 1100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValidSignatureNow",
									"nameLocation": "1023:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "1051:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "1043:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "1067:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "1059:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1063,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1059:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "1086:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "1073:22:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1065,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1073:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:54:11"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "1120:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1068,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1120:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1119:6:11"
									},
									"scope": 1153,
									"src": "1014:366:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1151,
										"nodeType": "Block",
										"src": "1935:324:11",
										"statements": [
											{
												"assignments": [
													1113,
													1115
												],
												"declarations": [
													{
														"constant": false,
														"id": 1113,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1951:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1151,
														"src": "1946:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1112,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1946:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1115,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "1973:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1151,
														"src": "1960:19:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1114,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1960:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1127,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1120,
																			"name": "IERC1271",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 13,
																			"src": "2037:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1271_$13_$",
																				"typeString": "type(contract IERC1271)"
																			}
																		},
																		"id": 1121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2046:16:11",
																		"memberName": "isValidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 12,
																		"src": "2037:25:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																			"typeString": "function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"
																		}
																	},
																	"id": 1122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2063:8:11",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2037:34:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1123,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1105,
																	"src": "2073:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1124,
																	"name": "signature",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "2079:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1118,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2014:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2018:18:11",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2014:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2014:75:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1116,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "1983:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1990:10:11",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "1983:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1983:116:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1945:154:11"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1128,
																	"name": "success",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1113,
																	"src": "2117:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1129,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1115,
																			"src": "2140:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2147:6:11",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2140:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"hexValue": "3332",
																		"id": 1131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2157:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	"src": "2140:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2117:42:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1136,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1115,
																			"src": "2186:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		{
																			"components": [
																				{
																					"id": 1138,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "2195:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes32_$",
																						"typeString": "type(bytes32)"
																					},
																					"typeName": {
																						"id": 1137,
																						"name": "bytes32",
																						"nodeType": "ElementaryTypeName",
																						"src": "2195:7:11",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"id": 1139,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2194:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			},
																			{
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			}
																		],
																		"expression": {
																			"id": 1134,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2175:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2179:6:11",
																		"memberName": "decode",
																		"nodeType": "MemberAccess",
																		"src": "2175:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2175:29:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 1143,
																					"name": "IERC1271",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 13,
																					"src": "2216:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC1271_$13_$",
																						"typeString": "type(contract IERC1271)"
																					}
																				},
																				"id": 1144,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2225:16:11",
																				"memberName": "isValidSignature",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 12,
																				"src": "2216:25:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"
																				}
																			},
																			"id": 1145,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "2242:8:11",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2216:34:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"id": 1142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2208:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes32_$",
																			"typeString": "type(bytes32)"
																		},
																		"typeName": {
																			"id": 1141,
																			"name": "bytes32",
																			"nodeType": "ElementaryTypeName",
																			"src": "2208:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2208:43:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "2175:76:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2117:134:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1149,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2116:136:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1111,
												"id": 1150,
												"nodeType": "Return",
												"src": "2109:143:11"
											}
										]
									},
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "1386:395:11",
										"text": " @dev Checks if a signature is valid for a given signer and data hash. The signature is validated\n against the signer smart contract using ERC1271.\n NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n change through time. It could return true at block N and false at block N+1 (or the opposite)."
									},
									"id": 1152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValidERC1271SignatureNow",
									"nameLocation": "1795:26:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "1839:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "1831:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1831:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "1863:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "1855:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1104,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1855:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "1890:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "1877:22:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1106,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1877:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1821:84:11"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "1929:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1109,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1929:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1928:6:11"
									},
									"scope": 1153,
									"src": "1786:473:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1154,
							"src": "506:1755:11",
							"usedErrors": []
						}
					],
					"src": "123:2139:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1177
						],
						"IERC165": [
							1189
						]
					},
					"id": 1178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1155,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1156,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 1190,
							"src": "124:23:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1158,
										"name": "IERC165",
										"nameLocations": [
											"754:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1189,
										"src": "754:7:12"
									},
									"id": 1159,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:12"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1157,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:12",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1177,
							"linearizedBaseContracts": [
								1177,
								1189
							],
							"name": "ERC165",
							"nameLocation": "744:6:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1188
									],
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "920:64:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1168,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "937:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1170,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1189,
																	"src": "957:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1189_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1189_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1169,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1189",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1172,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:12",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1167,
												"id": 1174,
												"nodeType": "Return",
												"src": "930:47:12"
											}
										]
									},
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:12",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1164,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:12"
									},
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "856:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1161,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:12"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "914:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:12"
									},
									"scope": 1177,
									"src": "829:155:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1178,
							"src": "726:260:12",
							"usedErrors": []
						}
					],
					"src": "99:888:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1189
						]
					},
					"id": 1190,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1180,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:13",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1189,
							"linearizedBaseContracts": [
								1189
							],
							"name": "IERC165",
							"nameLocation": "415:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1181,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:13",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1188,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "801:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1182,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:13"
									},
									"returnParameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "844:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1185,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:13"
									},
									"scope": 1189,
									"src": "774:76:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1190,
							"src": "405:447:13",
							"usedErrors": []
						}
					],
					"src": "100:753:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2055
						]
					},
					"id": 2056,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1191,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1192,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:14",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2055,
							"linearizedBaseContracts": [
								2055
							],
							"name": "Math",
							"nameLocation": "210:4:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1196,
									"members": [
										{
											"id": 1193,
											"name": "Down",
											"nameLocation": "245:4:14",
											"nodeType": "EnumValue",
											"src": "245:4:14"
										},
										{
											"id": 1194,
											"name": "Up",
											"nameLocation": "287:2:14",
											"nodeType": "EnumValue",
											"src": "287:2:14"
										},
										{
											"id": 1195,
											"name": "Zero",
											"nameLocation": "318:4:14",
											"nodeType": "EnumValue",
											"src": "318:4:14"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:14",
									"nodeType": "EnumDefinition",
									"src": "221:122:14"
								},
								{
									"body": {
										"id": 1213,
										"nodeType": "Block",
										"src": "480:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1206,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "497:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1207,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "501:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1210,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "509:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:14",
													"trueExpression": {
														"id": 1209,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "505:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1205,
												"id": 1212,
												"nodeType": "Return",
												"src": "490:20:14"
											}
										]
									},
									"documentation": {
										"id": 1197,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:14",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "426:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "437:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:14"
									},
									"returnParameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "471:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:14"
									},
									"scope": 2055,
									"src": "413:104:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1231,
										"nodeType": "Block",
										"src": "655:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1224,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1217,
															"src": "672:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1225,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "676:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1228,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "684:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:14",
													"trueExpression": {
														"id": 1227,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "680:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1223,
												"id": 1230,
												"nodeType": "Return",
												"src": "665:20:14"
											}
										]
									},
									"documentation": {
										"id": 1215,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:14",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "601:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "612:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:14"
									},
									"returnParameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "646:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:14"
									},
									"scope": 2055,
									"src": "588:104:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1254,
										"nodeType": "Block",
										"src": "876:82:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1242,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1235,
																	"src": "931:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1243,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1237,
																	"src": "935:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1245,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1246,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1235,
																		"src": "941:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1247,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1237,
																		"src": "945:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1249,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1241,
												"id": 1253,
												"nodeType": "Return",
												"src": "923:28:14"
											}
										]
									},
									"documentation": {
										"id": 1233,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:14",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "822:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "833:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:14"
									},
									"returnParameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "867:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:14"
									},
									"scope": 2055,
									"src": "805:153:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1279,
										"nodeType": "Block",
										"src": "1228:123:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1265,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "1316:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1269,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1258,
																			"src": "1330:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1272,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1273,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1260,
																"src": "1339:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:14",
													"trueExpression": {
														"hexValue": "30",
														"id": 1268,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1264,
												"id": 1278,
												"nodeType": "Return",
												"src": "1309:35:14"
											}
										]
									},
									"documentation": {
										"id": 1256,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:14",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "1174:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "1185:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:14"
									},
									"returnParameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "1219:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:14"
									},
									"scope": 2055,
									"src": "1157:194:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1402,
										"nodeType": "Block",
										"src": "1765:4115:14",
										"statements": [
											{
												"id": 1401,
												"nodeType": "UncheckedBlock",
												"src": "1775:4099:14",
												"statements": [
													{
														"assignments": [
															1293
														],
														"declarations": [
															{
																"constant": false,
																"id": 1293,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2104:5:14",
																"nodeType": "VariableDeclaration",
																"scope": 1401,
																"src": "2096:13:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1292,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2096:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1294,
														"nodeType": "VariableDeclarationStatement",
														"src": "2096:13:14"
													},
													{
														"assignments": [
															1296
														],
														"declarations": [
															{
																"constant": false,
																"id": 1296,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2176:5:14",
																"nodeType": "VariableDeclaration",
																"scope": 1401,
																"src": "2168:13:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1295,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2168:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1297,
														"nodeType": "VariableDeclarationStatement",
														"src": "2168:13:14"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2248:157:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2266:30:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2283:1:14"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2286:1:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2293:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2289:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2289:6:14"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2276:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2276:20:14"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2270:2:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2313:18:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2326:1:14"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2329:1:14"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2322:9:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2313:5:14"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2348:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2365:2:14"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2369:5:14"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2361:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2361:14:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2380:2:14"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2384:5:14"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2377:2:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2377:13:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2357:34:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2348:5:14"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1293,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:5:14",
																"valueSize": 1
															},
															{
																"declaration": 1293,
																"isOffset": false,
																"isSlot": false,
																"src": "2369:5:14",
																"valueSize": 1
															},
															{
																"declaration": 1293,
																"isOffset": false,
																"isSlot": false,
																"src": "2384:5:14",
																"valueSize": 1
															},
															{
																"declaration": 1296,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:5:14",
																"valueSize": 1
															},
															{
																"declaration": 1283,
																"isOffset": false,
																"isSlot": false,
																"src": "2283:1:14",
																"valueSize": 1
															},
															{
																"declaration": 1283,
																"isOffset": false,
																"isSlot": false,
																"src": "2326:1:14",
																"valueSize": 1
															},
															{
																"declaration": 1285,
																"isOffset": false,
																"isSlot": false,
																"src": "2286:1:14",
																"valueSize": 1
															},
															{
																"declaration": 1285,
																"isOffset": false,
																"isSlot": false,
																"src": "2329:1:14",
																"valueSize": 1
															}
														],
														"id": 1298,
														"nodeType": "InlineAssembly",
														"src": "2239:166:14"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1299,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1296,
																"src": "2486:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2486:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1307,
														"nodeType": "IfStatement",
														"src": "2482:368:14",
														"trueBody": {
															"id": 1306,
															"nodeType": "Block",
															"src": "2498:352:14",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1302,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1293,
																			"src": "2816:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1303,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1287,
																			"src": "2824:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2816:19:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1291,
																	"id": 1305,
																	"nodeType": "Return",
																	"src": "2809:26:14"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1309,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1287,
																		"src": "2960:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1310,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1296,
																		"src": "2974:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2960:19:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 1312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2981:23:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 1308,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2952:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2952:53:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1314,
														"nodeType": "ExpressionStatement",
														"src": "2952:53:14"
													},
													{
														"assignments": [
															1316
														],
														"declarations": [
															{
																"constant": false,
																"id": 1316,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3269:9:14",
																"nodeType": "VariableDeclaration",
																"scope": 1401,
																"src": "3261:17:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1315,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3261:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1317,
														"nodeType": "VariableDeclarationStatement",
														"src": "3261:17:14"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3301:291:14",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3370:38:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3390:1:14"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3393:1:14"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3396:11:14"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3383:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3383:25:14"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3370:9:14"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3490:41:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3503:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3513:9:14"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3524:5:14"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3510:2:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3510:20:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3499:32:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3490:5:14"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3548:30:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3561:5:14"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3557:21:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3548:5:14"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1287,
																"isOffset": false,
																"isSlot": false,
																"src": "3396:11:14",
																"valueSize": 1
															},
															{
																"declaration": 1293,
																"isOffset": false,
																"isSlot": false,
																"src": "3524:5:14",
																"valueSize": 1
															},
															{
																"declaration": 1293,
																"isOffset": false,
																"isSlot": false,
																"src": "3548:5:14",
																"valueSize": 1
															},
															{
																"declaration": 1293,
																"isOffset": false,
																"isSlot": false,
																"src": "3561:5:14",
																"valueSize": 1
															},
															{
																"declaration": 1296,
																"isOffset": false,
																"isSlot": false,
																"src": "3490:5:14",
																"valueSize": 1
															},
															{
																"declaration": 1296,
																"isOffset": false,
																"isSlot": false,
																"src": "3503:5:14",
																"valueSize": 1
															},
															{
																"declaration": 1316,
																"isOffset": false,
																"isSlot": false,
																"src": "3370:9:14",
																"valueSize": 1
															},
															{
																"declaration": 1316,
																"isOffset": false,
																"isSlot": false,
																"src": "3513:9:14",
																"valueSize": 1
															},
															{
																"declaration": 1316,
																"isOffset": false,
																"isSlot": false,
																"src": "3568:9:14",
																"valueSize": 1
															},
															{
																"declaration": 1283,
																"isOffset": false,
																"isSlot": false,
																"src": "3390:1:14",
																"valueSize": 1
															},
															{
																"declaration": 1285,
																"isOffset": false,
																"isSlot": false,
																"src": "3393:1:14",
																"valueSize": 1
															}
														],
														"id": 1318,
														"nodeType": "InlineAssembly",
														"src": "3292:300:14"
													},
													{
														"assignments": [
															1320
														],
														"declarations": [
															{
																"constant": false,
																"id": 1320,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3907:4:14",
																"nodeType": "VariableDeclaration",
																"scope": 1401,
																"src": "3899:12:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1319,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3899:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1328,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1321,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1287,
																"src": "3914:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1323,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3929:12:14",
																			"subExpression": {
																				"id": 1322,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1287,
																				"src": "3930:11:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3944:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3929:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1326,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3928:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3914:32:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3899:47:14"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3969:362:14",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "4034:37:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "4053:11:14"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4066:4:14"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4049:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4049:22:14"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "4034:11:14"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4138:25:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "4151:5:14"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4158:4:14"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4147:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4147:16:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "4138:5:14"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4278:39:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4298:1:14",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4301:4:14"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4294:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4294:12:14"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4308:4:14"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4290:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4290:23:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4315:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4286:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4286:31:14"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "4278:4:14"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1287,
																"isOffset": false,
																"isSlot": false,
																"src": "4034:11:14",
																"valueSize": 1
															},
															{
																"declaration": 1287,
																"isOffset": false,
																"isSlot": false,
																"src": "4053:11:14",
																"valueSize": 1
															},
															{
																"declaration": 1293,
																"isOffset": false,
																"isSlot": false,
																"src": "4138:5:14",
																"valueSize": 1
															},
															{
																"declaration": 1293,
																"isOffset": false,
																"isSlot": false,
																"src": "4151:5:14",
																"valueSize": 1
															},
															{
																"declaration": 1320,
																"isOffset": false,
																"isSlot": false,
																"src": "4066:4:14",
																"valueSize": 1
															},
															{
																"declaration": 1320,
																"isOffset": false,
																"isSlot": false,
																"src": "4158:4:14",
																"valueSize": 1
															},
															{
																"declaration": 1320,
																"isOffset": false,
																"isSlot": false,
																"src": "4278:4:14",
																"valueSize": 1
															},
															{
																"declaration": 1320,
																"isOffset": false,
																"isSlot": false,
																"src": "4301:4:14",
																"valueSize": 1
															},
															{
																"declaration": 1320,
																"isOffset": false,
																"isSlot": false,
																"src": "4308:4:14",
																"valueSize": 1
															}
														],
														"id": 1329,
														"nodeType": "InlineAssembly",
														"src": "3960:371:14"
													},
													{
														"expression": {
															"id": 1334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1330,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1293,
																"src": "4397:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1331,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1296,
																	"src": "4406:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1332,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1320,
																	"src": "4414:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4406:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4397:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1335,
														"nodeType": "ExpressionStatement",
														"src": "4397:21:14"
													},
													{
														"assignments": [
															1337
														],
														"declarations": [
															{
																"constant": false,
																"id": 1337,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4744:7:14",
																"nodeType": "VariableDeclaration",
																"scope": 1401,
																"src": "4736:15:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1336,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4736:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1344,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4755:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1339,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1287,
																			"src": "4759:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4755:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1341,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4754:17:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4774:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4754:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4736:39:14"
													},
													{
														"expression": {
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1345,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1337,
																"src": "4992:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5003:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1347,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1287,
																		"src": "5007:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1348,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1337,
																		"src": "5021:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5007:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5003:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4992:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1352,
														"nodeType": "ExpressionStatement",
														"src": "4992:36:14"
													},
													{
														"expression": {
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1353,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1337,
																"src": "5061:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5072:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1355,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1287,
																		"src": "5076:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1356,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1337,
																		"src": "5090:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5076:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5072:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5061:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1360,
														"nodeType": "ExpressionStatement",
														"src": "5061:36:14"
													},
													{
														"expression": {
															"id": 1367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1361,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1337,
																"src": "5131:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5142:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1363,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1287,
																		"src": "5146:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1364,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1337,
																		"src": "5160:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5146:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5142:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5131:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1368,
														"nodeType": "ExpressionStatement",
														"src": "5131:36:14"
													},
													{
														"expression": {
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1369,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1337,
																"src": "5201:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5212:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1371,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1287,
																		"src": "5216:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1372,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1337,
																		"src": "5230:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5216:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5212:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5201:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1376,
														"nodeType": "ExpressionStatement",
														"src": "5201:36:14"
													},
													{
														"expression": {
															"id": 1383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1377,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1337,
																"src": "5271:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5282:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1379,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1287,
																		"src": "5286:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1380,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1337,
																		"src": "5300:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5286:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5282:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5271:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1384,
														"nodeType": "ExpressionStatement",
														"src": "5271:36:14"
													},
													{
														"expression": {
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1385,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1337,
																"src": "5342:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5353:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1387,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1287,
																		"src": "5357:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1388,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1337,
																		"src": "5371:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5357:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5353:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5342:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1392,
														"nodeType": "ExpressionStatement",
														"src": "5342:36:14"
													},
													{
														"expression": {
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1393,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1290,
																"src": "5812:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1394,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1293,
																	"src": "5821:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1395,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1337,
																	"src": "5829:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5821:15:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5812:24:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1398,
														"nodeType": "ExpressionStatement",
														"src": "5812:24:14"
													},
													{
														"expression": {
															"id": 1399,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1290,
															"src": "5857:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1291,
														"id": 1400,
														"nodeType": "Return",
														"src": "5850:13:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1281,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:14",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1691:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "1683:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1702:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "1694:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1713:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "1705:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:43:14"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1757:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "1749:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:16:14"
									},
									"scope": 2055,
									"src": "1667:4213:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1446,
										"nodeType": "Block",
										"src": "6122:189:14",
										"statements": [
											{
												"assignments": [
													1419
												],
												"declarations": [
													{
														"constant": false,
														"id": 1419,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6140:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 1446,
														"src": "6132:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1418,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6132:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1425,
												"initialValue": {
													"arguments": [
														{
															"id": 1421,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1406,
															"src": "6156:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1422,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "6159:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1423,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1410,
															"src": "6162:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1420,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1403,
															1447
														],
														"referencedDeclaration": 1403,
														"src": "6149:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6149:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:42:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1196",
															"typeString": "enum Math.Rounding"
														},
														"id": 1429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1426,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "6188:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1196",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1427,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1196,
																"src": "6200:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1196_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6209:2:14",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1194,
															"src": "6200:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1196",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "6188:23:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1431,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1406,
																	"src": "6222:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1432,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1408,
																	"src": "6225:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1433,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1410,
																	"src": "6228:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1430,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6215:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6215:25:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6243:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6215:29:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6188:56:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1443,
												"nodeType": "IfStatement",
												"src": "6184:98:14",
												"trueBody": {
													"id": 1442,
													"nodeType": "Block",
													"src": "6246:36:14",
													"statements": [
														{
															"expression": {
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1438,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1419,
																	"src": "6260:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6270:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6260:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1441,
															"nodeType": "ExpressionStatement",
															"src": "6260:11:14"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1444,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1419,
													"src": "6298:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1417,
												"id": 1445,
												"nodeType": "Return",
												"src": "6291:13:14"
											}
										]
									},
									"documentation": {
										"id": 1404,
										"nodeType": "StructuredDocumentation",
										"src": "5886:121:14",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6021:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6036:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "6028:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6047:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "6039:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6058:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "6050:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6080:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "6071:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1196",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1412,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1411,
														"name": "Rounding",
														"nameLocations": [
															"6071:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1196,
														"src": "6071:8:14"
													},
													"referencedDeclaration": 1196,
													"src": "6071:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1196",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6027:62:14"
									},
									"returnParameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "6113:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6113:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6112:9:14"
									},
									"scope": 2055,
									"src": "6012:299:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1558,
										"nodeType": "Block",
										"src": "6587:1585:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1455,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1450,
														"src": "6601:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1456,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6606:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6601:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1461,
												"nodeType": "IfStatement",
												"src": "6597:45:14",
												"trueBody": {
													"id": 1460,
													"nodeType": "Block",
													"src": "6609:33:14",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6630:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1454,
															"id": 1459,
															"nodeType": "Return",
															"src": "6623:8:14"
														}
													]
												}
											},
											{
												"assignments": [
													1463
												],
												"declarations": [
													{
														"constant": false,
														"id": 1463,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7329:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 1558,
														"src": "7321:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1462,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7321:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1472,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1464,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7338:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1466,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1450,
																			"src": "7349:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1465,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1727,
																			1763
																		],
																		"referencedDeclaration": 1727,
																		"src": "7344:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7344:7:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7355:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7344:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1470,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7343:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7338:19:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7321:36:14"
											},
											{
												"id": 1557,
												"nodeType": "UncheckedBlock",
												"src": "7758:408:14",
												"statements": [
													{
														"expression": {
															"id": 1482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1473,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1463,
																"src": "7782:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1474,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1463,
																				"src": "7792:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1477,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1475,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1450,
																					"src": "7801:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1476,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1463,
																					"src": "7805:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7801:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7792:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1479,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7791:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7816:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7791:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7782:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1483,
														"nodeType": "ExpressionStatement",
														"src": "7782:35:14"
													},
													{
														"expression": {
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1484,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1463,
																"src": "7831:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1489,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1485,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1463,
																				"src": "7841:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1486,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1450,
																					"src": "7850:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1487,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1463,
																					"src": "7854:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7850:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7841:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1490,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7840:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7865:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7840:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7831:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1494,
														"nodeType": "ExpressionStatement",
														"src": "7831:35:14"
													},
													{
														"expression": {
															"id": 1504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1495,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1463,
																"src": "7880:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1496,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1463,
																				"src": "7890:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1499,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1497,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1450,
																					"src": "7899:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1498,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1463,
																					"src": "7903:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7899:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7890:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1501,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7889:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7914:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7889:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7880:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1505,
														"nodeType": "ExpressionStatement",
														"src": "7880:35:14"
													},
													{
														"expression": {
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1506,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1463,
																"src": "7929:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1507,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1463,
																				"src": "7939:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1510,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1508,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1450,
																					"src": "7948:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1509,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1463,
																					"src": "7952:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7948:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7939:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1512,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7938:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7938:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7929:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1516,
														"nodeType": "ExpressionStatement",
														"src": "7929:35:14"
													},
													{
														"expression": {
															"id": 1526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1517,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1463,
																"src": "7978:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1518,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1463,
																				"src": "7988:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1521,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1519,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1450,
																					"src": "7997:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1520,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1463,
																					"src": "8001:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7997:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7988:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1523,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7987:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7987:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7978:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1527,
														"nodeType": "ExpressionStatement",
														"src": "7978:35:14"
													},
													{
														"expression": {
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1528,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1463,
																"src": "8027:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1533,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1529,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1463,
																				"src": "8037:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1532,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1530,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1450,
																					"src": "8046:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1531,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1463,
																					"src": "8050:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8046:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8037:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1534,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8036:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8061:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8036:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8027:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1538,
														"nodeType": "ExpressionStatement",
														"src": "8027:35:14"
													},
													{
														"expression": {
															"id": 1548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1539,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1463,
																"src": "8076:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1540,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1463,
																				"src": "8086:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1543,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1541,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1450,
																					"src": "8095:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1542,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1463,
																					"src": "8099:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8095:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8086:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1545,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8085:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8110:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8085:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8076:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1549,
														"nodeType": "ExpressionStatement",
														"src": "8076:35:14"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1551,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1463,
																	"src": "8136:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1552,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1450,
																		"src": "8144:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1553,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1463,
																		"src": "8148:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8144:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1550,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "8132:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8132:23:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1454,
														"id": 1556,
														"nodeType": "Return",
														"src": "8125:30:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1448,
										"nodeType": "StructuredDocumentation",
										"src": "6317:208:14",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6539:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6552:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "6544:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6544:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6543:11:14"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "6578:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6578:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6577:9:14"
									},
									"scope": 2055,
									"src": "6530:1642:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1594,
										"nodeType": "Block",
										"src": "8348:161:14",
										"statements": [
											{
												"id": 1593,
												"nodeType": "UncheckedBlock",
												"src": "8358:145:14",
												"statements": [
													{
														"assignments": [
															1571
														],
														"declarations": [
															{
																"constant": false,
																"id": 1571,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8390:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 1593,
																"src": "8382:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1570,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8382:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1575,
														"initialValue": {
															"arguments": [
																{
																	"id": 1573,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1562,
																	"src": "8404:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1572,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1559,
																	1595
																],
																"referencedDeclaration": 1559,
																"src": "8399:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8399:7:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8382:24:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1576,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "8427:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1196",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1580,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1577,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1565,
																					"src": "8437:8:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1196",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1578,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1196,
																						"src": "8449:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1196_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1579,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8458:2:14",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1194,
																					"src": "8449:11:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1196",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8437:23:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1585,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1583,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1581,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1571,
																						"src": "8464:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1582,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1571,
																						"src": "8473:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8464:15:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1584,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1562,
																					"src": "8482:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8464:19:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8437:46:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1588,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8490:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8437:54:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8486:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1590,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8436:56:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8427:65:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1569,
														"id": 1592,
														"nodeType": "Return",
														"src": "8420:72:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1560,
										"nodeType": "StructuredDocumentation",
										"src": "8178:89:14",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8281:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8294:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "8286:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8286:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8306:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "8297:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1196",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1564,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1563,
														"name": "Rounding",
														"nameLocations": [
															"8297:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1196,
														"src": "8297:8:14"
													},
													"referencedDeclaration": 1196,
													"src": "8297:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1196",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8285:30:14"
									},
									"returnParameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "8339:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8339:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8338:9:14"
									},
									"scope": 2055,
									"src": "8272:237:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1726,
										"nodeType": "Block",
										"src": "8694:922:14",
										"statements": [
											{
												"assignments": [
													1604
												],
												"declarations": [
													{
														"constant": false,
														"id": 1604,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8712:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 1726,
														"src": "8704:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1603,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8704:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1606,
												"initialValue": {
													"hexValue": "30",
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8721:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8704:18:14"
											},
											{
												"id": 1723,
												"nodeType": "UncheckedBlock",
												"src": "8732:855:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1607,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1598,
																	"src": "8760:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8769:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8760:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8775:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8760:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1621,
														"nodeType": "IfStatement",
														"src": "8756:99:14",
														"trueBody": {
															"id": 1620,
															"nodeType": "Block",
															"src": "8778:77:14",
															"statements": [
																{
																	"expression": {
																		"id": 1614,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1612,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1598,
																			"src": "8796:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1613,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8796:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1615,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:13:14"
																},
																{
																	"expression": {
																		"id": 1618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1616,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1604,
																			"src": "8827:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1617,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8837:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8827:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1619,
																	"nodeType": "ExpressionStatement",
																	"src": "8827:13:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1622,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1598,
																	"src": "8872:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8881:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8872:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1625,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8886:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8872:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1636,
														"nodeType": "IfStatement",
														"src": "8868:96:14",
														"trueBody": {
															"id": 1635,
															"nodeType": "Block",
															"src": "8889:75:14",
															"statements": [
																{
																	"expression": {
																		"id": 1629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1627,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1598,
																			"src": "8907:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8917:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8907:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1630,
																	"nodeType": "ExpressionStatement",
																	"src": "8907:12:14"
																},
																{
																	"expression": {
																		"id": 1633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1631,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1604,
																			"src": "8937:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1632,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8947:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8937:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1634,
																	"nodeType": "ExpressionStatement",
																	"src": "8937:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1637,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1598,
																	"src": "8981:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8990:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8981:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8995:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8981:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1651,
														"nodeType": "IfStatement",
														"src": "8977:96:14",
														"trueBody": {
															"id": 1650,
															"nodeType": "Block",
															"src": "8998:75:14",
															"statements": [
																{
																	"expression": {
																		"id": 1644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1642,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1598,
																			"src": "9016:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9026:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9016:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1645,
																	"nodeType": "ExpressionStatement",
																	"src": "9016:12:14"
																},
																{
																	"expression": {
																		"id": 1648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1646,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1604,
																			"src": "9046:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1647,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9056:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9046:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1649,
																	"nodeType": "ExpressionStatement",
																	"src": "9046:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1652,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1598,
																	"src": "9090:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9099:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9090:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9104:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9090:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1666,
														"nodeType": "IfStatement",
														"src": "9086:96:14",
														"trueBody": {
															"id": 1665,
															"nodeType": "Block",
															"src": "9107:75:14",
															"statements": [
																{
																	"expression": {
																		"id": 1659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1657,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1598,
																			"src": "9125:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9135:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9125:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1660,
																	"nodeType": "ExpressionStatement",
																	"src": "9125:12:14"
																},
																{
																	"expression": {
																		"id": 1663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1661,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1604,
																			"src": "9155:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1662,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9165:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9155:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1664,
																	"nodeType": "ExpressionStatement",
																	"src": "9155:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1667,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1598,
																	"src": "9199:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9208:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9199:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1670,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9212:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9199:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1681,
														"nodeType": "IfStatement",
														"src": "9195:93:14",
														"trueBody": {
															"id": 1680,
															"nodeType": "Block",
															"src": "9215:73:14",
															"statements": [
																{
																	"expression": {
																		"id": 1674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1672,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1598,
																			"src": "9233:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9243:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9233:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1675,
																	"nodeType": "ExpressionStatement",
																	"src": "9233:11:14"
																},
																{
																	"expression": {
																		"id": 1678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1676,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1604,
																			"src": "9262:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1677,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9272:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9262:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1679,
																	"nodeType": "ExpressionStatement",
																	"src": "9262:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1682,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1598,
																	"src": "9305:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9314:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9305:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9318:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9305:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1696,
														"nodeType": "IfStatement",
														"src": "9301:93:14",
														"trueBody": {
															"id": 1695,
															"nodeType": "Block",
															"src": "9321:73:14",
															"statements": [
																{
																	"expression": {
																		"id": 1689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1687,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1598,
																			"src": "9339:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9349:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9339:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1690,
																	"nodeType": "ExpressionStatement",
																	"src": "9339:11:14"
																},
																{
																	"expression": {
																		"id": 1693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1691,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1604,
																			"src": "9368:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1692,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9378:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9368:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1694,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1697,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1598,
																	"src": "9411:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9420:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9411:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1700,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9424:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9411:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1711,
														"nodeType": "IfStatement",
														"src": "9407:93:14",
														"trueBody": {
															"id": 1710,
															"nodeType": "Block",
															"src": "9427:73:14",
															"statements": [
																{
																	"expression": {
																		"id": 1704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1702,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1598,
																			"src": "9445:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1703,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9455:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9445:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1705,
																	"nodeType": "ExpressionStatement",
																	"src": "9445:11:14"
																},
																{
																	"expression": {
																		"id": 1708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1706,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1604,
																			"src": "9474:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1707,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9484:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9474:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1709,
																	"nodeType": "ExpressionStatement",
																	"src": "9474:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1712,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1598,
																	"src": "9517:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9526:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9517:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9530:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9517:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1722,
														"nodeType": "IfStatement",
														"src": "9513:64:14",
														"trueBody": {
															"id": 1721,
															"nodeType": "Block",
															"src": "9533:44:14",
															"statements": [
																{
																	"expression": {
																		"id": 1719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1717,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1604,
																			"src": "9551:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1718,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9561:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9551:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1720,
																	"nodeType": "ExpressionStatement",
																	"src": "9551:11:14"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1724,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1604,
													"src": "9603:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1602,
												"id": 1725,
												"nodeType": "Return",
												"src": "9596:13:14"
											}
										]
									},
									"documentation": {
										"id": 1596,
										"nodeType": "StructuredDocumentation",
										"src": "8515:113:14",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8642:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8655:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "8647:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8646:15:14"
									},
									"returnParameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "8685:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8685:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8684:9:14"
									},
									"scope": 2055,
									"src": "8633:983:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1762,
										"nodeType": "Block",
										"src": "9849:165:14",
										"statements": [
											{
												"id": 1761,
												"nodeType": "UncheckedBlock",
												"src": "9859:149:14",
												"statements": [
													{
														"assignments": [
															1739
														],
														"declarations": [
															{
																"constant": false,
																"id": 1739,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9891:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 1761,
																"src": "9883:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1738,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9883:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1743,
														"initialValue": {
															"arguments": [
																{
																	"id": 1741,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1730,
																	"src": "9905:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1740,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1727,
																	1763
																],
																"referencedDeclaration": 1727,
																"src": "9900:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9900:11:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9883:28:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1744,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1739,
																"src": "9932:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1196",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1748,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1745,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1733,
																					"src": "9942:8:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1196",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1746,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1196,
																						"src": "9954:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1196_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1747,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9963:2:14",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1194,
																					"src": "9954:11:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1196",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9942:23:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1753,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1751,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1749,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9969:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1750,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1739,
																						"src": "9974:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9969:11:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1752,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1730,
																					"src": "9983:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9969:19:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9942:46:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1756,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9995:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9942:54:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9991:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1758,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9941:56:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9932:65:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1737,
														"id": 1760,
														"nodeType": "Return",
														"src": "9925:72:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1728,
										"nodeType": "StructuredDocumentation",
										"src": "9622:142:14",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9778:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9791:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "9783:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9783:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9807:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "9798:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1196",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1732,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1731,
														"name": "Rounding",
														"nameLocations": [
															"9798:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1196,
														"src": "9798:8:14"
													},
													"referencedDeclaration": 1196,
													"src": "9798:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1196",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9782:34:14"
									},
									"returnParameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "9840:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9840:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9839:9:14"
									},
									"scope": 2055,
									"src": "9769:245:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1891,
										"nodeType": "Block",
										"src": "10201:854:14",
										"statements": [
											{
												"assignments": [
													1772
												],
												"declarations": [
													{
														"constant": false,
														"id": 1772,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10219:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 1891,
														"src": "10211:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1771,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10211:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1774,
												"initialValue": {
													"hexValue": "30",
													"id": 1773,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10228:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10211:18:14"
											},
											{
												"id": 1888,
												"nodeType": "UncheckedBlock",
												"src": "10239:787:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1775,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1766,
																"src": "10267:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10276:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10282:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10276:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10267:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1791,
														"nodeType": "IfStatement",
														"src": "10263:103:14",
														"trueBody": {
															"id": 1790,
															"nodeType": "Block",
															"src": "10286:80:14",
															"statements": [
																{
																	"expression": {
																		"id": 1784,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1780,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1766,
																			"src": "10304:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1781,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10313:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1782,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10319:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10313:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10304:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1785,
																	"nodeType": "ExpressionStatement",
																	"src": "10304:17:14"
																},
																{
																	"expression": {
																		"id": 1788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1786,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1772,
																			"src": "10339:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1787,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10349:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10339:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1789,
																	"nodeType": "ExpressionStatement",
																	"src": "10339:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1792,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1766,
																"src": "10383:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10392:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10398:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10392:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10383:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1808,
														"nodeType": "IfStatement",
														"src": "10379:103:14",
														"trueBody": {
															"id": 1807,
															"nodeType": "Block",
															"src": "10402:80:14",
															"statements": [
																{
																	"expression": {
																		"id": 1801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1797,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1766,
																			"src": "10420:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1798,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10429:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1799,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10435:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10429:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10420:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1802,
																	"nodeType": "ExpressionStatement",
																	"src": "10420:17:14"
																},
																{
																	"expression": {
																		"id": 1805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1803,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1772,
																			"src": "10455:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10465:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10455:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1806,
																	"nodeType": "ExpressionStatement",
																	"src": "10455:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1809,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1766,
																"src": "10499:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1812,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10508:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10514:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10508:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10499:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1825,
														"nodeType": "IfStatement",
														"src": "10495:103:14",
														"trueBody": {
															"id": 1824,
															"nodeType": "Block",
															"src": "10518:80:14",
															"statements": [
																{
																	"expression": {
																		"id": 1818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1814,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1766,
																			"src": "10536:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1817,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1815,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10545:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1816,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10551:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10545:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10536:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1819,
																	"nodeType": "ExpressionStatement",
																	"src": "10536:17:14"
																},
																{
																	"expression": {
																		"id": 1822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1820,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1772,
																			"src": "10571:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1821,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10581:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10571:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1823,
																	"nodeType": "ExpressionStatement",
																	"src": "10571:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1826,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1766,
																"src": "10615:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1829,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10624:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10630:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10624:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10615:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1842,
														"nodeType": "IfStatement",
														"src": "10611:100:14",
														"trueBody": {
															"id": 1841,
															"nodeType": "Block",
															"src": "10633:78:14",
															"statements": [
																{
																	"expression": {
																		"id": 1835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1831,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1766,
																			"src": "10651:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1832,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10660:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1833,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10666:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10660:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10651:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1836,
																	"nodeType": "ExpressionStatement",
																	"src": "10651:16:14"
																},
																{
																	"expression": {
																		"id": 1839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1837,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1772,
																			"src": "10685:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1838,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10695:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10685:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1840,
																	"nodeType": "ExpressionStatement",
																	"src": "10685:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1843,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1766,
																"src": "10728:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1846,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10737:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10743:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10737:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10728:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1859,
														"nodeType": "IfStatement",
														"src": "10724:100:14",
														"trueBody": {
															"id": 1858,
															"nodeType": "Block",
															"src": "10746:78:14",
															"statements": [
																{
																	"expression": {
																		"id": 1852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1848,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1766,
																			"src": "10764:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1851,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1849,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10773:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1850,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10779:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10773:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10764:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1853,
																	"nodeType": "ExpressionStatement",
																	"src": "10764:16:14"
																},
																{
																	"expression": {
																		"id": 1856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1854,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1772,
																			"src": "10798:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1855,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10808:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10798:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1857,
																	"nodeType": "ExpressionStatement",
																	"src": "10798:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1860,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1766,
																"src": "10841:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10850:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10856:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10850:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10841:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1876,
														"nodeType": "IfStatement",
														"src": "10837:100:14",
														"trueBody": {
															"id": 1875,
															"nodeType": "Block",
															"src": "10859:78:14",
															"statements": [
																{
																	"expression": {
																		"id": 1869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1865,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1766,
																			"src": "10877:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1868,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1866,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10886:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1867,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10892:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10886:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10877:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1870,
																	"nodeType": "ExpressionStatement",
																	"src": "10877:16:14"
																},
																{
																	"expression": {
																		"id": 1873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1871,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1772,
																			"src": "10911:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1872,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10921:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10911:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1874,
																	"nodeType": "ExpressionStatement",
																	"src": "10911:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1877,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1766,
																"src": "10954:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1880,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10963:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10969:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10963:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10954:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1887,
														"nodeType": "IfStatement",
														"src": "10950:66:14",
														"trueBody": {
															"id": 1886,
															"nodeType": "Block",
															"src": "10972:44:14",
															"statements": [
																{
																	"expression": {
																		"id": 1884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1882,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1772,
																			"src": "10990:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11000:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10990:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1885,
																	"nodeType": "ExpressionStatement",
																	"src": "10990:11:14"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1889,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1772,
													"src": "11042:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1770,
												"id": 1890,
												"nodeType": "Return",
												"src": "11035:13:14"
											}
										]
									},
									"documentation": {
										"id": 1764,
										"nodeType": "StructuredDocumentation",
										"src": "10020:114:14",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10148:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10162:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "10154:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10154:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10153:15:14"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "10192:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10192:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10191:9:14"
									},
									"scope": 2055,
									"src": "10139:916:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1927,
										"nodeType": "Block",
										"src": "11290:167:14",
										"statements": [
											{
												"id": 1926,
												"nodeType": "UncheckedBlock",
												"src": "11300:151:14",
												"statements": [
													{
														"assignments": [
															1904
														],
														"declarations": [
															{
																"constant": false,
																"id": 1904,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11332:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 1926,
																"src": "11324:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1903,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11324:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1908,
														"initialValue": {
															"arguments": [
																{
																	"id": 1906,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1895,
																	"src": "11347:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1905,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1892,
																	1928
																],
																"referencedDeclaration": 1892,
																"src": "11341:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11341:12:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11324:29:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1909,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "11374:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1919,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1196",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1913,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1910,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1898,
																					"src": "11384:8:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1196",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1911,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1196,
																						"src": "11396:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1196_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1912,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11405:2:14",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1194,
																					"src": "11396:11:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1196",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11384:23:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1918,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1916,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1914,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11411:2:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1915,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1904,
																						"src": "11417:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11411:12:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1917,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1895,
																					"src": "11426:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11411:20:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11384:47:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1921,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11438:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1922,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11384:55:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11434:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1923,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11383:57:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11374:66:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1902,
														"id": 1925,
														"nodeType": "Return",
														"src": "11367:73:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1893,
										"nodeType": "StructuredDocumentation",
										"src": "11061:143:14",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11218:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11232:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "11224:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11224:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11248:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "11239:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1196",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1897,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1896,
														"name": "Rounding",
														"nameLocations": [
															"11239:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1196,
														"src": "11239:8:14"
													},
													"referencedDeclaration": 1196,
													"src": "11239:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1196",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11223:34:14"
									},
									"returnParameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "11281:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11281:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11280:9:14"
									},
									"scope": 2055,
									"src": "11209:248:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2014,
										"nodeType": "Block",
										"src": "11771:600:14",
										"statements": [
											{
												"assignments": [
													1937
												],
												"declarations": [
													{
														"constant": false,
														"id": 1937,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11789:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2014,
														"src": "11781:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1936,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11781:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1939,
												"initialValue": {
													"hexValue": "30",
													"id": 1938,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11798:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11781:18:14"
											},
											{
												"id": 2011,
												"nodeType": "UncheckedBlock",
												"src": "11809:533:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1940,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1931,
																	"src": "11837:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11846:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11837:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1943,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11852:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11837:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1954,
														"nodeType": "IfStatement",
														"src": "11833:98:14",
														"trueBody": {
															"id": 1953,
															"nodeType": "Block",
															"src": "11855:76:14",
															"statements": [
																{
																	"expression": {
																		"id": 1947,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1945,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1931,
																			"src": "11873:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1946,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11883:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11873:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1948,
																	"nodeType": "ExpressionStatement",
																	"src": "11873:13:14"
																},
																{
																	"expression": {
																		"id": 1951,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1949,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1937,
																			"src": "11904:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1950,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11914:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11904:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1952,
																	"nodeType": "ExpressionStatement",
																	"src": "11904:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1955,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1931,
																	"src": "11948:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11957:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11948:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1958,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11962:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11948:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1969,
														"nodeType": "IfStatement",
														"src": "11944:95:14",
														"trueBody": {
															"id": 1968,
															"nodeType": "Block",
															"src": "11965:74:14",
															"statements": [
																{
																	"expression": {
																		"id": 1962,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1960,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1931,
																			"src": "11983:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1961,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11993:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11983:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1963,
																	"nodeType": "ExpressionStatement",
																	"src": "11983:12:14"
																},
																{
																	"expression": {
																		"id": 1966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1964,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1937,
																			"src": "12013:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1965,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12023:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12013:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1967,
																	"nodeType": "ExpressionStatement",
																	"src": "12013:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1970,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1931,
																	"src": "12056:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12065:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12056:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12070:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12056:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1984,
														"nodeType": "IfStatement",
														"src": "12052:95:14",
														"trueBody": {
															"id": 1983,
															"nodeType": "Block",
															"src": "12073:74:14",
															"statements": [
																{
																	"expression": {
																		"id": 1977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1975,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1931,
																			"src": "12091:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12101:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12091:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1978,
																	"nodeType": "ExpressionStatement",
																	"src": "12091:12:14"
																},
																{
																	"expression": {
																		"id": 1981,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1979,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1937,
																			"src": "12121:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1980,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12131:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12121:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1982,
																	"nodeType": "ExpressionStatement",
																	"src": "12121:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1985,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1931,
																	"src": "12164:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12173:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12164:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12178:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12164:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1999,
														"nodeType": "IfStatement",
														"src": "12160:95:14",
														"trueBody": {
															"id": 1998,
															"nodeType": "Block",
															"src": "12181:74:14",
															"statements": [
																{
																	"expression": {
																		"id": 1992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1990,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1931,
																			"src": "12199:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1991,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12209:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12199:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1993,
																	"nodeType": "ExpressionStatement",
																	"src": "12199:12:14"
																},
																{
																	"expression": {
																		"id": 1996,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1994,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1937,
																			"src": "12229:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1995,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12239:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12229:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1997,
																	"nodeType": "ExpressionStatement",
																	"src": "12229:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2000,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1931,
																	"src": "12272:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12281:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12272:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2003,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12272:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2010,
														"nodeType": "IfStatement",
														"src": "12268:64:14",
														"trueBody": {
															"id": 2009,
															"nodeType": "Block",
															"src": "12288:44:14",
															"statements": [
																{
																	"expression": {
																		"id": 2007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2005,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1937,
																			"src": "12306:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2006,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12316:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12306:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2008,
																	"nodeType": "ExpressionStatement",
																	"src": "12306:11:14"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2012,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1937,
													"src": "12358:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1935,
												"id": 2013,
												"nodeType": "Return",
												"src": "12351:13:14"
											}
										]
									},
									"documentation": {
										"id": 1929,
										"nodeType": "StructuredDocumentation",
										"src": "11463:240:14",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2015,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11717:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11732:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "11724:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11724:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11723:15:14"
									},
									"returnParameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "11762:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11762:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11761:9:14"
									},
									"scope": 2055,
									"src": "11708:663:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2053,
										"nodeType": "Block",
										"src": "12608:174:14",
										"statements": [
											{
												"id": 2052,
												"nodeType": "UncheckedBlock",
												"src": "12618:158:14",
												"statements": [
													{
														"assignments": [
															2027
														],
														"declarations": [
															{
																"constant": false,
																"id": 2027,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12650:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2052,
																"src": "12642:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2026,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12642:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2031,
														"initialValue": {
															"arguments": [
																{
																	"id": 2029,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2018,
																	"src": "12666:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2028,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2015,
																	2054
																],
																"referencedDeclaration": 2015,
																"src": "12659:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12659:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12642:30:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2032,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2027,
																"src": "12693:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2045,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1196",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2036,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2033,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2021,
																					"src": "12703:8:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1196",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2034,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1196,
																						"src": "12715:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1196_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2035,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12724:2:14",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1194,
																					"src": "12715:11:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1196",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12703:23:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2044,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2042,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2037,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12730:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2040,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2038,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2027,
																									"src": "12736:6:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2039,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12746:1:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12736:11:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2041,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12735:13:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12730:18:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2043,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2018,
																					"src": "12751:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12730:26:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12703:53:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2047,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12763:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12703:61:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2046,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12759:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2049,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12702:63:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12693:72:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2025,
														"id": 2051,
														"nodeType": "Return",
														"src": "12686:79:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2016,
										"nodeType": "StructuredDocumentation",
										"src": "12377:144:14",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12535:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12550:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "12542:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12542:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12566:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "12557:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1196",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2020,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2019,
														"name": "Rounding",
														"nameLocations": [
															"12557:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1196,
														"src": "12557:8:14"
													},
													"referencedDeclaration": 1196,
													"src": "12557:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1196",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12541:34:14"
									},
									"returnParameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "12599:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12599:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12598:9:14"
									},
									"scope": 2055,
									"src": "12526:256:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2056,
							"src": "202:12582:14",
							"usedErrors": []
						}
					],
					"src": "103:12682:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2160
						]
					},
					"id": 2161,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2057,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2058,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:15",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2160,
							"linearizedBaseContracts": [
								2160
							],
							"name": "SignedMath",
							"nameLocation": "223:10:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2075,
										"nodeType": "Block",
										"src": "375:37:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2070,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2068,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2061,
															"src": "392:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2069,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2063,
															"src": "396:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "392:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2072,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2063,
														"src": "404:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "392:13:15",
													"trueExpression": {
														"id": 2071,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2061,
														"src": "400:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2067,
												"id": 2074,
												"nodeType": "Return",
												"src": "385:20:15"
											}
										]
									},
									"documentation": {
										"id": 2059,
										"nodeType": "StructuredDocumentation",
										"src": "240:66:15",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "320:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "331:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "324:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2060,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "324:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "341:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "334:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2062,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "334:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:20:15"
									},
									"returnParameters": {
										"id": 2067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "367:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2065,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "367:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:8:15"
									},
									"scope": 2160,
									"src": "311:101:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2093,
										"nodeType": "Block",
										"src": "554:37:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2088,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2086,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2079,
															"src": "571:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2087,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2081,
															"src": "575:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "571:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2090,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2081,
														"src": "583:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "571:13:15",
													"trueExpression": {
														"id": 2089,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2079,
														"src": "579:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2085,
												"id": 2092,
												"nodeType": "Return",
												"src": "564:20:15"
											}
										]
									},
									"documentation": {
										"id": 2077,
										"nodeType": "StructuredDocumentation",
										"src": "418:67:15",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "499:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "510:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "503:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2078,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "520:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "513:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2080,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "513:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:20:15"
									},
									"returnParameters": {
										"id": 2085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2084,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "546:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2083,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "546:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:8:15"
									},
									"scope": 2160,
									"src": "490:101:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2137,
										"nodeType": "Block",
										"src": "796:162:15",
										"statements": [
											{
												"assignments": [
													2105
												],
												"declarations": [
													{
														"constant": false,
														"id": 2105,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "865:1:15",
														"nodeType": "VariableDeclaration",
														"scope": 2137,
														"src": "858:8:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2104,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "858:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2118,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2106,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2097,
																	"src": "870:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2107,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2099,
																	"src": "874:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "870:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2109,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "869:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2112,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2110,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2097,
																				"src": "881:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2111,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2099,
																				"src": "885:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "881:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2113,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "880:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "891:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "880:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2116,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "879:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "869:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "858:35:15"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2119,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2105,
														"src": "910:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2124,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2105,
																						"src": "930:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2123,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "922:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2122,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "922:7:15",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2125,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "922:10:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2126,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "936:3:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "922:17:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "915:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2120,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "915:6:15",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "915:25:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2131,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2129,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2097,
																				"src": "944:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2130,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2099,
																				"src": "948:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "944:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2132,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "943:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "915:35:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2134,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "914:37:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "910:41:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2103,
												"id": 2136,
												"nodeType": "Return",
												"src": "903:48:15"
											}
										]
									},
									"documentation": {
										"id": 2095,
										"nodeType": "StructuredDocumentation",
										"src": "597:126:15",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "737:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "752:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "745:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2096,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "745:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2099,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "762:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "755:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2098,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "755:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:20:15"
									},
									"returnParameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "788:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2101,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "788:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:8:15"
									},
									"scope": 2160,
									"src": "728:230:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2158,
										"nodeType": "Block",
										"src": "1102:158:15",
										"statements": [
											{
												"id": 2157,
												"nodeType": "UncheckedBlock",
												"src": "1112:142:15",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2148,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2141,
																			"src": "1227:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1232:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1227:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1240:2:15",
																		"subExpression": {
																			"id": 2152,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2141,
																			"src": "1241:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1227:15:15",
																	"trueExpression": {
																		"id": 2151,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2141,
																		"src": "1236:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1219:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2146,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1219:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 2155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1219:24:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2145,
														"id": 2156,
														"nodeType": "Return",
														"src": "1212:31:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2139,
										"nodeType": "StructuredDocumentation",
										"src": "964:78:15",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1056:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2141,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1067:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "1060:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2140,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:10:15"
									},
									"returnParameters": {
										"id": 2145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "1093:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:9:15"
									},
									"scope": 2160,
									"src": "1047:213:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2161,
							"src": "215:1047:15",
							"usedErrors": []
						}
					],
					"src": "109:1154:15"
				},
				"id": 15
			},
			"TokenBound/ERC6551Account.sol": {
				"ast": {
					"absolutePath": "TokenBound/ERC6551Account.sol",
					"exportedSymbols": {
						"Create2": [
							459
						],
						"ECDSA": [
							1054
						],
						"ERC1155Holder": [
							105
						],
						"ERC1155Receiver": [
							139
						],
						"ERC165": [
							1177
						],
						"ERC6551Account": [
							2333
						],
						"ERC6551AccountLib": [
							2482
						],
						"ERC6551BytecodeLib": [
							2515
						],
						"ERC721Holder": [
							378
						],
						"IERC1155Receiver": [
							54
						],
						"IERC1271": [
							13
						],
						"IERC165": [
							1189
						],
						"IERC20": [
							217
						],
						"IERC6551Account": [
							2384
						],
						"IERC6551AccountProxy": [
							2341
						],
						"IERC721": [
							333
						],
						"IERC721Receiver": [
							351
						],
						"Math": [
							2055
						],
						"MinimalReceiver": [
							2529
						],
						"SignatureChecker": [
							1153
						],
						"SignedMath": [
							2160
						],
						"Strings": [
							688
						]
					},
					"id": 2334,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2162,
							"literals": [
								"solidity",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "42:23:16"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 2163,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2334,
							"sourceUnit": 334,
							"src": "69:58:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2164,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2334,
							"sourceUnit": 218,
							"src": "129:56:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2165,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2334,
							"sourceUnit": 218,
							"src": "187:56:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1271.sol",
							"file": "@openzeppelin/contracts/interfaces/IERC1271.sol",
							"id": 2166,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2334,
							"sourceUnit": 14,
							"src": "245:57:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
							"id": 2167,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2334,
							"sourceUnit": 1154,
							"src": "304:73:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"id": 2168,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2334,
							"sourceUnit": 55,
							"src": "381:68:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 2169,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2334,
							"sourceUnit": 1190,
							"src": "451:65:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "TokenBound/interfaces/IERC6551Account.sol",
							"file": "./interfaces/IERC6551Account.sol",
							"id": 2170,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2334,
							"sourceUnit": 2385,
							"src": "518:42:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "TokenBound/lib/MinimalReceiver.sol",
							"file": "./lib/MinimalReceiver.sol",
							"id": 2171,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2334,
							"sourceUnit": 2530,
							"src": "564:35:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "TokenBound/lib/ERC6551AccountLib.sol",
							"file": "./lib/ERC6551AccountLib.sol",
							"id": 2172,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2334,
							"sourceUnit": 2483,
							"src": "601:37:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2173,
										"name": "IERC165",
										"nameLocations": [
											"669:7:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1189,
										"src": "669:7:16"
									},
									"id": 2174,
									"nodeType": "InheritanceSpecifier",
									"src": "669:7:16"
								},
								{
									"baseName": {
										"id": 2175,
										"name": "IERC1271",
										"nameLocations": [
											"678:8:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 13,
										"src": "678:8:16"
									},
									"id": 2176,
									"nodeType": "InheritanceSpecifier",
									"src": "678:8:16"
								},
								{
									"baseName": {
										"id": 2177,
										"name": "IERC6551Account",
										"nameLocations": [
											"688:15:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2384,
										"src": "688:15:16"
									},
									"id": 2178,
									"nodeType": "InheritanceSpecifier",
									"src": "688:15:16"
								}
							],
							"canonicalName": "ERC6551Account",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2333,
							"linearizedBaseContracts": [
								2333,
								2384,
								13,
								1189
							],
							"name": "ERC6551Account",
							"nameLocation": "651:14:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2383
									],
									"constant": false,
									"functionSelector": "affed0e0",
									"id": 2180,
									"mutability": "mutable",
									"name": "nonce",
									"nameLocation": "726:5:16",
									"nodeType": "VariableDeclaration",
									"scope": 2333,
									"src": "711:20:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2179,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "711:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2353
									],
									"body": {
										"id": 2183,
										"nodeType": "Block",
										"src": "767:2:16",
										"statements": []
									},
									"id": 2184,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "747:2:16"
									},
									"returnParameters": {
										"id": 2182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "767:0:16"
									},
									"scope": 2333,
									"src": "740:29:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2364
									],
									"body": {
										"id": 2232,
										"nodeType": "Block",
										"src": "927:358:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2196,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "946:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "950:6:16",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "946:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2198,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2280,
																	"src": "960:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "960:7:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "946:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420746f6b656e206f776e6572",
															"id": 2201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "969:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9",
																"typeString": "literal_string \"Not token owner\""
															},
															"value": "Not token owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9",
																"typeString": "literal_string \"Not token owner\""
															}
														],
														"id": 2195,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "938:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "938:49:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2203,
												"nodeType": "ExpressionStatement",
												"src": "938:49:16"
											},
											{
												"expression": {
													"id": 2205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": true,
													"src": "1000:7:16",
													"subExpression": {
														"id": 2204,
														"name": "nonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2180,
														"src": "1002:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2206,
												"nodeType": "ExpressionStatement",
												"src": "1000:7:16"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2208,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2186,
															"src": "1045:2:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2209,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2188,
															"src": "1049:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2210,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2190,
															"src": "1056:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 2207,
														"name": "TransactionExecuted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2350,
														"src": "1025:19:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 2211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1025:36:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2212,
												"nodeType": "EmitStatement",
												"src": "1020:41:16"
											},
											{
												"assignments": [
													2214
												],
												"declarations": [
													{
														"constant": false,
														"id": 2214,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1079:7:16",
														"nodeType": "VariableDeclaration",
														"scope": 2232,
														"src": "1074:12:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2213,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1074:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2215,
												"nodeType": "VariableDeclarationStatement",
												"src": "1074:12:16"
											},
											{
												"expression": {
													"id": 2225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 2216,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2214,
																"src": "1098:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 2217,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2193,
																"src": "1107:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"id": 2218,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "1097:17:16",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2223,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2190,
																"src": "1139:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																],
																"expression": {
																	"id": 2219,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2186,
																	"src": "1117:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1120:4:16",
																"memberName": "call",
																"nodeType": "MemberAccess",
																"src": "1117:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																}
															},
															"id": 2222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"names": [
																"value"
															],
															"nodeType": "FunctionCallOptions",
															"options": [
																{
																	"id": 2221,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2188,
																	"src": "1132:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"src": "1117:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1117:27:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"src": "1097:47:16",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2226,
												"nodeType": "ExpressionStatement",
												"src": "1097:47:16"
											},
											{
												"condition": {
													"id": 2228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1161:8:16",
													"subExpression": {
														"id": 2227,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2214,
														"src": "1162:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2231,
												"nodeType": "IfStatement",
												"src": "1157:121:16",
												"trueBody": {
													"id": 2230,
													"nodeType": "Block",
													"src": "1171:107:16",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "1195:72:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "1225:6:16"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1233:2:16",
																							"type": "",
																							"value": "32"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1221:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1221:15:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "1244:6:16"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1238:5:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1238:13:16"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1214:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1214:38:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1214:38:16"
																	}
																]
															},
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 2193,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1225:6:16",
																	"valueSize": 1
																},
																{
																	"declaration": 2193,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1244:6:16",
																	"valueSize": 1
																}
															],
															"id": 2229,
															"nodeType": "InlineAssembly",
															"src": "1186:81:16"
														}
													]
												}
											}
										]
									},
									"functionSelector": "9e5d4c49",
									"id": 2233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "executeCall",
									"nameLocation": "786:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2186,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "816:2:16",
												"nodeType": "VariableDeclaration",
												"scope": 2233,
												"src": "808:10:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "808:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "837:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2233,
												"src": "829:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "829:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "868:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2233,
												"src": "853:19:16",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2189,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "853:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "797:82:16"
									},
									"returnParameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "919:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2233,
												"src": "906:19:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2192,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "906:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "905:21:16"
									},
									"scope": 2333,
									"src": "777:508:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2373
									],
									"body": {
										"id": 2246,
										"nodeType": "Block",
										"src": "1442:51:16",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2242,
															"name": "ERC6551AccountLib",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2482,
															"src": "1460:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC6551AccountLib_$2482_$",
																"typeString": "type(library ERC6551AccountLib)"
															}
														},
														"id": 2243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:5:16",
														"memberName": "token",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2459,
														"src": "1460:23:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_address_$_t_uint256_$",
															"typeString": "function () view returns (uint256,address,uint256)"
														}
													},
													"id": 2244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1460:25:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$_t_uint256_$",
														"typeString": "tuple(uint256,address,uint256)"
													}
												},
												"functionReturnParameters": 2241,
												"id": 2245,
												"nodeType": "Return",
												"src": "1453:32:16"
											}
										]
									},
									"functionSelector": "fc0c546a",
									"id": 2247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "token",
									"nameLocation": "1302:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1307:2:16"
									},
									"returnParameters": {
										"id": 2241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "1374:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1374:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "1396:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1396:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "1418:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1418:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1359:77:16"
									},
									"scope": 2333,
									"src": "1293:200:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2378
									],
									"body": {
										"id": 2279,
										"nodeType": "Block",
										"src": "1548:208:16",
										"statements": [
											{
												"assignments": [
													2253,
													2255,
													2257
												],
												"declarations": [
													{
														"constant": false,
														"id": 2253,
														"mutability": "mutable",
														"name": "chainId",
														"nameLocation": "1568:7:16",
														"nodeType": "VariableDeclaration",
														"scope": 2279,
														"src": "1560:15:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2252,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1560:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2255,
														"mutability": "mutable",
														"name": "tokenContract",
														"nameLocation": "1585:13:16",
														"nodeType": "VariableDeclaration",
														"scope": 2279,
														"src": "1577:21:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2254,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1577:7:16",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2257,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "1608:7:16",
														"nodeType": "VariableDeclaration",
														"scope": 2279,
														"src": "1600:15:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2256,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1600:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2261,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2258,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "1619:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC6551Account_$2333",
																"typeString": "contract ERC6551Account"
															}
														},
														"id": 2259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1624:5:16",
														"memberName": "token",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2247,
														"src": "1619:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$_t_address_$_t_uint256_$",
															"typeString": "function () view external returns (uint256,address,uint256)"
														}
													},
													"id": 2260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1619:12:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$_t_uint256_$",
														"typeString": "tuple(uint256,address,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1559:72:16"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2262,
														"name": "chainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2253,
														"src": "1646:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 2263,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1657:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1663:7:16",
														"memberName": "chainid",
														"nodeType": "MemberAccess",
														"src": "1657:13:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1646:24:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2271,
												"nodeType": "IfStatement",
												"src": "1642:47:16",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2268,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1687:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1679:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2266,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1679:7:16",
																"typeDescriptions": {}
															}
														},
														"id": 2269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1679:10:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"functionReturnParameters": 2251,
													"id": 2270,
													"nodeType": "Return",
													"src": "1672:17:16"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2276,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2257,
															"src": "1740:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2273,
																	"name": "tokenContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2255,
																	"src": "1717:13:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2272,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "1709:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$333_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 2274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1709:22:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$333",
																"typeString": "contract IERC721"
															}
														},
														"id": 2275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1732:7:16",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 266,
														"src": "1709:30:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view external returns (address)"
														}
													},
													"id": 2277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1709:39:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2251,
												"id": 2278,
												"nodeType": "Return",
												"src": "1702:46:16"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 2280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1510:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1515:2:16"
									},
									"returnParameters": {
										"id": 2251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2280,
												"src": "1539:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1539:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1538:9:16"
									},
									"scope": 2333,
									"src": "1501:255:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1188
									],
									"body": {
										"id": 2302,
										"nodeType": "Block",
										"src": "1838:133:16",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																},
																"id": 2292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2287,
																	"name": "interfaceId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2282,
																	"src": "1857:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 2289,
																				"name": "IERC165",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1189,
																				"src": "1877:7:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC165_$1189_$",
																					"typeString": "type(contract IERC165)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_contract$_IERC165_$1189_$",
																					"typeString": "type(contract IERC165)"
																				}
																			],
																			"id": 2288,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "1872:4:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1872:13:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1189",
																			"typeString": "type(contract IERC165)"
																		}
																	},
																	"id": 2291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1886:11:16",
																	"memberName": "interfaceId",
																	"nodeType": "MemberAccess",
																	"src": "1872:25:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"src": "1857:40:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																},
																"id": 2298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2293,
																	"name": "interfaceId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2282,
																	"src": "1914:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 2295,
																				"name": "IERC6551Account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2384,
																				"src": "1934:15:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC6551Account_$2384_$",
																					"typeString": "type(contract IERC6551Account)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_contract$_IERC6551Account_$2384_$",
																					"typeString": "type(contract IERC6551Account)"
																				}
																			],
																			"id": 2294,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "1929:4:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1929:21:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_contract$_IERC6551Account_$2384",
																			"typeString": "type(contract IERC6551Account)"
																		}
																	},
																	"id": 2297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1951:11:16",
																	"memberName": "interfaceId",
																	"nodeType": "MemberAccess",
																	"src": "1929:33:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"src": "1914:48:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1857:105:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 2300,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1856:107:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2286,
												"id": 2301,
												"nodeType": "Return",
												"src": "1849:114:16"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 2303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1773:17:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2282,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1798:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2303,
												"src": "1791:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2281,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1791:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1790:20:16"
									},
									"returnParameters": {
										"id": 2286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2303,
												"src": "1832:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2284,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1832:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1831:6:16"
									},
									"scope": 2333,
									"src": "1764:207:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										12
									],
									"body": {
										"id": 2331,
										"nodeType": "Block",
										"src": "2117:211:16",
										"statements": [
											{
												"assignments": [
													2313
												],
												"declarations": [
													{
														"constant": false,
														"id": 2313,
														"mutability": "mutable",
														"name": "isValid",
														"nameLocation": "2133:7:16",
														"nodeType": "VariableDeclaration",
														"scope": 2331,
														"src": "2128:12:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2312,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2128:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2321,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2316,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2280,
																"src": "2180:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2180:7:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2318,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2305,
															"src": "2189:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2319,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2307,
															"src": "2195:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2314,
															"name": "SignatureChecker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "2143:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SignatureChecker_$1153_$",
																"typeString": "type(library SignatureChecker)"
															}
														},
														"id": 2315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2160:19:16",
														"memberName": "isValidSignatureNow",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1100,
														"src": "2143:36:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (address,bytes32,bytes memory) view returns (bool)"
														}
													},
													"id": 2320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2143:62:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2128:77:16"
											},
											{
												"condition": {
													"id": 2322,
													"name": "isValid",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2313,
													"src": "2222:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2328,
												"nodeType": "IfStatement",
												"src": "2218:81:16",
												"trueBody": {
													"id": 2327,
													"nodeType": "Block",
													"src": "2231:68:16",
													"statements": [
														{
															"expression": {
																"expression": {
																	"expression": {
																		"id": 2323,
																		"name": "IERC1271",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 13,
																		"src": "2253:8:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC1271_$13_$",
																			"typeString": "type(contract IERC1271)"
																		}
																	},
																	"id": 2324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2262:16:16",
																	"memberName": "isValidSignature",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 12,
																	"src": "2253:25:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"
																	}
																},
																"id": 2325,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2279:8:16",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "2253:34:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"functionReturnParameters": 2311,
															"id": 2326,
															"nodeType": "Return",
															"src": "2246:41:16"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "",
													"id": 2329,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2318:2:16",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 2311,
												"id": 2330,
												"nodeType": "Return",
												"src": "2311:9:16"
											}
										]
									},
									"functionSelector": "1626ba7e",
									"id": 2332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValidSignature",
									"nameLocation": "1988:16:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2305,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2013:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "2005:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2304,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2005:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2307,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2032:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "2019:22:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2306,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2019:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2004:38:16"
									},
									"returnParameters": {
										"id": 2311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2310,
												"mutability": "mutable",
												"name": "magicValue",
												"nameLocation": "2100:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "2093:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2309,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2093:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2092:19:16"
									},
									"scope": 2333,
									"src": "1979:349:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2334,
							"src": "642:1689:16",
							"usedErrors": []
						}
					],
					"src": "42:2289:16"
				},
				"id": 16
			},
			"TokenBound/interfaces/IERC6551Account.sol": {
				"ast": {
					"absolutePath": "TokenBound/interfaces/IERC6551Account.sol",
					"exportedSymbols": {
						"IERC6551Account": [
							2384
						],
						"IERC6551AccountProxy": [
							2341
						]
					},
					"id": 2385,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2335,
							"literals": [
								"solidity",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC6551AccountProxy",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2341,
							"linearizedBaseContracts": [
								2341
							],
							"name": "IERC6551AccountProxy",
							"nameLocation": "70:20:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "5c60da1b",
									"id": 2340,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "107:14:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "121:2:17"
									},
									"returnParameters": {
										"id": 2339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2340,
												"src": "147:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "147:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "146:9:17"
									},
									"scope": 2341,
									"src": "98:58:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2385,
							"src": "60:99:17",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC6551Account",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2342,
								"nodeType": "StructuredDocumentation",
								"src": "163:68:17",
								"text": "@dev the ERC-165 identifier for this interface is `0xeff4d378`"
							},
							"fullyImplemented": false,
							"id": 2384,
							"linearizedBaseContracts": [
								2384
							],
							"name": "IERC6551Account",
							"nameLocation": "241:15:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "47d99ad340f52da66535aff7e10da1ceb85a32bcbd9fa1c42314d194545e14d2",
									"id": 2350,
									"name": "TransactionExecuted",
									"nameLocation": "270:19:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2344,
												"indexed": true,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "306:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "290:22:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "290:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2346,
												"indexed": true,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "330:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "314:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "314:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2348,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "343:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "337:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2347,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "337:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "289:59:17"
									},
									"src": "264:85:17"
								},
								{
									"id": 2353,
									"implemented": false,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "364:2:17"
									},
									"returnParameters": {
										"id": 2352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "383:0:17"
									},
									"scope": 2384,
									"src": "357:27:17",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9e5d4c49",
									"id": 2364,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "executeCall",
									"nameLocation": "401:11:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2355,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:17",
												"nodeType": "VariableDeclaration",
												"scope": 2364,
												"src": "423:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "423:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2357,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "452:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2364,
												"src": "444:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "444:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2359,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "483:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2364,
												"src": "468:19:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2358,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "468:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "412:82:17"
									},
									"returnParameters": {
										"id": 2363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2364,
												"src": "521:12:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2361,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "521:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "520:14:17"
									},
									"scope": 2384,
									"src": "392:143:17",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fc0c546a",
									"id": 2373,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token",
									"nameLocation": "552:5:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "557:2:17"
									},
									"returnParameters": {
										"id": 2372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2367,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "632:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "624:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2369,
												"mutability": "mutable",
												"name": "tokenContract",
												"nameLocation": "662:13:17",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "654:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "698:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "690:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "690:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "609:107:17"
									},
									"scope": 2384,
									"src": "543:174:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8da5cb5b",
									"id": 2378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "734:5:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "739:2:17"
									},
									"returnParameters": {
										"id": 2377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "765:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "764:9:17"
									},
									"scope": 2384,
									"src": "725:49:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "affed0e0",
									"id": 2383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonce",
									"nameLocation": "791:5:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:17"
									},
									"returnParameters": {
										"id": 2382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2383,
												"src": "822:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:17"
									},
									"scope": 2384,
									"src": "782:49:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2385,
							"src": "231:603:17",
							"usedErrors": []
						}
					],
					"src": "33:801:17"
				},
				"id": 17
			},
			"TokenBound/lib/ERC6551AccountLib.sol": {
				"ast": {
					"absolutePath": "TokenBound/lib/ERC6551AccountLib.sol",
					"exportedSymbols": {
						"Create2": [
							459
						],
						"ERC6551AccountLib": [
							2482
						],
						"ERC6551BytecodeLib": [
							2515
						]
					},
					"id": 2483,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2386,
							"literals": [
								"solidity",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:18"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Create2.sol",
							"file": "@openzeppelin/contracts/utils/Create2.sol",
							"id": 2387,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2483,
							"sourceUnit": 460,
							"src": "60:51:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "TokenBound/lib/ERC6551BytecodeLib.sol",
							"file": "./ERC6551BytecodeLib.sol",
							"id": 2388,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2483,
							"sourceUnit": 2516,
							"src": "113:34:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC6551AccountLib",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2482,
							"linearizedBaseContracts": [
								2482
							],
							"name": "ERC6551AccountLib",
							"nameLocation": "159:17:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2428,
										"nodeType": "Block",
										"src": "415:349:18",
										"statements": [
											{
												"assignments": [
													2406
												],
												"declarations": [
													{
														"constant": false,
														"id": 2406,
														"mutability": "mutable",
														"name": "bytecodeHash",
														"nameLocation": "434:12:18",
														"nodeType": "VariableDeclaration",
														"scope": 2428,
														"src": "426:20:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2405,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "426:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2417,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2410,
																	"name": "implementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2392,
																	"src": "526:14:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2411,
																	"name": "chainId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2394,
																	"src": "559:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2412,
																	"name": "tokenContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2396,
																	"src": "585:13:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2413,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2398,
																	"src": "617:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2414,
																	"name": "_salt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2400,
																	"src": "643:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2408,
																	"name": "ERC6551BytecodeLib",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2515,
																	"src": "473:18:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC6551BytecodeLib_$2515_$",
																		"typeString": "type(library ERC6551BytecodeLib)"
																	}
																},
																"id": 2409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "492:15:18",
																"memberName": "getCreationCode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2514,
																"src": "473:34:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (address,uint256,address,uint256,uint256) pure returns (bytes memory)"
																}
															},
															"id": 2415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "473:190:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2407,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "449:9:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "449:225:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "426:248:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2422,
																	"name": "_salt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2400,
																	"src": "725:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "717:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2420,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "717:7:18",
																	"typeDescriptions": {}
																}
															},
															"id": 2423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "717:14:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2424,
															"name": "bytecodeHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2406,
															"src": "733:12:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2425,
															"name": "registry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2390,
															"src": "747:8:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2418,
															"name": "Create2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "694:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Create2_$459_$",
																"typeString": "type(library Create2)"
															}
														},
														"id": 2419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "702:14:18",
														"memberName": "computeAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 458,
														"src": "694:22:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (bytes32,bytes32,address) pure returns (address)"
														}
													},
													"id": 2426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "694:62:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2404,
												"id": 2427,
												"nodeType": "Return",
												"src": "687:69:18"
											}
										]
									},
									"id": 2429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeAddress",
									"nameLocation": "193:14:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2390,
												"mutability": "mutable",
												"name": "registry",
												"nameLocation": "226:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "218:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "218:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2392,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "253:14:18",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "245:22:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "245:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "286:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "278:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "278:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2396,
												"mutability": "mutable",
												"name": "tokenContract",
												"nameLocation": "312:13:18",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "304:21:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "304:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2398,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "344:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "336:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "336:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2400,
												"mutability": "mutable",
												"name": "_salt",
												"nameLocation": "370:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "362:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "362:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "207:175:18"
									},
									"returnParameters": {
										"id": 2404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "406:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:9:18"
									},
									"scope": 2482,
									"src": "184:580:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2458,
										"nodeType": "Block",
										"src": "921:274:18",
										"statements": [
											{
												"assignments": [
													2439
												],
												"declarations": [
													{
														"constant": false,
														"id": 2439,
														"mutability": "mutable",
														"name": "footer",
														"nameLocation": "945:6:18",
														"nodeType": "VariableDeclaration",
														"scope": 2458,
														"src": "932:19:18",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2438,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "932:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2444,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "30783630",
															"id": 2442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "964:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_96_by_1",
																"typeString": "int_const 96"
															},
															"value": "0x60"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_96_by_1",
																"typeString": "int_const 96"
															}
														],
														"id": 2441,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "954:9:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2440,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "958:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2443,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "954:15:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "932:37:18"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "991:130:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "address",
																			"nodeType": "YulIdentifier",
																			"src": "1069:7:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1069:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "footer",
																				"nodeType": "YulIdentifier",
																				"src": "1084:6:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1092:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1080:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1080:17:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1099:4:18",
																		"type": "",
																		"value": "0x4d"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1105:4:18",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "extcodecopy",
																	"nodeType": "YulIdentifier",
																	"src": "1057:11:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1057:53:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1057:53:18"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2439,
														"isOffset": false,
														"isSlot": false,
														"src": "1084:6:18",
														"valueSize": 1
													}
												],
												"id": 2445,
												"nodeType": "InlineAssembly",
												"src": "982:139:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2448,
															"name": "footer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2439,
															"src": "1151:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"id": 2450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1160:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2449,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1160:7:18",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 2452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1169:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2451,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1169:7:18",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 2454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1178:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2453,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1178:7:18",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 2455,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1159:27:18",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
																"typeString": "tuple(type(uint256),type(address),type(uint256))"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
																"typeString": "tuple(type(uint256),type(address),type(uint256))"
															}
														],
														"expression": {
															"id": 2446,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "1140:3:18",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 2447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1144:6:18",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "1140:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 2456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1140:47:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_payable_$_t_uint256_$",
														"typeString": "tuple(uint256,address payable,uint256)"
													}
												},
												"functionReturnParameters": 2437,
												"id": 2457,
												"nodeType": "Return",
												"src": "1133:54:18"
											}
										]
									},
									"id": 2459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "token",
									"nameLocation": "781:5:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "786:2:18"
									},
									"returnParameters": {
										"id": 2437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2459,
												"src": "853:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "853:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2459,
												"src": "875:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2459,
												"src": "897:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "897:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:77:18"
									},
									"scope": 2482,
									"src": "772:423:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2480,
										"nodeType": "Block",
										"src": "1251:262:18",
										"statements": [
											{
												"assignments": [
													2465
												],
												"declarations": [
													{
														"constant": false,
														"id": 2465,
														"mutability": "mutable",
														"name": "footer",
														"nameLocation": "1275:6:18",
														"nodeType": "VariableDeclaration",
														"scope": 2480,
														"src": "1262:19:18",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2464,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1262:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2470,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "30783230",
															"id": 2468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1294:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "0x20"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															}
														],
														"id": 2467,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1284:9:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2466,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1288:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2469,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1284:15:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1262:37:18"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1321:136:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "address",
																			"nodeType": "YulIdentifier",
																			"src": "1405:7:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1405:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "footer",
																				"nodeType": "YulIdentifier",
																				"src": "1420:6:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1428:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1416:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1416:17:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1435:4:18",
																		"type": "",
																		"value": "0x2d"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1441:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "extcodecopy",
																	"nodeType": "YulIdentifier",
																	"src": "1393:11:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1393:53:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1393:53:18"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2465,
														"isOffset": false,
														"isSlot": false,
														"src": "1420:6:18",
														"valueSize": 1
													}
												],
												"id": 2471,
												"nodeType": "InlineAssembly",
												"src": "1312:145:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2474,
															"name": "footer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2465,
															"src": "1487:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"id": 2476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1496:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2475,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1496:7:18",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 2477,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1495:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															}
														],
														"expression": {
															"id": 2472,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "1476:3:18",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 2473,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1480:6:18",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "1476:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 2478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1476:29:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2463,
												"id": 2479,
												"nodeType": "Return",
												"src": "1469:36:18"
											}
										]
									},
									"id": 2481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "salt",
									"nameLocation": "1212:4:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1216:2:18"
									},
									"returnParameters": {
										"id": 2463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2481,
												"src": "1242:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1241:9:18"
									},
									"scope": 2482,
									"src": "1203:310:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2483,
							"src": "151:1365:18",
							"usedErrors": []
						}
					],
					"src": "33:1483:18"
				},
				"id": 18
			},
			"TokenBound/lib/ERC6551BytecodeLib.sol": {
				"ast": {
					"absolutePath": "TokenBound/lib/ERC6551BytecodeLib.sol",
					"exportedSymbols": {
						"ERC6551BytecodeLib": [
							2515
						]
					},
					"id": 2516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2484,
							"literals": [
								"solidity",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:19"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC6551BytecodeLib",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2515,
							"linearizedBaseContracts": [
								2515
							],
							"name": "ERC6551BytecodeLib",
							"nameLocation": "68:18:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2513,
										"nodeType": "Block",
										"src": "308:294:19",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "3d60ad80600a3d3981f3363d3d373d3d3d363d73",
															"id": 2501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "374:45:19",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_836adec1fae8cb2fe2fc9b187068d52c49d3f7b5116f9fb1b00c7488ba5e7190",
																"typeString": "literal_string hex\"3d60ad80600a3d3981f3363d3d373d3d3d363d73\""
															}
														},
														{
															"id": 2502,
															"name": "implementation_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2486,
															"src": "438:15:19",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "5af43d82803e903d91602b57fd5bf3",
															"id": 2503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "472:35:19",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_11a195f66c9175f46895bae2006d40848a680c7068b9fc4af248ff9a54a47e45",
																"typeString": "literal_string hex\"5af43d82803e903d91602b57fd5bf3\""
															}
														},
														{
															"arguments": [
																{
																	"id": 2506,
																	"name": "salt_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2494,
																	"src": "537:5:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2507,
																	"name": "chainId_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2488,
																	"src": "544:8:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2508,
																	"name": "tokenContract_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2490,
																	"src": "554:14:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2509,
																	"name": "tokenId_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2492,
																	"src": "570:8:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2504,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "526:3:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2505,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "530:6:19",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "526:10:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "526:53:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_836adec1fae8cb2fe2fc9b187068d52c49d3f7b5116f9fb1b00c7488ba5e7190",
																"typeString": "literal_string hex\"3d60ad80600a3d3981f3363d3d373d3d3d363d73\""
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_stringliteral_11a195f66c9175f46895bae2006d40848a680c7068b9fc4af248ff9a54a47e45",
																"typeString": "literal_string hex\"5af43d82803e903d91602b57fd5bf3\""
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2499,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "339:3:19",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 2500,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "343:12:19",
														"memberName": "encodePacked",
														"nodeType": "MemberAccess",
														"src": "339:16:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 2511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "339:255:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2498,
												"id": 2512,
												"nodeType": "Return",
												"src": "319:275:19"
											}
										]
									},
									"id": 2514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCreationCode",
									"nameLocation": "103:15:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2486,
												"mutability": "mutable",
												"name": "implementation_",
												"nameLocation": "137:15:19",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "129:23:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "129:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2488,
												"mutability": "mutable",
												"name": "chainId_",
												"nameLocation": "171:8:19",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "163:16:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "163:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2490,
												"mutability": "mutable",
												"name": "tokenContract_",
												"nameLocation": "198:14:19",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "190:22:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "190:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2492,
												"mutability": "mutable",
												"name": "tokenId_",
												"nameLocation": "231:8:19",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "223:16:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "223:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2494,
												"mutability": "mutable",
												"name": "salt_",
												"nameLocation": "258:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "250:13:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "250:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "118:152:19"
									},
									"returnParameters": {
										"id": 2498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "294:12:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2496,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "294:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "293:14:19"
									},
									"scope": 2515,
									"src": "94:508:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2516,
							"src": "60:545:19",
							"usedErrors": []
						}
					],
					"src": "33:572:19"
				},
				"id": 19
			},
			"TokenBound/lib/MinimalReceiver.sol": {
				"ast": {
					"absolutePath": "TokenBound/lib/MinimalReceiver.sol",
					"exportedSymbols": {
						"ERC1155Holder": [
							105
						],
						"ERC1155Receiver": [
							139
						],
						"ERC165": [
							1177
						],
						"ERC721Holder": [
							378
						],
						"IERC1155Receiver": [
							54
						],
						"IERC165": [
							1189
						],
						"IERC721Receiver": [
							351
						],
						"MinimalReceiver": [
							2529
						]
					},
					"id": 2530,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2517,
							"literals": [
								"solidity",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "40:23:20"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
							"id": 2518,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2530,
							"sourceUnit": 106,
							"src": "67:71:20",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
							"file": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
							"id": 2519,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2530,
							"sourceUnit": 379,
							"src": "140:69:20",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2520,
										"name": "ERC721Holder",
										"nameLocations": [
											"241:12:20"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "241:12:20"
									},
									"id": 2521,
									"nodeType": "InheritanceSpecifier",
									"src": "241:12:20"
								},
								{
									"baseName": {
										"id": 2522,
										"name": "ERC1155Holder",
										"nameLocations": [
											"255:13:20"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 105,
										"src": "255:13:20"
									},
									"id": 2523,
									"nodeType": "InheritanceSpecifier",
									"src": "255:13:20"
								}
							],
							"canonicalName": "MinimalReceiver",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2529,
							"linearizedBaseContracts": [
								2529,
								105,
								139,
								54,
								1177,
								1189,
								378,
								351
							],
							"name": "MinimalReceiver",
							"nameLocation": "222:15:20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2527,
										"nodeType": "Block",
										"src": "369:2:20",
										"statements": []
									},
									"documentation": {
										"id": 2524,
										"nodeType": "StructuredDocumentation",
										"src": "276:52:20",
										"text": " @dev Allows all Ether transfers"
									},
									"id": 2528,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "341:2:20"
									},
									"returnParameters": {
										"id": 2526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "369:0:20"
									},
									"scope": 2529,
									"src": "334:37:20",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 2530,
							"src": "213:161:20",
							"usedErrors": []
						}
					],
					"src": "40:334:20"
				},
				"id": 20
			}
		}
	}
}